{"version":3,"file":"overview.js","sources":["pages/overview/overview.vue","pages/overview/overview.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <view class=\"calendar-section\">\n      <view class=\"month-header\">\n        <text class=\"month-title\">{{ currentYear }}年{{ currentMonth }}月</text>\n        <view class=\"month-controls\">\n          <text class=\"arrow\" @tap=\"changeMonth(-1)\">←</text>\n          <text class=\"arrow\" @tap=\"changeMonth(1)\">→</text>\n        </view>\n      </view>\n      <view class=\"calendar-grid\">\n        <view class=\"weekday-row\">\n          <text class=\"weekday\" v-for=\"(day, index) in weekDays\" :key=\"'weekday-' + index\">{{ day }}</text>\n        </view>\n        <view class=\"days-grid\">\n          <view\n              v-for=\"(day, index) in calendarDays\"\n              :key=\"'day-' + index\"\n              class=\"day-cell\"\n              :class=\"{\n              'today': day.isToday,\n              'selected': selectedDate === day.dateStr,\n              'not-current-month': !day.isCurrentMonth\n            }\"\n              @tap=\"day.isCurrentMonth && selectDate(day)\"\n          >\n            <text class=\"day-number\">{{ day.dayNumber }}</text>\n            <view class=\"habits-count\" v-if=\"day.habits.length > 0\">\n              <text class=\"count\">{{ day.habits.length }}</text>\n            </view>\n          </view>\n        </view>\n      </view>\n    </view>\n\n    <view class=\"notes-section\" v-if=\"selectedDate\">\n      <text class=\"section-title\">{{ formatSelectedDate(selectedDate) }}的打卡记录</text>\n      <view class=\"notes-list\" v-if=\"dailyRecords.length > 0\">\n        <view class=\"tags-wrapper\">\n          <text\n              v-for=\"(record, index) in dailyRecords.filter(r => !r.content)\"\n              :key=\"'tag-' + index\"\n              class=\"habit-tag\"\n              :style=\"{\n              backgroundColor: getCategoryColor(record.habit.category) + '20',\n              color: getCategoryColor(record.habit.category)\n            }\"\n          >{{ record.habit.title }}</text>\n        </view>\n        <view\n            v-for=\"(record, index) in dailyRecords.filter(r => r.content)\"\n            :key=\"'note-' + index\"\n            class=\"note-card\"\n        >\n          <view class=\"note-header\">\n            <text class=\"habit-name\" :style=\"{ color: getCategoryColor(record.habit.category) }\">\n              {{ record.habit.title }}\n            </text>\n            <text class=\"note-date\">{{ formatDate(record.timestamp) }}</text>\n          </view>\n          <view class=\"note-content\">{{ record.content }}</view>\n        </view>\n      </view>\n      <view class=\"empty-notes\" v-else>\n        <text class=\"empty-icon\">📅</text>\n        <text class=\"empty-message\">当日没有打卡记录</text>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport {defineComponent} from 'vue'\n\nexport default defineComponent({\n  data() {\n    const today = new Date()\n    return {\n      weekDays: ['日', '一', '二', '三', '四', '五', '六'],\n      currentYear: today.getFullYear(),\n      currentMonth: today.getMonth() + 1,\n      selectedDate: `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`,\n      allHabits: []\n    }\n  },\n\n  computed: {\n    calendarDays() {\n      const days = []\n      const firstDayOfMonth = new Date(this.currentYear, this.currentMonth - 1, 1)\n      const lastDayOfMonth = new Date(this.currentYear, this.currentMonth, 0)\n      const daysInMonth = lastDayOfMonth.getDate()\n      const firstDayWeekday = firstDayOfMonth.getDay()\n      const prevMonthLastDay = new Date(this.currentYear, this.currentMonth - 1, 0).getDate()\n\n      // 填充上个月的日期\n      for (let i = firstDayWeekday - 1; i >= 0; i--) {\n        const prevMonthDay = prevMonthLastDay - i\n        const prevDate = new Date(this.currentYear, this.currentMonth - 2, prevMonthDay)\n        days.push({\n          dayNumber: prevMonthDay,\n          dateStr: this.formatDateStr(prevDate),\n          habits: [],\n          isCurrentMonth: false\n        })\n      }\n\n      // 填充当前月的日期\n      for (let i = 1; i <= daysInMonth; i++) {\n        const currentDate = new Date(this.currentYear, this.currentMonth - 1, i)\n        const dateStr = this.formatDateStr(currentDate)\n        const habits = this.allHabits.filter(habit =>\n            habit.completed.some(t => {\n              const d = new Date(t)\n              return d.getFullYear() === currentDate.getFullYear() &&\n                  d.getMonth() === currentDate.getMonth() &&\n                  d.getDate() === currentDate.getDate()\n            })\n        )\n        days.push({\n          dayNumber: i,\n          dateStr,\n          habits,\n          isToday: this.isToday(currentDate),\n          isCurrentMonth: true\n        })\n      }\n\n      // 填充下个月的日期\n      const totalDaysNeeded = 42\n      const remainingDays = totalDaysNeeded - days.length\n      for (let i = 1; i <= remainingDays; i++) {\n        const nextDate = new Date(this.currentYear, this.currentMonth, i)\n        days.push({\n          dayNumber: i,\n          dateStr: this.formatDateStr(nextDate),\n          habits: [],\n          isCurrentMonth: false\n        })\n      }\n\n      return days\n    },\n\n    dailyRecords() {\n      if (!this.selectedDate) return []\n\n      return this.allHabits\n          .filter(habit =>\n              habit.completed.some(t => {\n                const d = new Date(t)\n                return this.isSameDate(d, new Date(this.selectedDate))\n              })\n          )\n          .flatMap(habit => {\n            const notes = (habit.notes || []).filter(note => {\n              const noteDate = note.retroactiveInfo\n                  ? new Date(note.retroactiveInfo.retroTimestamp)\n                  : new Date(note.timestamp)\n              return this.isSameDate(noteDate, new Date(this.selectedDate))\n            })\n\n            if (notes.length > 0) {\n              return notes.map(note => ({\n                ...note,\n                habit\n              }))\n            }\n\n            const lastCheckTime = habit.completed.find(t =>\n                this.isSameDate(new Date(t), new Date(this.selectedDate))\n            )\n\n            return [{\n              habit,\n              timestamp: lastCheckTime,\n              content: null\n            }]\n          })\n          .sort((a, b) => b.timestamp - a.timestamp)\n    }\n  },\n\n  methods: {\n    initData() {\n      this.allHabits = uni.getStorageSync('habits') || []\n    },\n\n    selectDate(day) {\n      if (day.dayNumber) {\n        const date = new Date(this.currentYear, this.currentMonth - 1, day.dayNumber)\n        this.selectedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n      }\n    },\n\n    changeMonth(delta) {\n      let newMonth = this.currentMonth + delta\n      let newYear = this.currentYear\n\n      if (newMonth > 12) {\n        newMonth = 1\n        newYear++\n      } else if (newMonth < 1) {\n        newMonth = 12\n        newYear--\n      }\n\n      this.currentMonth = newMonth\n      this.currentYear = newYear\n      this.selectedDate = null\n    },\n\n    formatSelectedDate(dateStr) {\n      const date = new Date(dateStr)\n      return `${date.getMonth() + 1}月${date.getDate()}日`\n    },\n\n    formatDate(timestamp) {\n      const date = new Date(timestamp)\n      return `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n    },\n\n    isToday(date) {\n      const today = new Date()\n      return date.getFullYear() === today.getFullYear() &&\n          date.getMonth() === today.getMonth() &&\n          date.getDate() === today.getDate()\n    },\n\n    getCategoryColor(category) {\n      const colors = {\n        sports: '#FF6B6B',\n        health: '#4ECDC4',\n        work: '#45B7D1',\n        study: '#96CEB4'\n      }\n      return colors[category] || '#808080'\n    },\n\n    formatDateStr(date) {\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n    },\n\n    isSameDate(date1, date2) {\n      return date1.getFullYear() === date2.getFullYear() &&\n          date1.getMonth() === date2.getMonth() &&\n          date1.getDate() === date2.getDate()\n    }\n  },\n\n  onShow() {\n    this.initData()\n    const today = new Date()\n    this.selectedDate = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`\n  }\n})\n</script>\n\n<style>\n.container {\n  background-color: #fff;\n  box-sizing: border-box;\n  color: #2c3e50;\n  min-height: 100vh;\n  padding: 20rpx 40rpx;\n}\n\n.calendar-section {\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0,0,0,.05),0 2rpx 8rpx rgba(0,0,0,.02);\n  margin-bottom: 30rpx;\n  padding: 30rpx;\n}\n\n.month-header {\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30rpx;\n}\n\n.month-header .month-title {\n  color: #2c3e50;\n  font-size: 32rpx;\n  font-weight: 500;\n}\n\n.month-header .month-controls {\n  display: flex;\n  gap: 30rpx;\n}\n\n.month-header .month-controls .arrow {\n  align-items: center;\n  background: #edf0f5;\n  border-radius: 30rpx;\n  color: #2c3e50;\n  display: flex;\n  font-size: 28rpx;\n  height: 60rpx;\n  justify-content: center;\n  transition: all .2s ease;\n  width: 60rpx;\n}\n\n.month-header .month-controls .arrow:active {\n  opacity: .9;\n  transform: scale(.95);\n}\n\n.calendar-grid .weekday-row {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 20rpx;\n}\n\n.calendar-grid .weekday-row .weekday {\n  color: #5c6b7a;\n  font-size: 24rpx;\n  text-align: center;\n  width: 14%;\n}\n\n.calendar-grid .days-grid {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8rpx;\n}\n\n.calendar-grid .days-grid .day-cell {\n  aspect-ratio: 1;\n  background: #e8e8e8;\n  border-radius: 16rpx;\n  box-sizing: border-box;\n  padding: 12rpx;\n  position: relative;\n  transition: all .2s ease;\n  width: calc(14.28% - 8rpx);\n}\n\n.calendar-grid .days-grid .day-cell:active {\n  opacity: .9;\n  transform: scale(.95);\n}\n\n.calendar-grid .days-grid .day-cell:not(.isCurrentMonth) {\n  opacity: .5;\n}\n\n.calendar-grid .days-grid .day-cell .day-number {\n  color: #5c6b7a;\n  font-size: 24rpx;\n  left: 8rpx;\n  position: absolute;\n  top: 8rpx;\n}\n\n.calendar-grid .days-grid .day-cell .habits-count {\n  bottom: 8rpx;\n  position: absolute;\n  right: 8rpx;\n}\n\n.calendar-grid .days-grid .day-cell .habits-count .count {\n  background: var(--theme-color);\n  border-radius: 16rpx;\n  color: #fff;\n  display: inline-block;\n  font-size: 20rpx;\n  height: 32rpx;\n  line-height: 32rpx;\n  min-width: 32rpx;\n  opacity: 1;\n  padding: 0 8rpx;\n  text-align: center;\n}\n\n.calendar-grid .days-grid .day-cell.today {\n  border: 2rpx solid var(--theme-color);\n  opacity: 1;\n}\n\n.calendar-grid .days-grid .day-cell.today::after {\n  background-color: var(--theme-color);\n  border-radius: 50%;\n  bottom: -16rpx;\n  content: \"\";\n  height: 8rpx;\n  left: 50%;\n  opacity: 1;\n  position: absolute;\n  transform: translateX(-50%);\n  width: 8rpx;\n}\n\n.calendar-grid .days-grid .day-cell.selected {\n  background: var(--theme-color);\n  opacity: 1;\n}\n\n.calendar-grid .days-grid .day-cell.selected .day-number {\n  color: #fff;\n}\n\n.calendar-grid .days-grid .day-cell.selected .habits-count .count {\n  background: #fff;\n  color: var(--theme-color);\n  opacity: 1;\n}\n\n.calendar-grid .days-grid .day-cell.not-current-month {\n  background: #edf0f5;\n  opacity: .6;\n  pointer-events: none;\n}\n\n.calendar-grid .days-grid .day-cell.not-current-month .day-number {\n  color: #999;\n}\n\n.notes-section {\n  margin-top: 30rpx;\n}\n\n.notes-section .section-title {\n  color: #2c3e50;\n  display: block;\n  font-size: 32rpx;\n  font-weight: 500;\n  margin-bottom: 20rpx;\n}\n\n.notes-section .notes-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n}\n\n.notes-section .notes-list .tags-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12rpx;\n  margin-bottom: 20rpx;\n}\n\n.notes-section .notes-list .tags-wrapper .habit-tag {\n  border-radius: 100rpx;\n  font-size: 24rpx;\n  font-weight: 500;\n  padding: 8rpx 20rpx;\n}\n\n.notes-section .notes-list .note-card {\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0,0,0,.05),0 2rpx 8rpx rgba(0,0,0,.02);\n  padding: 30rpx;\n}\n\n.notes-section .notes-list .note-card .note-header {\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20rpx;\n}\n\n.notes-section .notes-list .note-card .note-header .habit-name {\n  background: rgba(0,0,0,.05);\n  border-radius: 12rpx;\n  font-size: 28rpx;\n  font-weight: 500;\n  padding: 8rpx 16rpx;\n}\n\n.notes-section .notes-list .note-card .note-header .note-date {\n  color: #5c6b7a;\n  font-size: 24rpx;\n}\n\n.notes-section .notes-list .note-card .note-content {\n  color: #2c3e50;\n  font-size: 28rpx;\n  line-height: 1.5;\n}\n\n.notes-section .empty-notes {\n  align-items: center;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0,0,0,.05),0 2rpx 8rpx rgba(0,0,0,.02);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60rpx 0;\n}\n\n.notes-section .empty-notes .empty-icon {\n  font-size: 80rpx;\n  margin-bottom: 20rpx;\n}\n\n.notes-section .empty-notes .empty-message {\n  color: #5c6b7a;\n  font-size: 28rpx;\n}\n</style>","import MiniProgramPage from '/Users/linsir/Experiments/uni-app/habit-ai-uniapp/habit-ai-uniapp/pages/overview/overview.vue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni"],"mappings":"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"}