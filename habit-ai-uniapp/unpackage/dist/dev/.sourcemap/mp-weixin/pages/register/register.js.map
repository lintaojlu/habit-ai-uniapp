{"version":3,"file":"register.js","sources":["pages/register/register.vue","pages/register/register.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <view class=\"header\">\n      <view class=\"back-button\" @tap=\"goBack\">\n      </view>\n      <text class=\"title\">注册账号</text>\n    </view>\n\n    <view class=\"avatar-section\">\n      <button class=\"avatar-wrapper\" open-type=\"chooseAvatar\" @chooseavatar=\"onChooseAvatar\">\n        <image class=\"avatar\" :src=\"userInfo.avatar_url || defaultavatar_url\" mode=\"aspectFill\"/>\n        <text class=\"tip\">点击选择头像</text>\n      </button>\n    </view>\n\n    <view class=\"form-section\">\n      <view class=\"input-group\">\n        <text class=\"label\">昵称</text>\n        <input\n            type=\"nickname\"\n            class=\"input-field\"\n            placeholder=\"请输入昵称\"\n            @change=\"onnicknameChange\"\n            v-model=\"userInfo.nickname\"\n        />\n      </view>\n\n      <view class=\"input-group\">\n        <text class=\"label\">手机号</text>\n        <input\n            class=\"input-field\"\n            type=\"number\"\n            v-model=\"phone\"\n            placeholder=\"请输入手机号\"\n            maxlength=\"11\"\n        />\n      </view>\n\n      <view class=\"input-group\">\n        <text class=\"label\">密码</text>\n        <input\n            class=\"input-field\"\n            type=\"password\"\n            v-model=\"password\"\n            placeholder=\"请设置密码\"\n            maxlength=\"20\"\n        />\n      </view>\n\n      <view class=\"input-group\">\n        <text class=\"label\">选择AI角色</text>\n        <view class=\"character-list\">\n          <view\n            v-for=\"character in aiCharacters\"\n            :key=\"character.character_id\"\n            class=\"character-item\"\n\n            :class=\"{ 'character-item-active': selectedCharacterId === character.character_id }\"\n            @tap=\"selectCharacter(character)\"\n          >\n            <text class=\"character-icon\">{{ character.icon }}</text>\n            <view class=\"character-info\">\n              <text class=\"character-name\">{{ character.name }}</text>\n              <text class=\"character-desc\">{{ character.description }}</text>\n            </view>\n          </view>\n        </view>\n      </view>\n\n      <view class=\"input-group\">\n        <text class=\"label\">内测码</text>\n        <input\n            class=\"input-field\"\n            type=\"text\"\n            v-model=\"betaCode\"\n            placeholder=\"请输入内测码\"\n        />\n      </view>\n    </view>\n\n    <button class=\"submit-button\" @tap=\"handleRegister\">注册</button>\n  </view>\n</template>\n\n<script>\nimport { apiService } from '@/utils/api.js'\n\nconst defaultavatar_url = 'https://mmbiz.qpic.cn/mmbiz/icTdbqWNOwNRna42FI242Lcia07jQodd2FJGIYQfG0LAJGFxM4FbnQP6yfMxBgJ0F3YRqJCJ1aPAK2dQagdusBZg/0'\n\nexport default {\n  data() {\n    return {\n      defaultavatar_url,\n      userInfo: {\n        avatar_url: '',\n        nickname: '',\n        openId: ''\n      },\n      phone: '',\n      password: '',\n      betaCode: '',\n      aiCharacters: [], // 添加 AI 角色列表\n      selectedCharacterId: '', // 添加选中的角色 ID\n      ai_character_name: '' // 修改默认值为空字符串\n    }\n  },\n  \n  // 添加 created 生命周期钩子\n  created() {\n    this.loadAICharacters()\n  },\n\n  methods: {\n    goBack() {\n      uni.navigateBack()\n    },\n    getUserProfile() {\n      // 使用微信小程序原生的用户信息接口\n      wx.getUserProfile({\n        desc: '用于完善用户资料',\n        success: (res) => {\n          this.userInfo = {\n            avatar_url: res.userInfo.avatar_url,\n            nickname: res.userInfo.nickname\n          }\n\n          uni.showToast({\n            title: '授权成功',\n            icon: 'success'\n          })\n        },\n        fail: (err) => {\n          console.error('获取用户信息失败：', err)\n          uni.showToast({\n            title: '获取信息失败',\n            icon: 'none'\n          })\n        }\n      })\n    },\n\n    onnicknameChange(e) {\n      this.userInfo.nickname = e.detail.value\n    },\n\n    // 添加选择角色的方法\n    selectRole(value) {\n      this.ai_character_name = value\n    },\n\n    async loadAICharacters() {\n      try {\n        const response = await apiService.getAICharacterList()\n        if (response.status === 'success') {\n          console.log('AI 角色列表:', response.data)\n          this.aiCharacters = response.data\n          // 默认选中第一个角色\n          if (this.aiCharacters.length > 0) {\n            this.selectCharacter(this.aiCharacters[0])\n          }\n        }\n        // save to local storage\n        uni.setStorageSync('aiCharacters', response.data)\n      } catch (error) {\n        console.error('加载 AI 角色失败:', error)\n        uni.showToast({\n          title: '加载角色失败',\n          icon: 'none'\n        })\n      }\n    },\n\n    selectCharacter(character) {\n      this.selectedCharacterId = character.character_id\n      this.ai_character_name = character.name\n    },\n\n    async onChooseAvatar(e) {\n      // 微信返回的是 avatarUrl，我们需要转换为 avatar_url\n      const { avatarUrl } = e.detail\n      // 直接设置头像 URL\n      this.userInfo.avatar_url = avatarUrl\n      console.log('选择的头像 URL:', avatarUrl)\n    \n      try {\n        // TODO 获取微信 openid 的代码保持不变 ...\n    \n        uni.showToast({\n          title: '头像设置成功',\n          icon: 'success'\n        })\n      } catch (error) {\n        console.error('获取 openid 失败：', error)\n        uni.showToast({\n          title: '头像设置成功',\n          icon: 'success'\n        })\n      }\n    },\n\n    async handleRegister() {\n      // 表单验证\n      if (!this.userInfo.nickname) {\n        uni.showToast({\n          title: '请输入昵称',\n          icon: 'none'\n        })\n        return\n      }\n    \n      if (!this.phone) {\n        uni.showToast({\n          title: '请输入手机号',\n          icon: 'none'\n        })\n        return\n      }\n    \n      // 验证手机号格式\n      const phoneReg = /^1[3-9]\\d{9}$/\n      if (!phoneReg.test(this.phone)) {\n        uni.showToast({\n          title: '手机号格式不正确',\n          icon: 'none'\n        })\n        return\n      }\n    \n      if (!this.password) {\n        uni.showToast({\n          title: '请设置密码',\n          icon: 'none'\n        })\n        return\n      }\n    \n      if (!this.selectedCharacterId) {\n        uni.showToast({\n          title: '请选择AI角色',\n          icon: 'none'\n        })\n        return\n      }\n\n      if (!this.betaCode) {\n        uni.showToast({\n          title: '请输入内测码',\n          icon: 'none'\n        })\n        return\n      } \n    \n      uni.showLoading({\n        title: '注册中...'\n      })\n    \n      try {\n        console.log('注册参数:', {\n          telephone: this.phone,\n          password: this.password,\n          nickname: this.userInfo.nickname,\n          avatar_url: this.userInfo.avatar_url,\n          wechat_openid: this.userInfo.openId,\n          registration_code: this.betaCode,\n          ai_character_name: this.ai_character_name\n        })\n    \n        const res = await apiService.register({\n          telephone: this.phone,\n          password: this.password,\n          nickname: this.userInfo.nickname,\n          avatar_url: this.userInfo.avatar_url,\n          wechat_openid: this.userInfo.openId,\n          registration_code: this.betaCode,\n          ai_character_name: this.ai_character_name\n        })\n    \n        console.log('注册响应:', res)\n    \n        if (res.status === 'success') {\n          // 清空本地存储\n          uni.clearStorageSync();\n\n          // 保存用户信息\n          this.userInfo.openId = res.openid\n          this.userInfo.nickname = this.userInfo.nickname\n          this.userInfo.avatar_url = this.userInfo.avatar_url\n          this.userInfo.ai_character_name = this.ai_character_name\n          uni.setStorageSync('userInfo', this.userInfo)\n\n          // 保存 token 和用户 ID\n          uni.setStorageSync('telephone', this.phone)\n          uni.setStorageSync('password', this.password)\n          uni.setStorageSync('token', res.token)\n    \n          uni.showToast({\n            title: '注册成功',\n            icon: 'success'\n          })\n    \n          setTimeout(() => {\n            // 在注册成功后的处理逻辑中\n            uni.redirectTo({\n              url: '/pages/guide/guide'\n            })\n          }, 1500)\n        } else {\n          throw new Error(res.message || '注册失败')\n        }\n      } catch (error) {\n        console.error('注册失败:', error)\n        uni.showToast({\n          title: error.message || '注册失败',\n          icon: 'none'\n        })\n      } finally {\n        uni.hideLoading()\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.container {\n  padding: 40rpx;\n  min-height: 100vh;\n  background-color: #fff;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 60rpx;\n  position: relative;\n}\n\n.back-button {\n  position: absolute;\n  left: 0;\n  width: 80rpx;\n  height: 80rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.back-arrow {\n  font-size: 40rpx;\n  color: #2c3e50;\n}\n\n.title {\n  width: 100%;\n  text-align: center;\n  font-size: 36rpx;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\n.avatar-section {\n  display: flex;\n  justify-content: center;\n}\n\n.avatar-wrapper {\n  background: none;\n  border: none;\n  padding: 0;\n  margin: 0;\n  width: 200rpx; /* 减小头像容器大小 */\n  height: 280rpx;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.avatar-wrapper:after {\n  border: none;\n}\n\n.avatar {\n  width: 200rpx; /* 减小头像大小 */\n  height: 200rpx;\n  border-radius: 50%;\n}\n\n/* 添加提示文字样式 */\n.tip {\n  display: block; /* 移除 display: none */\n  font-size: 24rpx;\n  color: #5c6b7a;\n  margin-top: 16rpx;\n}\n\n/* 移除不需要的样式 */\n.nickname-wrapper,\n.nickname-label,\n.nickname-input {\n  display: none;\n}\n\n.nickname-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10rpx;\n  margin-top: 20rpx;\n}\n\n.nickname-label {\n  font-size: 28rpx;\n  color: #5c6b7a;\n}\n\n.nickname-input {\n  width: 300rpx;\n  height: 80rpx;\n  background: #f5f7fa;\n  border-radius: 10rpx;\n  padding: 0 20rpx;\n  font-size: 32rpx;\n  color: #2c3e50;\n  text-align: center;\n}\n\n.form-section {\n  display: flex;\n  flex-direction: column;\n  gap: 40rpx;\n  margin-bottom: 60rpx;\n}\n\n.input-group {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n}\n\n.label {\n  font-size: 28rpx;\n  color: #5c6b7a;\n}\n\n.input-field {\n  height: 100rpx;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  padding: 0 30rpx;\n  font-size: 32rpx;\n  color: #2c3e50;\n}\n\n.submit-button {\n  width: 100%;\n  height: 100rpx;\n  background: var(--theme-color);\n  border-radius: 20rpx;\n  color: #fff;\n  font-size: 32rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.submit-button:active {\n  opacity: 0.9;\n}\n\n.radio-group {\n  display: flex;\n  gap: 20rpx;\n  flex-wrap: wrap;\n}\n\n.radio-item {\n  padding: 20rpx 40rpx;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  font-size: 28rpx;\n  color: #2c3e50;\n}\n\n.radio-item-active {\n  background: var(--theme-color);\n  color: #fff;\n}\n\n.character-list {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n}\n\n.character-item {\n  display: flex;\n  align-items: center;\n  padding: 30rpx;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  gap: 20rpx;\n}\n\n.character-item-active {\n  background: var(--theme-color);\n}\n\n.character-item-active .character-name,\n.character-item-active .character-desc {\n  color: #ffffff;\n}\n\n.character-icon {\n  font-size: 48rpx;\n}\n\n.character-info {\n  flex: 1;\n}\n\n.character-name {\n  font-size: 32rpx;\n  font-weight: bold;\n  color: #2c3e50;\n  margin-bottom: 8rpx;\n}\n\n.character-desc {\n  font-size: 26rpx;\n  color: #5c6b7a;\n}\n\n/* 移除旧的 radio-group 相关样式 */\n</style>","import MiniProgramPage from '/Users/linsir/Experiments/uni-app/habit-ai-uniapp/habit-ai-uniapp/pages/register/register.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","wx","apiService"],"mappings":"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"}