{"version":3,"file":"api.js","sources":["utils/api.js"],"sourcesContent":["// utils/api.js\nconst baseURL = 'http://123.56.229.52:9001';\n// const baseURL = 'https://www.tempoai.top'\n\n// Export the request function\nexport function request(options) {\n    return new Promise((resolve, reject) => {\n        // 获取 token\n        const token = uni.getStorageSync('token');\n        \n        uni.request({\n            url: baseURL + options.url,\n            method: options.method || 'GET',\n            data: options.data || {},\n            header: {\n                'Content-Type': 'application/json',\n                'Authorization': token ? `Bearer ${token}` : '',\n                ...options.header\n            },\n            success: (res) => {\n                console.log(`[API Request] ${options.url} - ${options.method}`, options.data);\n                \n                if (res.statusCode >= 200 && res.statusCode < 300) {\n                    resolve(res.data);\n                } else {\n                    console.error(`[API Response] ${options.url} - Failed:`, res);\n                    reject(res.data || { message: '请求失败' });\n                }\n            },\n            fail: (err) => {\n                console.log(`[API Request] ${options.url} - ${options.method}`, options.data);\n                console.error(`[API Response] ${options.url} - Error:`, err);\n                reject(err || { message: '网络错误' });\n            }\n        });\n    });\n}\n// Mock API 服务，确保所有请求都返回成功\nexport const apiService = {\n    register(userData) {\n        return request({\n            url: '/habit-ai/user/register',\n            method: 'POST',\n            data: userData\n        });\n    },\n    \n    login(loginData) {\n        return request({\n            url: '/habit-ai/user/login',\n            method: 'POST',\n            data: loginData\n        });\n    },\n    \n    getUserInfo() {\n        return request({\n            url: '/habit-ai/user/info',\n            method: 'GET'\n        });\n    },\n    \n    updateUserInfo(userData) {\n        return request({\n            url: '/habit-ai/user/update',\n            method: 'PUT',\n            data: userData\n        });\n    },\n    \n    createHabit(habitData) {\n        return request({\n            url: '/habit-ai/habit/create',\n            method: 'POST',\n            data: habitData\n        });\n    },\n    \n    getHabitInfo(habitId) {\n        return request({\n            url: `/habit-ai/habit/info?habit_id=${habitId}`,\n            method: 'GET'\n        });\n    },\n    \n    updateHabit(habit_id, habitData) {\n        return request({\n            url: '/habit-ai/habit/update',\n            method: 'PUT',\n            data: { habit_id, ...habitData }\n        });\n    },\n    \n    deleteHabit(habitId) {\n        return request({\n            url: '/habit-ai/habit/delete',\n            method: 'DELETE',\n            data: { habit_id: habitId }\n        });\n    },\n    \n    recordHabit(habitId) {\n        return request({\n            url: '/habit-ai/habit/checkin',\n            method: 'POST',\n            data: { habit_id: habitId }\n        });\n    },\n    \n    getHabitStreak(habitId) {\n        return request({\n            url: `/habit-ai/habit/streak?habit_id=${habitId}`,\n            method: 'GET'\n        });\n    },\n    \n    getHabitList() {\n        return request({\n            url: '/habit-ai/habit/list',\n            method: 'GET'\n        });\n    },\n\n    getAICharacterList() {\n        return request({\n            url: '/habit-ai/character/list',\n            method: 'GET'\n        });\n    },\n\n    getLastMessage() {\n        return request({\n            url: `/habit-ai/message/last`,\n            method: 'GET'\n        });\n    },\n    \n    getNewMessage() {\n        return request({\n            url: '/habit-ai/message/new',\n            method: 'GET',\n        });\n    },\n\n    feedback(params) {\n        return request({\n            url: '/habit-ai/feedback',\n            method: 'POST',\n            data: params\n        });\n    }\n};\n\n// 移除示例接口\nexport const getData = (params) => {\n    return request({ url: '/data', method: 'GET', data: params });\n};\n\nexport const postData = (data) => {\n    return request({ url: '/data', method: 'POST', data });\n};"],"names":["uni"],"mappings":"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"}