{"version":3,"names":["_sfc_main","onLaunch","common_vendor","index","__f__","checkLoginStatus","onShow","onHide","methods","checkAndRestoreData","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","habits","backupInfo","wrap","_callee$","_context","prev","next","getStorageSync","length","utils_storage","checkBackupAvailable","available","showModal","title","content","success","res","confirm","result","restoreFromBackup","showToast","icon","stop","token","loginExpireTime","redirectToLogin","expireTime","Date","now","removeStorageSync","setStorageSync"],"sources":["App.vue"],"sourcesContent":["<script>\r\nimport * as utils_storage from \"./utils/storage.js\";\r\n\r\nexport default {\r\n  onLaunch() {\r\n    console.log(\"App Launch\");\r\n    this.checkLoginStatus();\r\n    // this.checkAndRestoreData();\r\n    // utils_storage.checkAutoBackup();\r\n  },\r\n  onShow() {\r\n    console.log(\"App Show\");\r\n  },\r\n  onHide() {\r\n    console.log(\"App Hide\");\r\n    // utils_storage.checkAutoBackup();\r\n  },\r\n  methods: {\r\n    async checkAndRestoreData() {\r\n      const habits = uni.getStorageSync(\"habits\");\r\n      if (!habits || habits.length === 0) {\r\n        const backupInfo = utils_storage.checkBackupAvailable();\r\n        if (backupInfo.available) {\r\n          uni.showModal({\r\n            title: \"发现数据备份\",\r\n            content: \"检测到您有可用的数据备份，是否恢复？\",\r\n            success: (res) => {\r\n              if (res.confirm) {\r\n                const result = utils_storage.restoreFromBackup();\r\n                if (result.success) {\r\n                  uni.showToast({\r\n                    title: \"数据恢复成功\",\r\n                    icon: \"success\"\r\n                  });\r\n                } else {\r\n                  uni.showToast({\r\n                    title: \"数据恢复失败\",\r\n                    icon: \"none\"\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      checkLoginStatus() {\r\n        const token = uni.getStorageSync('token')\r\n        const loginExpireTime = uni.getStorageSync('loginExpireTime')\r\n        \r\n        // 如果没有 token，需要重新登录\r\n        if (!token) {\r\n          this.redirectToLogin()\r\n          return\r\n        }\r\n        \r\n        // 设置 token 过期时间为 30 天\r\n        const expireTime = loginExpireTime || Date.now() + 30 * 24 * 60 * 60 * 1000\r\n        \r\n        // 检查是否过期\r\n        if (Date.now() > expireTime) {\r\n          // 清除登录信息\r\n          uni.removeStorageSync('token')\r\n          uni.removeStorageSync('loginExpireTime')\r\n          this.redirectToLogin()\r\n          return\r\n        }\r\n        else {\r\n          // 更新过期时间为新的 30 天\r\n          uni.setStorageSync('loginExpireTime', Date.now() + 30 * 24 * 60 * 60 * 1000)\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.container, page {\r\n    background-color: #fff;\r\n}\r\n\r\n.container {\r\n    min-height: 100vh;\r\n}\r\n\r\npage {\r\n    --theme-color: #00c988;\r\n    --theme-color-light: #fff;\r\n    --status-bar-height: 25px;\r\n    --top-window-height: 0px;\r\n    --window-top: 0px;\r\n    --window-bottom: 0px;\r\n    --window-left: 0px;\r\n    --window-right: 0px;\r\n    --window-magin: 0px;\r\n}\r\n\r\n[data-c-h=\"true\"] {\r\n    display: none!important;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA,IAAKA,SAAA,GAAU;EACbC,QAAA,WAAAA,SAAA,EAAW;IACTC,aAAA,CAAAC,KAAA,CAAAC,KAAA,wBAAY,YAAY;IACxB,KAAKC,gBAAA,EAAgB;EAGtB;EACDC,MAAA,WAAAA,OAAA,EAAS;IACPJ,aAAA,CAAAC,KAAA,CAAYC,KAAA,mCAAU;EACvB;EACDG,MAAA,WAAAA,OAAA,EAAS;IACPL,aAAA,CAAAC,KAAA,CAAYC,KAAA,mCAAU;EAEvB;EACDI,OAAA,EAAS;IACDC,mBAAA,WAAAA,oBAAA,EAAsB;MAAA,OAAAC,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,UAAA;QAAA,OAAAJ,oBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACpBN,MAAA,GAASZ,aAAA,CAAAC,KAAA,CAAIkB,cAAA,CAAe,QAAQ;cAC1C,IAAI,CAACP,MAAA,IAAUA,MAAA,CAAOQ,MAAA,KAAW,GAAG;gBAC5BP,UAAA,GAAaQ,aAAA,CAAAC,oBAAA;gBACnB,IAAIT,UAAA,CAAWU,SAAA,EAAW;kBACxBvB,aAAA,CAAAC,KAAA,CAAIuB,SAAA,CAAU;oBACZC,KAAA,EAAO;oBACPC,OAAA,EAAS;oBACTC,OAAA,EAAS,SAATA,QAAUC,GAAA,EAAQ;sBAChB,IAAIA,GAAA,CAAIC,OAAA,EAAS;wBACf,IAAMC,MAAA,GAAST,aAAA,CAAAU,iBAAA;wBACf,IAAID,MAAA,CAAOH,OAAA,EAAS;0BAClB3B,aAAA,CAAAC,KAAA,CAAI+B,SAAA,CAAU;4BACZP,KAAA,EAAO;4BACPQ,IAAA,EAAM;0BACR,CAAC;wBAAA,OACI;0BACLjC,aAAA,CAAAC,KAAA,CAAI+B,SAAA,CAAU;4BACZP,KAAA,EAAO;4BACPQ,IAAA,EAAM;0BACR,CAAC;wBACH;sBACF;oBACF;kBACF,CAAC;gBACH;cACF;YAAA;YAAA;cAAA,OAAAjB,QAAA,CAAAkB,IAAA;UAAA;QAAA,GAAAvB,OAAA;MAAA;IACD;IACDL,OAAA,EAAS;MACPH,gBAAA,WAAAA,iBAAA,EAAmB;QACjB,IAAMgC,KAAA,GAAQnC,aAAA,CAAAC,KAAA,CAAIkB,cAAA,CAAe,OAAO;QACxC,IAAMiB,eAAA,GAAkBpC,aAAA,CAAAC,KAAA,CAAIkB,cAAA,CAAe,iBAAiB;QAG5D,IAAI,CAACgB,KAAA,EAAO;UACV,KAAKE,eAAA,EAAgB;UACrB;QACF;QAGA,IAAMC,UAAA,GAAaF,eAAA,IAAmBG,IAAA,CAAKC,GAAA,EAAG,GAAK,KAAK,KAAK,KAAK,KAAK;QAGvE,IAAID,IAAA,CAAKC,GAAA,KAAQF,UAAA,EAAY;UAE3BtC,aAAA,CAAGC,KAAA,CAACwC,iBAAA,CAAkB,OAAO;UAC7BzC,aAAA,CAAGC,KAAA,CAACwC,iBAAA,CAAkB,iBAAiB;UACvC,KAAKJ,eAAA,EAAgB;UACrB;QACF,OACK;UAEHrC,aAAA,CAAAC,KAAA,CAAIyC,cAAA,CAAe,mBAAmBH,IAAA,CAAKC,GAAA,EAAG,GAAK,KAAK,KAAK,KAAK,KAAK,GAAI;QAC7E;MACF;IACF;EACF;AACF","ignoreList":[]}