{"version":3,"names":["AICharacterList","defaultAvatarUrl","_sfc_main","components","data","userInfo","avatarUrl","nickName","openId","phone","password","betaCode","aiCharacterName","selectedCharacter","methods","_defineProperty2","goBack","common_vendor","index","navigateBack","getUserProfile","_this","wx$1","desc","success","res","showToast","title","icon","fail","err","__f__","onNicknameChange","e","detail","value","selectRole","showAICharacterPopup","$refs","aiCharacterPopup","open","hideAICharacterPopup","close","onCharacterSelect","character","name","handleRegister","_this2","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","test","length","showLoading","utils_api","apiService","register","telephone","nickname","avatar_url","wechat_openid","registration_code","ai_character_name","sent","status","setStorageSync","token","getUserInfo","setTimeout","reLaunch","url","Error","message","t0","hideLoading","finish","stop","onChooseAvatar","_this3","_callee2","_callee2$","_context2","error","_this4","wx","createPage","MiniProgramPage"],"sources":["register.vue","register.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <view class=\"header\">\n      <view class=\"back-button\" @tap=\"goBack\">\n        <text class=\"back-arrow\">←</text>\n      </view>\n      <text class=\"title\">注册账号</text>\n    </view>\n\n    <view class=\"avatar-section\">\n      <button class=\"avatar-wrapper\" open-type=\"chooseAvatar\" @chooseavatar=\"onChooseAvatar\">\n        <image class=\"avatar\" :src=\"userInfo.avatarUrl || defaultAvatarUrl\" mode=\"aspectFill\"/>\n        <text class=\"tip\">点击更换头像</text>\n      </button>\n      <view class=\"nickname-wrapper\">\n        <text class=\"nickname-label\">昵称</text>\n        <input\n            type=\"nickname\"\n            class=\"nickname-input\"\n            placeholder=\"请输入昵称\"\n            @change=\"onNicknameChange\"\n            v-model=\"userInfo.nickName\"\n        />\n      </view>\n    </view>\n\n    <view class=\"form-section\">\n      <view class=\"input-group\">\n        <text class=\"label\">昵称</text>\n        <input\n            type=\"nickname\"\n            class=\"input-field\"\n            placeholder=\"请输入昵称\"\n            @change=\"onNicknameChange\"\n            v-model=\"userInfo.nickName\"\n        />\n      </view>\n\n      <view class=\"input-group\">\n        <text class=\"label\">手机号</text>\n        <input\n            class=\"input-field\"\n            type=\"number\"\n            v-model=\"phone\"\n            placeholder=\"请输入手机号\"\n            maxlength=\"11\"\n        />\n      </view>\n\n      <view class=\"input-group\">\n        <text class=\"label\">密码</text>\n        <input\n            class=\"input-field\"\n            type=\"password\"\n            v-model=\"password\"\n            placeholder=\"请设置密码\"\n            maxlength=\"20\"\n        />\n      </view>\n\n      <!-- 修改 AI 角色选择部分 -->\n      <view class=\"input-group\">\n        <text class=\"label\">选择AI角色</text>\n        <view class=\"ai-role-selector\" @tap=\"showAICharacterPopup\">\n          <text class=\"selected-role\">{{ selectedCharacter.name || '请选择AI角色' }}</text>\n          <text class=\"arrow\">></text>\n        </view>\n      </view>\n\n      <view class=\"input-group\">\n        <text class=\"label\">内测码（选填）</text>\n        <input\n            class=\"input-field\"\n            type=\"text\"\n            v-model=\"betaCode\"\n            placeholder=\"如有内测码请输入\"\n        />\n      </view>\n    </view>\n\n    <!-- AI角色选择弹出层 -->\n    <uni-popup ref=\"aiCharacterPopup\" type=\"bottom\">\n      <view class=\"popup-content\">\n        <view class=\"popup-header\">\n          <text class=\"popup-title\">选择AI角色</text>\n          <text class=\"popup-close\" @tap=\"hideAICharacterPopup\">×</text>\n        </view>\n        <AICharacterList \n          v-model=\"aiCharacterName\"\n          @change=\"onCharacterSelect\"\n        />\n      </view>\n    </uni-popup>\n\n    <button class=\"submit-button\" @tap=\"handleRegister\">注册</button>\n  </view>\n</template>\n\n<script>\nimport { apiService } from '@/utils/api.js'\nimport AICharacterList from '@/components/AICharacterList.vue'\n\nconst defaultAvatarUrl = 'https://mmbiz.qpic.cn/mmbiz/icTdbqWNOwNRna42FI242Lcia07jQodd2FJGIYQfG0LAJGFxM4FbnQP6yfMxBgJ0F3YRqJCJ1aPAK2dQagdusBZg/0'\n\nexport default {\n  components: {\n    AICharacterList\n  },\n  \n  data() {\n    return {\n      defaultAvatarUrl,\n      userInfo: {\n        avatarUrl: '',\n        nickName: '',\n        openId: ''\n      },\n      phone: '',\n      password: '',\n      betaCode: '',\n      aiCharacterName: '',\n      selectedCharacter: {}\n    }\n  },\n\n  methods: {\n    goBack() {\n      uni.navigateBack()\n    },\n    getUserProfile() {\n      // 使用微信小程序原生的用户信息接口\n      wx.getUserProfile({\n        desc: '用于完善用户资料',\n        success: (res) => {\n          this.userInfo = {\n            avatarUrl: res.userInfo.avatarUrl,\n            nickName: res.userInfo.nickName\n          }\n\n          uni.showToast({\n            title: '授权成功',\n            icon: 'success'\n          })\n        },\n        fail: (err) => {\n          console.error('获取用户信息失败：', err)\n          uni.showToast({\n            title: '获取信息失败',\n            icon: 'none'\n          })\n        }\n      })\n    },\n\n    onNicknameChange(e) {\n      this.userInfo.nickName = e.detail.value\n    },\n\n    // 添加选择角色的方法\n    selectRole(value) {\n      this.aiCharacterName = value\n    },\n\n    showAICharacterPopup() {\n      this.$refs.aiCharacterPopup.open()\n    },\n\n    hideAICharacterPopup() {\n      this.$refs.aiCharacterPopup.close()\n    },\n\n    onCharacterSelect(character) {\n      this.selectedCharacter = character\n      this.aiCharacterName = character.name\n      this.hideAICharacterPopup()\n    },\n\n    async handleRegister() {\n      if (!this.userInfo.avatarUrl) {\n        uni.showToast({\n          title: '请先选择头像',\n          icon: 'none'\n        })\n        return\n      }\n\n      if (!this.userInfo.nickName) {\n        uni.showToast({\n          title: '请输入昵称',\n          icon: 'none'\n        })\n        return\n      }\n\n      if (!this.phone || !/^1\\d{10}$/.test(this.phone)) {\n        uni.showToast({\n          title: '请输入正确的手机号',\n          icon: 'none'\n        })\n        return\n      }\n\n      if (!this.password || this.password.length < 6) {\n        uni.showToast({\n          title: '密码不能少于6位',\n          icon: 'none'\n        })\n        return\n      }\n\n      if (!this.aiCharacterName) {\n        uni.showToast({\n          title: '请选择AI角色',\n          icon: 'none'\n        })\n        return\n      }\n\n      uni.showLoading({\n        title: '注册中...'\n      })\n\n      try {\n        // 使用 apiService 的 register 方法\n        const res = await apiService.register({\n          telephone: this.phone,\n          password: this.password,\n          nickname: this.userInfo.nickName,\n          avatar_url: this.userInfo.avatarUrl,\n          wechat_openid: this.userInfo.openId,\n          registration_code: this.betaCode,\n          ai_character_name: this.aiCharacterName\n        })\n\n        if (res.status === 'success') {\n          // 保存 token 和用户 ID\n          uni.setStorageSync('token', res.token)\n\n          // 获取用户详细信息\n          const userInfo = await apiService.getUserInfo()\n          if (userInfo.status === 'success') {\n            uni.setStorageSync('userInfo', userInfo.data)\n          }\n\n          uni.showToast({\n            title: '注册成功',\n            icon: 'success'\n          })\n\n          setTimeout(() => {\n            uni.reLaunch({\n              url: '/pages/index/index'\n            })\n          }, 1500)\n        } else {\n          throw new Error(res.message || '注册失败')\n        }\n      } catch (error) {\n        uni.showToast({\n          title: error.message || '注册失败',\n          icon: 'none'\n        })\n      } finally {\n        uni.hideLoading()\n      }\n    },\n    async onChooseAvatar(e) {\n      const {avatarUrl} = e.detail\n      this.userInfo.avatarUrl = avatarUrl\n\n      try {\n        // TODO 获取微信 openid\n        // 使用 wx.login 获取登录凭证\n        // const { code } = await new Promise((resolve, reject) => {\n        //   wx.login({\n        //     success: resolve,\n        //     fail: reject\n        //   })\n        // })\n        // // 通过登录凭证获取 openid\n        // const openIdResult = await request({\n        //   url: '/habit-ai/user/wx-openid',\n        //   method: 'POST',\n        //   data: { code }\n        // })\n        // this.userInfo.openId = openIdResult.openid\n\n        uni.showToast({\n          title: '头像设置成功',\n          icon: 'success'\n        })\n      } catch (error) {\n        console.error('获取 openid 失败：', error)\n        // 即使获取 openid 失败，也不影响头像设置\n        uni.showToast({\n          title: '头像设置成功',\n          icon: 'success'\n        })\n      }\n    },\n\n    getUserProfile() {\n      uni.getUserProfile({\n        desc: '用于完善会员资料',\n        success: (res) => {\n          this.userInfo.nickName = res.userInfo.nickName\n          uni.showToast({\n            title: '昵称设置成功',\n            icon: 'success'\n          })\n        },\n        fail: (err) => {\n          console.error('获取用户信息失败：', err)\n          uni.showToast({\n            title: '获取信息失败',\n            icon: 'none'\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style>\n.container {\n  padding: 40rpx;\n  min-height: 100vh;\n  background-color: #fff;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 60rpx;\n  position: relative;\n}\n\n.back-button {\n  position: absolute;\n  left: 0;\n  width: 80rpx;\n  height: 80rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.back-arrow {\n  font-size: 40rpx;\n  color: #2c3e50;\n}\n\n.title {\n  width: 100%;\n  text-align: center;\n  font-size: 36rpx;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\n.avatar-section {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 60rpx;\n}\n\n.avatar-wrapper {\n  background: none;\n  border: none;\n  padding: 0;\n  margin: 0;\n  width: 200rpx; /* 减小头像容器大小 */\n  height: 200rpx;\n}\n\n.avatar-wrapper:after {\n  border: none;\n}\n\n.avatar {\n  width: 200rpx; /* 减小头像大小 */\n  height: 200rpx;\n  border-radius: 50%; /* 保持圆形 */\n}\n\n/* 移除不需要的样式 */\n.nickname-wrapper,\n.nickname-label,\n.nickname-input,\n.tip {\n  display: none;\n}\n\n.nickname-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10rpx;\n  margin-top: 20rpx;\n}\n\n.nickname-label {\n  font-size: 28rpx;\n  color: #5c6b7a;\n}\n\n.nickname-input {\n  width: 300rpx;\n  height: 80rpx;\n  background: #f5f7fa;\n  border-radius: 10rpx;\n  padding: 0 20rpx;\n  font-size: 32rpx;\n  color: #2c3e50;\n  text-align: center;\n}\n\n.form-section {\n  display: flex;\n  flex-direction: column;\n  gap: 40rpx;\n  margin-bottom: 60rpx;\n}\n\n.input-group {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n}\n\n.label {\n  font-size: 28rpx;\n  color: #5c6b7a;\n}\n\n.input-field {\n  height: 100rpx;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  padding: 0 30rpx;\n  font-size: 32rpx;\n  color: #2c3e50;\n}\n\n.submit-button {\n  width: 100%;\n  height: 100rpx;\n  background: var(--theme-color);\n  border-radius: 20rpx;\n  color: #fff;\n  font-size: 32rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.submit-button:active {\n  opacity: 0.9;\n}\n\n.radio-group {\n  display: flex;\n  gap: 20rpx;\n  flex-wrap: wrap;\n}\n\n.radio-item {\n  padding: 20rpx 40rpx;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  font-size: 28rpx;\n  color: #2c3e50;\n}\n\n.radio-item-active {\n  background: var(--theme-color);\n  color: #fff;\n}\n\n.ai-role-selector {\n  height: 100rpx;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  padding: 0 30rpx;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.selected-role {\n  font-size: 32rpx;\n  color: #2c3e50;\n}\n\n.popup-content {\n  background: #fff;\n  border-radius: 24rpx 24rpx 0 0;\n  padding-bottom: env(safe-area-inset-bottom);\n}\n\n.popup-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 30rpx;\n  border-bottom: 1rpx solid #eee;\n}\n\n.popup-title {\n  font-size: 32rpx;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\n.popup-close {\n  font-size: 40rpx;\n  color: #999;\n  padding: 20rpx;\n}\n\n.arrow {\n  color: #999;\n  font-size: 32rpx;\n}\n</style>","import MiniProgramPage from '/Users/linsir/Experiments/uni-app/habit-ai-uniapp/habit-ai-uniapp/pages/register/register.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}