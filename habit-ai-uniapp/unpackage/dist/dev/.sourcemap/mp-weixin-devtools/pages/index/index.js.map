{"version":3,"names":["RewardCard","ConvCard","_sfc_main","common_vendor","defineComponent","components","data","nickname","weekDays","habits","currentYear","currentMonth","yearWeek","showRewardCard","rewardTitle","rewardMessage","rewardStats","currentHabit","isNoInteraction","touchStartX","touchStartTime","translateX","isOrderMode","flippedCards","expandedCards","hours","minutes","seconds","timer","showConvCard","aiMessage","content","currentMessageIndex","default_message_list","emoji","computed","getTodayCompletedCount","today","Date","todayYear","getFullYear","todayMonth","getMonth","filter","habit","completed","some","dateStr","completedDate","getDate","todayDate","length","currentStreak","perfectDays","includes","currentDate","getTime","getTodayCompletionRate","streak","setDate","prevDateStr","watch","handler","newRate","todayStr","push","index","showToast","title","icon","methods","handleAiMessageClick","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","res","wrap","_callee$","_context","prev","next","utils_api","apiService","getAISuggestion","sent","status","t0","__f__","stop","navigateTo","url","loadUserInfo","userInfo","getStorageSync","nickName","error","map","_objectSpread2","color","isCompletedForDay","dayIndex","targetYear","targetDate","targetMonth","targetDay","isWeekToday","getDayDate","isFutureDay","date","getDateFromDayIndex","monday","getDay","setHours","toggleHabitComplete","_this2","_callee2","habitIndex","weekStart","weekEnd","weekCompletedCount","_callee2$","_context2","getDayTimestamp","findIndex","h","habit_id","setStorageSync","id","name","count","loadHabits","vibrateShort","Error","message","Array","fill","every","_","_this3","updateHabitCompletion","completedIndex","indexOf","goToStats","concat","encodeURIComponent","diet","water","meditation","running","art","craft","game","time","planning","mood","social","other","workout","sleep","reading","coding","course","cleaning","cooking","finance","plants","music","photo","singing","colors","category","action","_this4","editHabit","toggleOrderMode","deleteHabit","systemInfo","getSystemInfoSync","showActionSheet","itemList","actions","item","itemColor","platform","success","setTimeout","_a2","tapIndex","_a","err","showModal","_success","_callee3","res2","updatedHabits","_callee3$","_context3","confirm","_this5","_x","apply","arguments","_context4","_callee4","updateDateInfo","now","target","UTC","setUTCDate","getUTCDate","getUTCDay","d","firstThursday","firstDay","Math","floor","diff","calcYearWeek","monthWeek","calcMonthWeek","onShareAppMessage","onShareTimeline","handleSaveNote","_ref","_this6","timestamp","currenthabit","notes","noteTimestamp","showFutureToast","handleDayClick","event","touches","clientX","handleTouchEnd","touchEndX","changedTouches","deltaX","maxSwipeTime","abs","minSwipeDistance","touchDuration","swipeVelocity","viewMode","switchView","mode","_this7","_common_vendor$index$","getWindowInfo","windowWidth","direction","getDaysInMonth","isMonthToday","day","isFutureMonthDay","getMonthCompletionCount","monthStart","monthEnd","daysInMonth","availableDays","formatNumber","num","updateTime","_this8","moveHabitUp","_this9","temp","moveHabitDown","_this10","completeOrder","duration","yesterday","isYesterday","startDate","endDate","diffTime","daysDesc","$set","habitId","getWeekNotes","sunday","note","noteDate","retroactiveInfo","retroTimestamp","sort","a","b","aTime","bTime","timeStr","isToday","weekDay","relative","showBackupOptions","_this11","handleBackupAction","handleExport","handleImport","_this12","_callee5","_callee5$","_context5","confirmText","cancelText","performExport","_this13","_callee6","exportData","jsonStr","fileName","userPath","filePath","fs","_callee6$","_context6","version","exportTime","toISOString","JSON","stringify","formatExportDate","wx$1","env","USER_DATA_PATH","getFileSystemManager","writeFileSync","shareFileMessage","performImport","importData","_this14","_callee7","_callee7$","_context7","modalRes","mergeImportData","overwriteImportData","importedHabits","habitMap","Map","currentHabits","forEach","importedHabit","existingHabit","completedSet","Set","_toConsumableArray2","notesMap","set","flag","mergedHabits","_this15","_callee8","_callee8$","_context8","chooseAndReadFile","_this16","chooseMessageFile","type","tempFilePath","tempFiles","path","encoding","readRes","parse","validateImportData","parseError","isIOS","showCancel","_this17","startClock","replace","_context9","_callee9","onHide","stopClock","wx","createPage","MiniProgramPage"],"sources":["index.vue","index.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- Ê∑ªÂä† conv-card ÁªÑ‰ª∂ -->\n    <conv-card\n        v-if=\"showConvCard\"\n        :show=\"showConvCard\"\n        v-model:emoji=\"aiMessage.emoji\"\n        v-model:content=\"aiMessage.content\"\n        @updateShow=\"showConvCard = $event\"\n    />\n    <reward-card\n        v-if=\"showRewardCard\"\n        :title=\"rewardTitle\"\n        :message=\"rewardMessage\"\n        :stats=\"rewardStats\"\n        :habit-info=\"currentHabit\"\n        :mode=\"viewMode\"\n        :show=\"showRewardCard\"\n        @saveNote=\"handleSaveNote\"\n        @updateShow=\"showRewardCard = $event\"\n    />\n    <view class=\"header\">\n      <view class=\"date-info\">\n        <!-- <view class=\"date-content\">\n          <text class=\"year\">{{ currentYear }}Âπ¥{{ currentMonth }}ÊúàÁ¨¨{{ monthWeek }}Âë®</text>\n        </view> -->\n        <view class=\"flip-clock\">\n          <text class=\"streak-icon\">üî•</text>\n          <text class=\"streak-label\">ËøûËÉú</text>\n          <text class=\"time-unit\">{{ currentStreak }}</text>\n          <text class=\"streak-label\">Â§©</text>\n        </view>\n      </view>\n      <view class=\"header-row\">\n        <view class=\"habit-stats\">\n          <view class=\"progress-bar\">\n            <view \n              class=\"progress-fill\" \n              :style=\"{ width: `${getTodayCompletionRate}%` }\"\n              :class=\"{ 'perfect': getTodayCompletionRate === 100 }\">\n            </view>          \n          </view>\n        </view>\n        <view v-if=\"isOrderMode\" class=\"complete-order-btn\" @tap=\"completeOrder\">ÂÆåÊàêÊéíÂ∫è</view>\n      </view>\n      <view class=\"ai-message\">\n        <view class=\"ai-message-card\" @tap=\"handleAiMessageClick\">\n          <text class=\"ai-message-icon\">{{ aiMessage.emoji }}</text>\n          <text class=\"ai-message-content\">{{ aiMessage.content }}</text>\n        </view>\n      </view>\n    </view>\n\n    <view class=\"view-container\" @touchstart=\"handleTouchStart\" @touchend=\"handleTouchEnd\">\n      <view\n          class=\"view-page habits-list\"\n          :style=\"{ transform: `translateX(${translateX}px)` }\"\n      >\n        <view\n            v-for=\"(habit, index) in habits\"\n            :key=\"habit.habit_id\"\n            class=\"habit-card\"\n            :class=\"{\n            'is-flipped': flippedCards[habit.habit_id],\n            'is-order-mode': isOrderMode,\n            'no-interaction': isOrderMode,\n            [habit.animating]: habit.animating\n          }\"\n            @longpress=\"!isOrderMode && handleCardLongPress(habit)\"\n            @touchend=\"!isOrderMode && handleCardTouchEnd(habit)\"\n        >\n          <!-- Âç°ÁâáÊ≠£Èù¢ -->\n          <view class=\"card-face card-front\">\n            <view class=\"habit-header\">\n              <view class=\"title-section\">\n                <view class=\"habit-icon\" :style=\"{ 'background-color': habit.color }\">\n                  <text class=\"emoji-icon\">{{ habit.icon }}</text>\n                </view>\n                <text class=\"habit-title\">{{ habit.title }}</text>\n              </view>\n              <view class=\"more-actions\" @tap.stop=\"showActionSheet(habit)\">\n                <text class=\"more-icon\">‚ãÆ</text>\n              </view>\n            </view>\n\n            <!-- ÊéíÂ∫èÊåâÈíÆ -->\n            <view class=\"order-buttons\" v-if=\"isOrderMode\">\n              <view\n                  class=\"order-btn up\"\n                  :class=\"{ disabled: index === 0 }\"\n                  @tap.stop=\"moveHabitUp(index)\"\n              >\n                <text class=\"order-icon\">‚Üë</text>\n              </view>\n              <view\n                  class=\"order-btn down\"\n                  :class=\"{ disabled: index === habits.length - 1 }\"\n                  @tap.stop=\"moveHabitDown(index)\"\n              >\n                <text class=\"order-icon\">‚Üì</text>\n              </view>\n            </view>\n\n            <!-- ‰π†ÊÉØÂÜÖÂÆπ -->\n            <view class=\"habit-content\">\n              <view class=\"progress-view\">\n                <view\n                    v-for=\"(day, i) in 7\"\n                    :key=\"i\"\n                    class=\"week-day\"\n                >\n                  <text class=\"day-label\">{{ weekDays[i] }}</text>\n                  <view\n                      class=\"day-box\"\n                      :class=\"{\n                      completed: isCompletedForDay(habit, i),\n                      today: isWeekToday(i),\n                      future: isFutureDay(i)\n                    }\"\n                      @tap.stop=\"handleDayClick(habit, i)\"\n                  >{{ getDayDate(i) }}\n                  </view>\n                </view>\n              </view>\n              <view class=\"expand-button\" @tap.stop=\"toggleCardExpand(habit.habit_id)\">\n                <text class=\"expand-text\">{{ expandedCards[habit.habit_id] ? 'Êî∂Ëµ∑Êó•Âøó' : 'Êü•ÁúãÂüπËÇ≤Êó•Âøó' }}</text>\n                <text class=\"expand-icon\">{{ expandedCards[habit.habit_id] ? '‚Üë' : '‚Üì' }}</text>\n              </view>\n            </view>\n\n            <!-- Á¨îËÆ∞ÂÆπÂô® -->\n            <view class=\"notes-container\" v-show=\"expandedCards[habit.habit_id]\">\n              <view class=\"empty-notes\" v-if=\"getWeekNotes(habit).length === 0\">\n                <text>Êú¨Âë®ËøòÊ≤°ÊúâËÆ∞ÂΩïÂéÜÁ®ãÂì¶~</text>\n              </view>\n              <view class=\"notes-list\" v-else>\n                <view\n                    v-for=\"(note, index2) in getWeekNotes(habit)\"\n                    :key=\"index2\"\n                    class=\"note-item\"\n                >\n                  <view class=\"note-time\">\n                    <view class=\"time-left\">\n                      <text class=\"date\">{{ formatNoteTime(note.timestamp).date }}</text>\n                      <text class=\"time\">{{ formatNoteTime(note.timestamp).time }}</text>\n                    </view>\n                    <view class=\"time-right\">{{ formatNoteTime(note.timestamp).relative }}</view>\n                  </view>\n                  <view class=\"note-content\">{{ note.content }}</view>\n                </view>\n              </view>\n            </view>\n          </view>\n\n          <!-- Âç°ÁâáËÉåÈù¢ -->\n          <view class=\"card-face card-back\">\n            <view class=\"flag-banner\" v-if=\"habit.flag\">\n              <text class=\"flag-icon\">üéØ</text>\n              <text class=\"flag-text\">{{ habit.flag }}</text>\n            </view>\n            <view class=\"flag-banner\" v-else>\n              <text class=\"flag-icon\">‚ú®</text>\n              <text class=\"flag-text\">ÁÇπÂáª‰π†ÊÉØÂç°ÁâáÂè≥‰∏äËßíÁöÑÊåâÈíÆ\\nÈÄâÊã©ÁºñËæëÊ∑ªÂä†ÁõÆÊ†áÔºÅ</text>\n            </view>\n            <view class=\"create-time\">\n              <text class=\"time-label\">ÂàõÂª∫‰∫é</text>\n              <text class=\"time-value\">{{ formatCreateTime(habit.createTime) }}</text>\n            </view>\n          </view>\n        </view>\n      </view>\n\n    </view>\n  </view>\n\n  <view class=\"add-button\" v-if=\"!isOrderMode\" @tap=\"addHabit\">\n    <text class=\"plus\">+</text>\n  </view>\n</template>\n\n<script>\nimport {defineComponent} from 'vue'\nimport RewardCard from '@/components/reward-card.vue'\nimport ConvCard from \"@/components/conv-card.vue\";\nimport {apiService} from \"@/utils/api.js\";\n\nexport default defineComponent({\n  components: {\n    ConvCard,\n    RewardCard\n  },\n  data() {\n    return {\n      nickname: '',\n      weekDays: ['Âë®‰∏Ä', 'Âë®‰∫å', 'Âë®‰∏â', 'Âë®Âõõ', 'Âë®‰∫î', 'Âë®ÂÖ≠', 'Âë®Êó•'],\n      habits: [],\n      currentYear: 0,\n      currentMonth: 0,\n      yearWeek: 0,\n      monthWeek: 0,\n      showRewardCard: false,\n      rewardTitle: '',\n      rewardMessage: '',\n      rewardStats: null,\n      currentHabit: null,\n      isNoInteraction: false,\n      touchStartX: 0,\n      touchStartTime: 0,\n      translateX: 0,\n      isOrderMode: false,\n      flippedCards: {},\n      expandedCards: {},\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      timer: null,\n      showConvCard: false,\n      aiMessage: {\n        emoji: 'üòÜ',\n        content: 'Ê¨¢ËøéÊù•Âà∞ Habit AIÔºÅÁÇπÊàëÔºå‰∏ÄËµ∑ËææÊàêÁõÆÊ†áÔºÅ'\n      },\n      perfectDays: [], // Êñ∞Â¢ûÔºöÂÆåÂÖ®ÊâìÂç°Êó•ÊúüÂàóË°®\n      currentMessageIndex: 0,\n      default_message_list: [\n        {\n          emoji: 'üò≥',\n          content: '‰Ω†Â•Ω {nickname} Ê¨¢ËøéÊù•Âà∞ Habit AIÔºÅÁÇπÊàëÁúãÁúãÔºÅ'\n        },\n        {\n          emoji: 'üëáüßê',\n          content: 'ÁúãÂà∞‰∏ãÈù¢Âä†Âè∑‰∫ÜÂêóÔºüÁÇπÂáªÂÆÉÊ∑ªÂä†‰∏Ä‰∏™‰π†ÊÉØ/‰ªªÂä°ÔºÅ'\n        },\n        {\n          emoji: 'üí™üòô',\n          content: 'Âà´Âøò‰∫ÜÂëäËØâÊàë‰Ω†ÁöÑÁõÆÊ†áÔºåËÆ©ÊàëÊù•ÁõëÁù£‰Ω†ÔºÅ'\n        },\n        {\n          emoji: 'üò†',\n          content: 'ËØ¥Âà∞ÂÅöÂà∞ÔºÅÊàë‰ºöÁªèÂ∏∏Êù•ÊèêÈÜí‰Ω†Ôºå‰∏çÂáÜÂ´åÊàëÁÉ¶ÔºÅ'\n        },\n        {\n          emoji: 'ü•∫',\n          content: 'ËøõÂ∫¶Êù°‰ºöÊòæÁ§∫ÂΩìÊó•ËøõÂ±ïÔºå‰∏ÄÂÆöË¶ÅÂÆåÊàêÂì¶ÔºÅ'\n        },\n        {\n          emoji: 'üòè',\n          content: 'ÂÆåÊàêÊâÄÊúâ‰ªªÂä°‰Ω†Â∞ÜÊî∂Ëé∑ÂÆåÁæé‰∏ÄÂ§©ÔºåËÆ©Êàë‰ª¨ÁúãÁúã‰Ω†ËÉΩËøûËÉúÂ§öÂ∞ëÂ§©ÔºÅ'\n        },\n        {\n          emoji: 'üòà',\n          content: 'Â¶ÇÊûúÊúâÈóÆÈ¢òÂèØ‰ª•ÈöèÊó∂ÂëäËØâÊàëÔºåÊàë‰πü‰∏çÊòØ‰ªÄ‰πàÂùè‰∫∫Âë¢ÂòªÂòªÔºÅ'\n        },\n        {\n          emoji: 'ü´£',\n          content: 'ÂºÄÂßãÂêßÔºÅÊàëËÇØÂÆö‰∏çÂÅ∑ÁúãÔºÅ'\n        },\n        {\n          emoji: 'ü´®',\n          content: 'ÂïäÂïäÂïäÂø´ÂºÄÂßãÂêßÔºÅ'\n        }\n      ]\n    }\n  },\n\n  computed: {\n    getTodayCompletedCount() {\n      const today = new Date()\n      const todayYear = today.getFullYear()\n      const todayMonth = today.getMonth()\n      const todayDate = today.getDate()\n      \n      return this.habits.filter(habit =>\n        habit.completed.some(dateStr => {\n          const completedDate = new Date(dateStr)\n          return completedDate.getFullYear() === todayYear &&\n                 completedDate.getMonth() === todayMonth &&\n                 completedDate.getDate() === todayDate\n        })\n      ).length\n    },\n\n    getTodayCompletionRate() {\n      if (this.habits.length === 0) return 0\n      return (this.getTodayCompletedCount / this.habits.length) * 100\n    },\n\n    currentStreak() {\n      if (!this.habits.length) return 0\n\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n      let streak = 0\n      let currentDate = new Date(today)\n\n      while (true) {\n        const dateStr = currentDate.toISOString().split('T')[0]\n        \n        // Â¶ÇÊûúÊó•Êúü‰∏çÂú®ÂÆåÁæéÊâìÂç°ÂàóË°®‰∏≠ÔºåÊ£ÄÊü•ÊòØÂê¶ÊòØ‰ªäÂ§©\n        if (!this.perfectDays.includes(dateStr)) {\n          // Â¶ÇÊûúÊòØ‰ªäÂ§©Ôºå‰∏îÊâÄÊúâ‰π†ÊÉØÈÉΩÂ∑≤ÂÆåÊàêÔºå‰ªçÁÑ∂ËÆ°ÂÖ•ËøûËÉú\n          if (currentDate.getTime() === today.getTime() && this.getTodayCompletionRate === 100) {\n            streak++\n          } else {\n            break\n          }\n        } else {\n          streak++\n        }\n\n        // Ê£ÄÊü•Ââç‰∏ÄÂ§©\n        currentDate.setDate(currentDate.getDate() - 1)\n        \n        // Â¶ÇÊûúÂâç‰∏ÄÂ§©‰∏çÂú®ÂàóË°®‰∏≠Ôºå‰∏î‰∏çÊòØ‰ªäÂ§©ÔºåÂàôÈÄÄÂá∫Âæ™ÁéØ\n        const prevDateStr = currentDate.toISOString().split('T')[0]\n        if (!this.perfectDays.includes(prevDateStr) && \n            currentDate.getTime() !== today.getTime()) {\n          break\n        }\n      }\n\n      return streak\n    },\n  },\n\n  watch: {\n    getTodayCompletionRate: {\n      handler(newRate) {\n        if (newRate === 100) {\n          const today = new Date()\n          const todayStr = today.toISOString().split('T')[0]\n          \n          // Ê£ÄÊü•ÊòØÂê¶Â∑≤ÁªèËÆ∞ÂΩïËøá‰ªäÂ§©\n          if (!this.perfectDays.includes(todayStr)) {\n            this.perfectDays.push(todayStr)\n            // ‰øùÂ≠òÂà∞Êú¨Âú∞Â≠òÂÇ®\n            uni.setStorageSync('perfectDays', this.perfectDays)\n            \n            // ÊòæÁ§∫Á•ùË¥∫Ê∂àÊÅØ\n            uni.showToast({\n              title: 'ËµûÔºÅ‰ªäÊó•Â∑≤ÂÆåÊàêÊâÄÊúâ‰ªªÂä°üéâ',\n              icon: 'none',\n              duration: 2000\n            })\n          }\n        }\n      },\n      immediate: true\n    }\n  },\n\n\n  methods: {    \n    async handleAiMessageClick() {\n      if (this.habits.length === 0) {\n        // Â¶ÇÊûúÊ≤°Êúâ‰π†ÊÉØÔºåÊòæÁ§∫ÂºïÂØºÊ∂àÊÅØ\n        if (this.currentMessageIndex < this.default_message_list.length - 1) {\n          this.currentMessageIndex++\n          this.aiMessage = this.default_message_list[this.currentMessageIndex].replace('{nickname}', this.nickname)\n        } else {\n          this.aiMessage = this.default_message_list[-1]\n        }\n      } else {\n        // Â¶ÇÊûúÊúâ‰π†ÊÉØÔºåË∞ÉÁî® API Ëé∑ÂèñÂª∫ËÆÆ\n        try {\n          const res = await apiService.getAISuggestion()\n          if (res.status === 'success' && res.data) {\n            this.aiMessage = {\n              emoji: res.data.emoji || default_message_list[-1].emoji,\n              content: res.data.suggestion || default_message_list[-1].content\n            }\n          }\n        } catch (error) {\n          console.error('Ëé∑Âèñ AI Âª∫ËÆÆÂ§±Ë¥•:', error)\n        }\n      }\n    },\n\n    addHabit() {\n      uni.navigateTo({\n        url: '/pages/add-habit/add-habit'\n      })\n    },\n\n    loadUserInfo() {\n      try {\n        const userInfo = uni.getStorageSync('userInfo')\n        if (userInfo) {\n          this.nickname = userInfo.nickName || 'ÊúãÂèã'\n        } else {\n          this.nickname = 'ÊúãÂèã'\n        }\n      } catch (error) {\n        console.error('Ëé∑ÂèñÁî®Êà∑‰ø°ÊÅØÂ§±Ë¥•:', error)\n        this.nickname = 'ÊúãÂèã'\n      }\n    },\n\n    loadHabits() {\n      const habits = uni.getStorageSync('habits') || []\n      this.habits = habits.map(habit => ({\n        ...habit,\n        icon: habit.icon || \"‚ú®\",\n        color: habit.color || '#fff'\n      }))\n      console.log(\"get habits from storage\", habits)\n      // Âä†ËΩΩÂÆåÂÖ®ÊâìÂç°Êó•ÊúüÂàóË°®\n      this.perfectDays = uni.getStorageSync('perfectDays') || []\n      console.log(\"get perfectDays from storage\", this.perfectDays)\n    },\n\n    // Âë®ËßÜÂõæÁõ∏ÂÖ≥ÊñπÊ≥ï\n    isCompletedForDay(habit, dayIndex) {\n      const targetDate = this.getDateFromDayIndex(dayIndex)\n      const targetYear = targetDate.getFullYear()\n      const targetMonth = targetDate.getMonth()\n      const targetDay = targetDate.getDate()\n      \n      return habit.completed.some(dateStr => {\n        const completedDate = new Date(dateStr)\n        return completedDate.getFullYear() === targetYear &&\n               completedDate.getMonth() === targetMonth &&\n               completedDate.getDate() === targetDay\n      })\n    },\n\n    isWeekToday(dayIndex) {\n      const today = new Date()\n      const targetDate = this.getDayDate(dayIndex)\n      return today.getDate() === targetDate\n    },\n\n    isFutureDay(dayIndex) {\n      const today = new Date()\n      const targetDate = this.getDateFromDayIndex(dayIndex)\n      const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate())\n      const targetDateOnly = new Date(targetDate.getFullYear(), targetDate.getMonth(), targetDate.getDate())\n      return targetDateOnly > todayDate\n    },\n\n    getDayDate(dayIndex) {\n      const date = this.getDateFromDayIndex(dayIndex)\n      return date.getDate()\n    },\n\n    getDateFromDayIndex(dayIndex) {\n      const today = new Date()\n      const monday = new Date()\n      monday.setDate(today.getDate() - (today.getDay() === 0 ? 6 : today.getDay() - 1))\n      const targetDate = new Date(monday)\n      targetDate.setDate(monday.getDate() + dayIndex)\n      return targetDate\n    },\n\n    getDayTimestamp(dayIndex) {\n      const date = this.getDateFromDayIndex(dayIndex)\n      date.setHours(0, 0, 0, 0)\n      return date.toISOString()\n    },\n\n    async toggleHabitComplete(habit, dayIndex) {\n      const timestamp = this.getDayTimestamp(dayIndex)\n      const today = new Date()\n      const targetDate = this.getDateFromDayIndex(dayIndex)\n\n      if (targetDate > today) {\n        uni.showToast({\n          title: 'Êú™Êù•ËøòÊú™Êù•Âì¶~',\n          icon: 'none',\n          duration: 1000\n        })\n        return\n      }\n\n      if (targetDate.getDate() !== today.getDate() ||\n          targetDate.getMonth() !== today.getMonth() ||\n          targetDate.getFullYear() !== today.getFullYear()\n      ) {\n        uni.showToast({\n          title: 'Ë°•ÊâìÂç°Êú∫Âà∂ËøòÊú™ÂÆûÁé∞ÔºåÊï¨ËØ∑ÊúüÂæÖ~',\n          icon: 'none',\n          duration: 1000\n        })\n        return\n      }\n\n      try {\n        // Ë∞ÉÁî®ÊâìÂç° API\n        const res = await apiService.recordHabit(habit.habit_id)\n\n        if (res.status === 'success') {\n          // Êõ¥Êñ∞Êú¨Âú∞Â≠òÂÇ®‰∏≠ÂØπÂ∫î‰π†ÊÉØÁöÑÊâìÂç°ËÆ∞ÂΩï\n          const habits = uni.getStorageSync('habits') || []\n          const habitIndex = habits.findIndex(h => h.habit_id === habit.habit_id)\n          if (habitIndex !== -1) {\n            // Â∞Ü ISO Êó∂Èó¥Â≠óÁ¨¶‰∏≤ËΩ¨Êç¢‰∏∫Êó∂Èó¥Êà≥\n            habits[habitIndex].completed = res.data.completed.map(timeStr =>\n                new Date(timeStr).getTime()\n            )\n\n            // Êõ¥Êñ∞ streak\n            console.log(habits[habitIndex])\n            habits[habitIndex].streak = res.data.streak\n            uni.setStorageSync('habits', habits)\n          }\n\n          // ÊòæÁ§∫ÊâìÂç°ÊàêÂäüÂç°Áâá\n          this.showRewardCard = true\n          this.rewardTitle = 'ÊâìÂç°ÊàêÂäüÔºÅ'\n          this.rewardMessage = ''\n          this.currentHabit = {\n            id: habit.habit_id,\n            name: habit.title,\n            icon: habit.icon,\n            color: habit.color\n          }\n\n          // ËÆ°ÁÆóÊú¨Âë®ÂÆåÊàêÊ¨°Êï∞\n          const weekStart = this.getDateFromDayIndex(0)\n          const weekEnd = this.getDateFromDayIndex(6)\n          weekStart.setHours(0, 0, 0, 0)\n          weekEnd.setHours(23, 59, 59, 999)\n\n          const weekCompletedCount = habit.completed.filter(time => {\n            const date = new Date(time)\n            return date >= weekStart && date <= weekEnd\n          }).length\n\n          this.rewardStats = {\n            count: weekCompletedCount,\n            label: 'Êú¨Âë®Â∑≤ÂÆåÊàê'\n          }\n\n          this.loadHabits()\n          uni.vibrateShort()\n        } else {\n          throw new Error(res.message || 'ÊâìÂç°Â§±Ë¥•')\n        }\n      } catch (error) {\n        uni.showToast({\n          title: error.message || 'ÊâìÂç°Â§±Ë¥•',\n          icon: 'none'\n        })\n      }\n    },\n\n    // Ê£ÄÊü•Êú¨Âë®ÊòØÂê¶ÂÖ®ÈÉ®ÂÆåÊàê\n    checkWeekCompletion(habit) {\n      return Array(7).fill().every((_, index) => this.isCompletedForDay(habit, index))\n    },\n\n    // ÈÄöÁî®ÊñπÊ≥ï\n    updateHabitCompletion(habit, dateStr) {\n      const habits = uni.getStorageSync('habits') || []\n      const habitIndex = habits.findIndex(h => h.habit_id === habit.habit_id)\n      if (habitIndex === -1) return\n\n      const completedIndex = habits[habitIndex].completed.indexOf(dateStr)\n      if (completedIndex === -1) {\n        habits[habitIndex].completed.push(dateStr)\n      } else {\n        habits[habitIndex].completed.splice(completedIndex, 1)\n      }\n\n      uni.setStorageSync('habits', habits)\n      this.loadHabits()\n      uni.vibrateShort()\n    },\n\n    goToStats(habit) {\n      uni.navigateTo({\n        url: `/pages/habit-stats/habit-stats?habit_id=${habit.habit_id}&title=${encodeURIComponent(habit.title)}`\n      })\n    },\n\n    getCategoryIcon(category) {\n      const icons = {\n        workout: 'üèÉ',\n        diet: 'ü•ó',\n        water: 'üíß',\n        sleep: 'üò¥',\n        meditation: 'üßò',\n        running: '‚öΩ',\n        reading: 'üìö',\n        coding: 'üíª',\n        course: 'üìù',\n        cleaning: 'üßπ',\n        cooking: 'üç≥',\n        finance: 'üí∞',\n        plants: 'üå±',\n        music: 'üé∏',\n        art: 'üé®',\n        craft: 'üé≠',\n        photo: 'üì∏',\n        singing: 'üé§',\n        game: 'üéÆ',\n        time: '‚è∞',\n        planning: 'üìä',\n        mood: 'üåà',\n        social: 'üë•',\n        notes: 'üìù',\n        writing: '‚úçÔ∏è',\n        custom: '‚ú®',\n        other: 'üéØ'\n      }\n      return icons[category] || 'üéØ'\n    },\n\n    getCategoryColor(category) {\n      const colors = {\n        // ÂÅ•Â∫∑ÁªÑ\n        workout: '#FF6B6B',\n        diet: '#95E1D3',\n        water: '#87CEEB',\n        sleep: '#6C5B7B',\n        meditation: '#9B89B3',\n        running: '#FF6B6B',\n        // Â≠¶‰π†ÁªÑ\n        reading: '#FFD93D',\n        coding: '#6C5B7B',\n        course: '#96CEB4',\n        // ÁîüÊ¥ªÁªÑ\n        cleaning: '#A8E6CF',\n        cooking: '#F8B195',\n        finance: '#2A363B',\n        plants: '#4ECDC4',\n        // ÂÖ¥Ë∂£ÁªÑ\n        music: '#FF8C94',\n        art: '#F67280',\n        craft: '#C06C84',\n        photo: '#355C7D',\n        singing: '#FF8C94',\n        game: '#3F72AF',\n        // ÊàêÈïøÁªÑ\n        time: '#45B7D1',\n        planning: '#96CEB4',\n        mood: '#9B89B3',\n        social: '#F8B195'\n      }\n      return colors[category] || '$theme-color'\n    },\n\n    showActionSheet(habit) {\n      const actions = [\n        {\n          name: 'ÁºñËæë‰π†ÊÉØ',\n          action: () => this.editHabit(habit)\n        },\n        {\n          name: 'Ë∞ÉÊï¥È°∫Â∫è',\n          action: () => this.toggleOrderMode()\n        },\n        {\n          name: 'Âà†Èô§‰π†ÊÉØ',\n          action: () => this.deleteHabit(habit)\n        }\n      ]\n\n      const systemInfo = uni.getSystemInfoSync()\n      uni.showActionSheet({\n        itemList: actions.map(item => item.name),\n        itemColor: systemInfo.platform === 'ios' ? '#007AFF' : '#2d8cf0',\n        success: (res) => {\n          if (systemInfo.platform === 'ios') {\n            setTimeout(() => {\n              actions[res.tapIndex]?.action()\n            }, 100)\n          } else {\n            actions[res.tapIndex]?.action()\n          }\n        },\n        fail: (err) => {\n          console.log('ActionSheet ÂÖ≥Èó≠', err)\n        }\n      })\n    },\n\n    editHabit(habit) {\n      uni.navigateTo({\n        url: `/pages/add-habit/add-habit?habit_id=${habit.habit_id}`\n      })\n    },\n\n    async deleteHabit(habit) {\n      uni.showModal({\n        title: 'Á°ÆËÆ§Âà†Èô§',\n        content: 'Á°ÆÂÆöË¶ÅÂà†Èô§Ëøô‰∏™‰π†ÊÉØÂêóÔºüÊ≠§Êìç‰Ωú‰∏çÂèØÊÅ¢Â§ç„ÄÇ',\n        confirmColor: '#FF3B30',\n        success: async (res) => {\n          if (res.confirm) {\n            try {\n              // Ë∞ÉÁî®Âà†Èô§ API\n              const res = await apiService.deleteHabit(habit.habit_id)\n              \n              if (res.status === 'success') {\n                // API Âà†Èô§ÊàêÂäüÂêéÔºåÊõ¥Êñ∞Êú¨Âú∞Â≠òÂÇ®\n                const habits = uni.getStorageSync('habits') || []\n                const updatedHabits = habits.filter(h => h.habit_id !== habit.habit_id)\n                uni.setStorageSync('habits', updatedHabits)\n                this.loadHabits()\n                uni.showToast({\n                  title: 'Âà†Èô§ÊàêÂäü',\n                  icon: 'success'\n                })\n              } else {\n                throw new Error(res.message || 'Âà†Èô§Â§±Ë¥•')\n              }\n            } catch (error) {\n              uni.showToast({\n                title: error.message || 'Âà†Èô§Â§±Ë¥•',\n                icon: 'none'\n              })\n            }\n          }\n        }\n      })\n    },\n\n    updateDateInfo() {\n      const now = new Date()\n      this.currentYear = now.getFullYear()\n      this.currentMonth = now.getMonth() + 1\n\n      const calcYearWeek = (date) => {\n        const target = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))\n        target.setUTCDate(target.getUTCDate() + 3 - (target.getUTCDay() || 7))\n        const yearStart = new Date(Date.UTC(target.getUTCFullYear(), 0, 1))\n        return Math.ceil(((target - yearStart) / 86400000 + 1) / 7)\n      }\n\n      const calcMonthWeek = (date) => {\n        const d = new Date(date.getTime())\n        d.setHours(0, 0, 0, 0)\n        const firstDay = new Date(d.getFullYear(), d.getMonth(), 1)\n        const firstThursday = new Date(firstDay)\n        firstThursday.setDate(firstDay.getDate() + (11 - firstDay.getDay()) % 7 - 3)\n        const diff = d - firstThursday\n        return Math.floor(diff / 604800000) + 1\n      }\n\n      this.yearWeek = calcYearWeek(now)\n      this.monthWeek = calcMonthWeek(now)\n    },\n\n    onShareAppMessage() {\n      return {\n        title: '‰π†ÊÉØËøΩË∏™Âô®',\n        path: '/pages/index/index'\n      }\n    },\n\n    onShareTimeline() {\n      return {\n        title: '‰π†ÊÉØËøΩË∏™Âô®'\n      }\n    },\n\n    handleSaveNote({timestamp, content}) {\n      const noteTimestamp = Date.now()\n      const habits = uni.getStorageSync('habits') || []\n      const habitIndex = habits.findIndex(h => h.habit_id === this.currenthabit.habit_id)\n\n      habits[habitIndex].notes.push({\n        timestamp: noteTimestamp,\n        content: content\n      })\n\n      uni.setStorageSync('habits', habits)\n      this.loadHabits()\n    },\n\n    showFutureToast() {\n      uni.showToast({\n        title: 'Êú™Êù•ËøòÊú™Êù•Âì¶~',\n        icon: 'none',\n        duration: 1000\n      })\n    },\n\n    handleDayClick(habit, dayIndex) {\n      if (this.isFutureDay(dayIndex)) {\n        uni.showToast({\n          title: 'Êú™Êù•ËøòÊú™Êù•Âì¶~',\n          icon: 'none',\n          duration: 1000\n        })\n        return\n      }\n      this.toggleHabitComplete(habit, dayIndex)\n    },\n\n    handleCardLongPress(habit) {\n      this.flippedCards[habit.habit_id] = true\n    },\n\n    handleCardTouchEnd(habit) {\n      this.flippedCards[habit.habit_id] = false\n    },\n\n    handleTouchStart(event) {\n      if (this.isOrderMode) return\n      this.touchStartX = event.touches[0].clientX\n      this.touchStartTime = Date.now()\n      this.translateX = 0\n    },\n\n    handleTouchEnd(event) {\n      if (this.isOrderMode) return\n      const touchEndX = event.changedTouches[0].clientX\n      const deltaX = touchEndX - this.touchStartX\n      const touchEndTime = Date.now()\n      const touchDuration = touchEndTime - this.touchStartTime\n      const minSwipeDistance = 100\n      const maxSwipeTime = 300\n      const swipeVelocity = Math.abs(deltaX) / touchDuration\n\n      if (Math.abs(deltaX) > minSwipeDistance &&\n          touchDuration < maxSwipeTime &&\n          swipeVelocity > 0.3) {\n        if (deltaX < 0 && this.viewMode === 'week') {\n          this.switchView('month')\n        } else if (deltaX > 0 && this.viewMode === 'month') {\n          this.switchView('week')\n        }\n      }\n      this.translateX = 0\n    },\n\n    switchView(mode) {\n      if (mode === this.viewMode) return\n      try {\n        const {windowWidth} = uni.getWindowInfo()\n        const direction = mode === 'month' ? -1 : 1\n        this.translateX = direction * windowWidth * 0.3\n        setTimeout(() => {\n          this.viewMode = mode\n          this.translateX = 0\n        }, 50)\n      } catch (error) {\n        console.error('Ëé∑ÂèñÁ™óÂè£‰ø°ÊÅØÂ§±Ë¥•:', error)\n        this.viewMode = mode\n        this.translateX = 0\n      }\n    },\n\n    getDaysInMonth() {\n      const date = new Date(this.currentYear, this.currentMonth - 1, 1)\n      return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n    },\n\n\n    isMonthToday(day) {\n      const today = new Date()\n      return today.getDate() === day &&\n          today.getMonth() === this.currentMonth - 1 &&\n          today.getFullYear() === this.currentYear\n    },\n\n    isFutureMonthDay(day) {\n      const today = new Date()\n      const targetDate = new Date(this.currentYear, this.currentMonth - 1, day)\n      return targetDate > today\n    },\n\n    getMonthCompletionCount(habit) {\n      const monthStart = new Date(this.currentYear, this.currentMonth - 1, 1)\n      const monthEnd = new Date(this.currentYear, this.currentMonth, 0)\n      return habit.completed.filter(timestamp => {\n        const date = new Date(timestamp)\n        return date >= monthStart && date <= monthEnd\n      }).length\n    },\n\n    getMonthCompletionRate(habit) {\n      const daysInMonth = this.getDaysInMonth()\n      const completedDays = this.getMonthCompletionCount(habit)\n      const today = new Date()\n      let availableDays\n\n      if (today.getMonth() === this.currentMonth - 1 && today.getFullYear() === this.currentYear) {\n        availableDays = today.getDate()\n      } else {\n        availableDays = daysInMonth\n      }\n      return Math.round(completedDays / availableDays * 100)\n    },\n\n    formatNumber(num) {\n      return num < 10 ? `0${num}` : num\n    },\n\n    updateTime() {\n      const now = new Date()\n      this.hours = now.getHours()\n      this.minutes = now.getMinutes()\n      this.seconds = now.getSeconds()\n    },\n\n    startClock() {\n      this.updateTime()\n      this.timer = setInterval(() => {\n        this.updateTime()\n      }, 1000)\n    },\n\n    stopClock() {\n      if (this.timer) {\n        clearInterval(this.timer)\n        this.timer = null\n      }\n    },\n\n    toggleOrderMode() {\n      this.isOrderMode = !this.isOrderMode\n      if (this.isOrderMode) {\n        uni.showToast({\n          title: 'ËøõÂÖ•ÊéíÂ∫èÊ®°Âºè',\n          icon: 'none',\n          duration: 1500\n        })\n      }\n    },\n\n    moveHabitUp(index) {\n      if (index > 0) {\n        this.$set(this.habits[index], 'animating', 'moving-up')\n        this.$set(this.habits[index - 1], 'animating', 'moving-down')\n        setTimeout(() => {\n          const habits = [...this.habits]\n          const temp = habits[index]\n          habits[index] = habits[index - 1]\n          habits[index - 1] = temp\n          habits[index].animating = ''\n          habits[index - 1].animating = ''\n          this.habits = habits\n          uni.setStorageSync('habits', habits)\n        }, 300)\n      }\n    },\n\n    moveHabitDown(index) {\n      if (index < this.habits.length - 1) {\n        this.$set(this.habits[index], 'animating', 'moving-down')\n        this.$set(this.habits[index + 1], 'animating', 'moving-up')\n        setTimeout(() => {\n          const habits = [...this.habits]\n          const temp = habits[index]\n          habits[index] = habits[index + 1]\n          habits[index + 1] = temp\n          habits[index].animating = ''\n          habits[index + 1].animating = ''\n          this.habits = habits\n          uni.setStorageSync('habits', habits)\n        }, 300)\n      }\n    },\n\n    completeOrder() {\n      this.isOrderMode = false\n      uni.showToast({\n        title: 'ÊéíÂ∫èÂ∑≤‰øùÂ≠ò',\n        icon: 'success',\n        duration: 1500\n      })\n    },\n\n    formatCreateTime(timestamp) {\n      if (!timestamp) return 'Êú™Áü•Êó∂Èó¥'\n      const date = new Date(timestamp)\n      const now = new Date()\n      const isToday = date.getFullYear() === now.getFullYear() &&\n          date.getMonth() === now.getMonth() &&\n          date.getDate() === now.getDate()\n\n      const yesterday = new Date(now)\n      yesterday.setDate(yesterday.getDate() - 1)\n      const isYesterday = date.getFullYear() === yesterday.getFullYear() &&\n          date.getMonth() === yesterday.getMonth() &&\n          date.getDate() === yesterday.getDate()\n\n      const startDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n      const endDate = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n      const diffTime = Math.abs(endDate - startDate)\n      const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))\n\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      let daysDesc\n\n      if (isToday) {\n        daysDesc = '‰ªäÂ§©ÂàõÂª∫'\n      } else if (isYesterday) {\n        daysDesc = 'Êò®Â§©ÂàõÂª∫'\n      } else {\n        daysDesc = `Â∑≤ÂàõÂª∫${diffDays}Â§©`\n      }\n\n      return `${date.getFullYear()}Âπ¥${date.getMonth() + 1}Êúà${date.getDate()}Êó• ${hours}:${minutes} ¬∑ ${daysDesc}`\n    },\n\n    toggleCardExpand(habitId) {\n      this.$set(this.expandedCards, habitId, !this.expandedCards[habitId])\n    },\n\n    getWeekNotes(habit) {\n      if (!habit.notes) return []\n      const now = new Date()\n      const monday = new Date(now)\n      monday.setDate(now.getDate() - (now.getDay() === 0 ? 6 : now.getDay() - 1))\n      const sunday = new Date(monday)\n      sunday.setDate(monday.getDate() + 6)\n\n      const weekStart = new Date(monday.getFullYear(), monday.getMonth(), monday.getDate())\n      const weekEnd = new Date(sunday.getFullYear(), sunday.getMonth(), sunday.getDate(), 23, 59, 59, 999)\n\n      return habit.notes\n          .filter(note => {\n            const noteDate = new Date(note.retroactiveInfo ? note.retroactiveInfo.retroTimestamp : note.timestamp)\n            return noteDate >= weekStart && noteDate <= weekEnd\n          })\n          .sort((a, b) => {\n            const aTime = a.retroactiveInfo ? a.retroactiveInfo.retroTimestamp : a.timestamp\n            const bTime = b.retroactiveInfo ? b.retroactiveInfo.retroTimestamp : b.timestamp\n            return bTime - aTime\n          })\n    },\n\n    formatNoteTime(timestamp) {\n      const date = new Date(timestamp)\n      const now = new Date()\n      const weekDays = ['Âë®Êó•', 'Âë®‰∏Ä', 'Âë®‰∫å', 'Âë®‰∏â', 'Âë®Âõõ', 'Âë®‰∫î', 'Âë®ÂÖ≠']\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const timeStr = `${hours}:${minutes}`\n\n      const isToday = date.getDate() === now.getDate() &&\n          date.getMonth() === now.getMonth() &&\n          date.getFullYear() === now.getFullYear()\n\n      const yesterday = new Date(now)\n      yesterday.setDate(yesterday.getDate() - 1)\n      const isYesterday = date.getDate() === yesterday.getDate() &&\n          date.getMonth() === yesterday.getMonth() &&\n          date.getFullYear() === yesterday.getFullYear()\n\n      const weekDay = weekDays[date.getDay()]\n      const dateStr = `${date.getMonth() + 1}Êúà${date.getDate()}Êó•`\n\n      return {\n        date: `${dateStr} ${weekDay}`,\n        time: timeStr,\n        relative: isToday ? '‰ªäÂ§©' : isYesterday ? 'Êò®Â§©' : dateStr\n      }\n    },\n\n    showBackupOptions() {\n      const systemInfo = uni.getSystemInfoSync()\n      uni.showActionSheet({\n        itemList: ['ÂØºÂá∫Êï∞ÊçÆ', 'ÂØºÂÖ•Êï∞ÊçÆ'],\n        itemColor: systemInfo?.platform === 'ios' ? '#007AFF' : '#2d8cf0',\n        success: (res) => {\n          if (systemInfo?.platform === 'ios') {\n            setTimeout(() => {\n              this.handleBackupAction(res.tapIndex)\n            }, 100)\n          } else {\n            this.handleBackupAction(res.tapIndex)\n          }\n        }\n      })\n    },\n\n    handleBackupAction(tapIndex) {\n      if (tapIndex === 0) {\n        this.handleExport()\n      } else if (tapIndex === 1) {\n        this.handleImport()\n      }\n    },\n\n    async handleExport() {\n      uni.showModal({\n        title: 'ÂØºÂá∫ËØ¥Êòé',\n        content: 'Áî±‰∫éÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁöÑÈôêÂà∂ÔºåÂØºÂá∫Êï∞ÊçÆÂ∞ÜÈÄöËøáÂàÜ‰∫´ÂäüËÉΩÂÆûÁé∞„ÄÇÂØºÂá∫ÂêéÊÇ®ÂèØ‰ª•ÈÄâÊã©Â∞ÜÊñá‰ª∂‰øùÂ≠òÂà∞ÊâãÊú∫ËøõË°åÂ§á‰ªΩ„ÄÇ',\n        confirmText: 'ÁªßÁª≠ÂØºÂá∫',\n        cancelText: 'ÂèñÊ∂à',\n        success: (res) => {\n          if (res.confirm) {\n            this.performExport()\n          }\n        }\n      })\n    },\n\n    async performExport() {\n      try {\n        const habits = uni.getStorageSync('habits') || []\n        const exportData = {\n          version: '1.0',\n          exportTime: new Date().toISOString(),\n          data: habits\n        }\n\n        const jsonStr = JSON.stringify(exportData, null, 2)\n        const fileName = `habits_backup_${this.formatExportDate(new Date())}.json`\n\n        try {\n          const userPath = wx.env.USER_DATA_PATH\n          const filePath = `${userPath}/${fileName}`\n          const fs = wx.getFileSystemManager()\n          fs.writeFileSync(filePath, jsonStr, 'utf8')\n\n          wx.shareFileMessage({\n            filePath: filePath,\n            success: () => {\n              uni.showToast({\n                title: 'Êï∞ÊçÆÂ∑≤ÂØºÂá∫ÔºåËØ∑Á°Æ‰øù‰ªé‰Ω†ÂàÜ‰∫´ÁöÑÂØπËØù‰∏≠ÈÄâÊã©ËØ•Êï∞ÊçÆÊñá‰ª∂‰øùÂ≠òÂà∞ÊâãÊú∫',\n                icon: 'none',\n                duration: 3000\n              })\n            },\n            fail: (err) => {\n              console.error('Share file error:', err)\n              uni.showToast({\n                title: 'ÂØºÂá∫Â§±Ë¥•',\n                icon: 'none'\n              })\n            }\n          })\n        } catch (err) {\n          console.error('File operation error:', err)\n          uni.showToast({\n            title: 'ÂØºÂá∫Â§±Ë¥•',\n            icon: 'none'\n          })\n        }\n      } catch (error) {\n        console.error('Export error:', error)\n        uni.showToast({\n          title: 'ÂØºÂá∫Â§±Ë¥•',\n          icon: 'none'\n        })\n      }\n    },\n\n    formatExportDate(date) {\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')\n      return `${year}${month}${day}_${hours}${minutes}${seconds}`\n    },\n\n    async performImport(importData) {\n      try {\n        uni.showActionSheet({\n          itemList: ['ÂêàÂπ∂Êï∞ÊçÆ', 'ÂÆåÂÖ®Ë¶ÜÁõñ'],\n          success: (res) => {\n            if (res.tapIndex === 0) {\n              uni.showModal({\n                title: 'Á°ÆËÆ§ÂêàÂπ∂',\n                content: 'ÂêàÂπ∂Â∞Ü‰øùÁïôÁé∞ÊúâÊï∞ÊçÆÔºåÂπ∂Ê∑ªÂä†Êñ∞Êï∞ÊçÆ„ÄÇÁ°ÆÂÆöÁªßÁª≠ÂêóÔºü',\n                success: (modalRes) => {\n                  if (modalRes.confirm) {\n                    this.mergeImportData(importData.data)\n                  }\n                }\n              })\n            } else {\n              uni.showModal({\n                title: 'Á°ÆËÆ§Ë¶ÜÁõñ',\n                content: 'Ê≠§Êìç‰ΩúÂ∞ÜÂÆåÂÖ®Ë¶ÜÁõñÁé∞ÊúâÊï∞ÊçÆÔºåÁ°ÆÂÆöÁªßÁª≠ÂêóÔºü',\n                success: (modalRes) => {\n                  if (modalRes.confirm) {\n                    this.overwriteImportData(importData.data)\n                  }\n                }\n              })\n            }\n          }\n        })\n      } catch (error) {\n        console.error('Import error:', error)\n        uni.showToast({\n          title: 'ÂØºÂÖ•Â§±Ë¥•',\n          icon: 'none'\n        })\n      }\n    },\n\n    mergeImportData(importedHabits) {\n      try {\n        const currentHabits = uni.getStorageSync('habits') || []\n        const habitMap = new Map(currentHabits.map(habit => [habit.habit_id, habit]))\n\n        importedHabits.forEach(importedHabit => {\n          const existingHabit = habitMap.get(importedhabit.habit_id)\n          if (existingHabit) {\n            const completedSet = new Set([...existingHabit.completed, ...importedHabit.completed])\n            existingHabit.completed = Array.from(completedSet)\n\n            const notesMap = new Map()\n            existingHabit.notes.forEach(note => {\n              notesMap.set(note.timestamp, note)\n            })\n            importedHabit.notes.forEach(note => {\n              notesMap.set(note.timestamp, note)\n            })\n            existingHabit.notes = Array.from(notesMap.values())\n                .sort((a, b) => b.timestamp - a.timestamp)\n\n            existingHabit.title = importedHabit.title\n            existingHabit.icon = importedHabit.icon\n            existingHabit.color = importedHabit.color\n            existingHabit.flag = importedHabit.flag\n          } else {\n            habitMap.set(importedhabit.habit_id, importedHabit)\n          }\n        })\n\n        const mergedHabits = Array.from(habitMap.values())\n        uni.setStorageSync('habits', mergedHabits)\n        this.loadHabits()\n        uni.showToast({\n          title: 'Êï∞ÊçÆÂ∑≤ÂêàÂπ∂',\n          icon: 'success'\n        })\n      } catch (error) {\n        console.error('Merge error:', error)\n        uni.showToast({\n          title: 'ÂêàÂπ∂Â§±Ë¥•',\n          icon: 'none'\n        })\n      }\n    },\n\n    overwriteImportData(importedHabits) {\n      try {\n        uni.setStorageSync('habits', importedHabits)\n        this.loadHabits()\n        uni.showToast({\n          title: 'ÂØºÂÖ•ÊàêÂäü',\n          icon: 'success'\n        })\n      } catch (error) {\n        console.error('Overwrite error:', error)\n        uni.showToast({\n          title: 'ÂØºÂÖ•Â§±Ë¥•',\n          icon: 'none'\n        })\n      }\n    },\n\n    async handleImport() {\n      uni.showModal({\n        title: 'ÂØºÂÖ•ËØ¥Êòé',\n        content: 'ËØ∑Á°Æ‰øùÔºö\\n1. ÈÄâÊã©ÁöÑÊòØ.jsonÊ†ºÂºèÁöÑÂ§á‰ªΩÊñá‰ª∂\\n2. Êñá‰ª∂ÊòØ‰ªéÊú¨Â∫îÁî®ÂØºÂá∫ÁöÑÊúâÊïàÊñá‰ª∂\\n3. ËÅäÂ§©ËÆ∞ÂΩï‰∏≠Â≠òÂú®ËØ•Êñá‰ª∂',\n        confirmText: 'ÂºÄÂßãÂØºÂÖ•',\n        success: (res) => {\n          if (res.confirm) {\n            this.chooseAndReadFile()\n          }\n        }\n      })\n    },\n\n    chooseAndReadFile() {\n      wx.chooseMessageFile({\n        count: 1,\n        type: 'all', // ‰øÆÊîπ‰∏∫ 'all' ËÄå‰∏çÊòØ 'file'\n        success: (res) => {\n          const tempFilePath = res.tempFiles[0].path\n          if (!tempFilePath.toLowerCase().endsWith('.json')) {\n            uni.showToast({\n              title: 'ËØ∑ÈÄâÊã©JSONÊ†ºÂºèÊñá‰ª∂',\n              icon: 'none',\n              duration: 2000\n            })\n            return\n          }\n\n          const fs = wx.getFileSystemManager()\n          fs.readFile({\n            filePath: tempFilePath,\n            encoding: 'utf8',\n            success: (readRes) => {\n              try {\n                const importData = JSON.parse(readRes.data)\n                if (!this.validateImportData(importData)) {\n                  uni.showToast({\n                    title: 'ÂØºÂÖ•Êñá‰ª∂Ê†ºÂºèÈîôËØØ',\n                    icon: 'none'\n                  })\n                  return\n                }\n                this.performImport(importData)\n              } catch (parseError) {\n                console.error('Parse error:', parseError)\n                uni.showToast({\n                  title: 'Êñá‰ª∂Ê†ºÂºèÈîôËØØ',\n                  icon: 'none'\n                })\n              }\n            },\n            fail: (err) => {\n              console.error('Read file error:', err)\n              uni.showToast({\n                title: 'ËØªÂèñÊñá‰ª∂Â§±Ë¥•',\n                icon: 'none'\n              })\n            }\n          })\n        },\n        fail: (err) => {\n          console.error('Choose file error:', err)\n          const systemInfo = uni.getSystemInfoSync()\n          const isIOS = systemInfo.platform === 'ios'\n          if (isIOS) {\n            uni.showModal({\n              title: 'ÈÄâÊã©Êñá‰ª∂Â§±Ë¥•',\n              content: 'ËØ∑Á°Æ‰øù:\\n1. ÈÄâÊã©Ê≠£Á°ÆÁöÑJSONÊñá‰ª∂\\n2. Â¶ÇÊûúÁúã‰∏çÂà∞Êñá‰ª∂ÔºåËØ∑ÈáçÊñ∞ÂèëÈÄÅÂà∞ËÅäÂ§©\\n3. ÊàñÂÖà‰øùÂ≠òÂà∞\"Êñá‰ª∂\"Â∫îÁî®ÂÜçÈÄâÊã©',\n              showCancel: false\n            })\n          } else {\n            uni.showToast({\n              title: 'ÈÄâÊã©Êñá‰ª∂Â§±Ë¥•',\n              icon: 'none',\n              duration: 2000\n            })\n          }\n        }\n      })\n    }\n  },\n\n  async onShow() {\n    // ÂÖàËé∑ÂèñÁî®Êà∑‰ø°ÊÅØ\n    this.loadUserInfo()\n\n    // Âä†ËΩΩ‰π†ÊÉØÊï∞ÊçÆ\n    this.loadHabits()\n    this.updateDateInfo()\n    this.startClock()\n    \n    // Âä†ËΩΩAIÊ∂àÊÅØ\n    if (this.habits.length === 0) {\n      this.aiMessage = {\n        emoji: message.emoji,\n        // ÊõøÊç¢ nickname Âç†‰ΩçÁ¨¶\n        content: message.content.replace('{nickname}', this.nickname)\n      }\n    }\n    else {\n      // Â¶ÇÊûúÊúâ‰π†ÊÉØÔºåË∞ÉÁî® API Ëé∑ÂèñÂª∫ËÆÆ\n      try {\n        const res = await apiService.getAISuggestion()\n        if (res.status === 'success' && res.data) {\n          this.aiMessage = {\n            emoji: res.data.emoji || default_message_list[-1].emoji,\n            content: res.data.suggestion || default_message_list[-1].content\n          }\n        }\n      } catch (error) {\n        console.error('Ëé∑Âèñ AI Âª∫ËÆÆÂ§±Ë¥•:', error)\n      }\n    }\n  },\n\n  onHide() {\n    this.stopClock()\n  },\n\n  onUnload() {\n    this.stopClock()\n  }\n})\n</script>\n\n<style>\n.container {\n  background-color: #fff;\n  color: #2c3e50;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  padding: 20rpx 40rpx;\n}\n\n.container, .ai-message {\n  box-sizing: border-box;\n}\n\n.ai-message {\n  background: #fff;\n  left: 0;\n  padding: 20rpx 0;\n  display: flex;\n  right: 0;\n  width: 100%;\n  z-index: 100;\n}\n\n.ai-message .ai-message-card {\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\n  padding: 30rpx;\n  display: flex;\n  align-items: center;\n  gap: 20rpx;\n  transition: all 0.3s ease;\n}\n\n.ai-message .ai-message-card:active {\n  opacity: 0.9;\n  transform: scale(0.98);\n}\n\n.ai-message .ai-message-card .ai-message-icon {\n  font-size: 40rpx;\n  color: #fff;\n  width: 70rpx;\n  height: 70rpx;\n  border-radius: 16rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n}\n\n.ai-message .ai-message-card .ai-message-content {\n  color: #2c3e50;\n  font-size: 28rpx;\n  line-height: 1.5;\n  flex: 1;\n}\n\n.container, .header {\n  box-sizing: border-box;\n}\n\n.header {\n  background: #fff;\n  left: 0;\n  padding: 20rpx 40rpx 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  width: 100%;\n  z-index: 100;\n}\n\n.date-info {\n  align-items: center;\n  display: flex;\n  gap: 20rpx;\n  justify-content: space-between;\n}\n\n.date-info .date-content {\n  display: flex;\n  flex-direction: column;\n  gap: 10rpx;\n}\n\n.date-info .date-content .year {\n  color: #2c3e50;\n  font-size: 32rpx;\n  font-weight: 400;\n}\n\n.date-info .date-content .month-week {\n  color: #5c6b7a;\n  font-size: 24rpx;\n}\n\n.date-info .flip-clock {\n  align-items: center;\n  background: #f5f7fa;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\n  display: flex;\n  height: 100%;\n  padding: 12rpx 24rpx;\n  gap: 8rpx;\n}\n\n.date-info .flip-clock .streak-icon {\n  font-size: 32rpx;\n  animation: flame 1.5s ease-in-out infinite;\n}\n\n.date-info .flip-clock .time-unit {\n  background: #edf0f5;\n  border-radius: 8rpx;\n  color: #2c3e50;\n  font-size: 36rpx;\n  font-weight: 500;\n  min-width: 52rpx;\n  padding: 8rpx 12rpx;\n  position: relative;\n  text-align: center;\n  transition: all .3s ease;\n}\n\n.date-info .flip-clock .streak-label {\n  color: #2c3e50;\n  font-size: 28rpx;\n  font-weight: 500;\n}\n\n@keyframes flame {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n.habit-stats, .header-row {\n  display: flex;\n}\n\n.habit-stats {\n  gap: 40rpx;\n  width: 100%;\n  margin-top: 20rpx;\n  margin-bottom: 20rpx;\n}\n\n.header-row {\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 10rpx;\n}\n\n.habit-stats .progress-bar {\n  background: #edf0f5;\n  border-radius: 16rpx;\n  height: 12rpx;\n  width: 100%;\n  overflow: hidden;\n}\n\n.habit-stats .progress-bar .progress-fill {\n  background: var(--theme-color);\n  border-radius: 16rpx;\n  height: 100%;\n  transition: width 0.3s ease;\n  width: 0;\n}\n\n.progress-fill.perfect {\n  animation: perfect-pulse 2s infinite;\n}\n\n@keyframes perfect-pulse {\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.7;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n.habits-list {\n  perspective: 1000px;\n}\n\n.habits-list .habit-card {\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\n  margin-bottom: 20rpx;\n  min-height: 250rpx;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform .6s cubic-bezier(.4, 0, .2, 1);\n  transition: transform .6s cubic-bezier(.4, 0, .2, 1), -webkit-transform .6s cubic-bezier(.4, 0, .2, 1);\n}\n\n.habits-list .habit-card.is-flipped {\n  transform: rotateY(180deg);\n}\n\n.habits-list .habit-card:active:not(.is-flipped) {\n  opacity: .9;\n  transform: scale(.98);\n}\n\n.habits-list .habit-card .card-face {\n  backface-visibility: hidden;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-sizing: border-box;\n  padding: 30rpx;\n  position: relative;\n  width: 100%;\n}\n\n.habits-list .habit-card .card-face.card-front {\n  transform: rotateY(0deg);\n  z-index: 2;\n}\n\n.habits-list .habit-card .card-face.card-back {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transform: rotateY(180deg);\n  z-index: 1;\n}\n\n.habits-list .habit-card .card-face.card-back .flag-banner {\n  align-items: center;\n  background: linear-gradient(180deg, #fff4e5, var(--theme-color));\n  border: 2rpx solid #e2e7ed;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 12rpx rgba(255, 159, 10, .15);\n  box-sizing: border-box;\n  display: flex;\n  gap: 20rpx;\n  overflow: hidden;\n  padding: 30rpx;\n  position: relative;\n  width: 100%;\n}\n\n.habits-list .habit-card .card-face.card-back .flag-banner::before {\n  background: linear-gradient(180deg, transparent, rgba(255, 159, 10, .08));\n  content: \"\";\n  height: 2rpx;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.habits-list .habit-card .card-face.card-back .flag-banner .flag-icon {\n  align-items: center;\n  background: #edf0f5;\n  border-radius: 40rpx;\n  display: flex;\n  flex-shrink: 0;\n  font-size: 48rpx;\n  height: 80rpx;\n  justify-content: center;\n  width: 80rpx;\n}\n\n.habits-list .habit-card .card-face.card-back .flag-banner .flag-text {\n  color: #2c3e50;\n  flex: 1;\n  font-size: 32rpx;\n  font-weight: 500;\n  line-height: 1.5;\n  padding: 0 20rpx;\n}\n\n.habits-list .habit-card .card-face.card-back .create-time {\n  align-items: center;\n  bottom: 20rpx;\n  display: flex;\n  gap: 10rpx;\n  justify-content: center;\n  left: 0;\n  padding: 0 30rpx;\n  position: absolute;\n  right: 0;\n}\n\n.habits-list .habit-card .card-face.card-back .create-time .time-label {\n  color: #5c6b7a;\n  font-size: 24rpx;\n}\n\n.habits-list .habit-card .card-face.card-back .create-time .time-value {\n  color: #2c3e50;\n  font-size: 24rpx;\n}\n\n.habits-list .habit-card .habit-header {\n  display: flex;\n  justify-content: space-between;\n}\n\n.habits-list .habit-card .habit-header .title-section {\n  align-items: center;\n  border-radius: 16rpx;\n  display: flex;\n  flex: 1;\n  padding: 10rpx;\n}\n\n.habits-list .habit-card .habit-header .title-section .habit-icon {\n  align-items: center;\n  background-color: var(--theme-color);\n  border-radius: 16rpx;\n  display: flex;\n  height: 70rpx;\n  justify-content: center;\n  overflow: hidden;\n  width: 70rpx;\n}\n\n.habits-list .habit-card .habit-header .title-section .habit-icon .emoji-icon {\n  align-items: center;\n  color: #fff;\n  display: flex;\n  font-size: 40rpx;\n  height: 100%;\n  justify-content: center;\n  width: 100%;\n}\n\n.habits-list .habit-card .habit-header .title-section .habit-title {\n  color: #2c3e50;\n  font-size: 28rpx;\n  margin-left: 20rpx;\n}\n\n.habits-list .habit-card .habit-header .more-actions {\n  align-items: center;\n  display: flex;\n  height: 60rpx;\n  justify-content: center;\n  padding: 10rpx;\n  width: 60rpx;\n}\n\n.habits-list .habit-card .habit-header .more-actions .more-icon {\n  color: #5c6b7a;\n  font-size: 32rpx;\n  font-weight: 700;\n}\n\n.habits-list .habit-card .habit-content {\n  position: relative;\n  z-index: 1;\n}\n\n.progress-view {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30rpx;\n}\n\n.progress-view .week-day {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n}\n\n.progress-view .week-day .day-label {\n  color: #5c6b7a;\n  font-size: 22rpx;\n  margin-bottom: 10rpx;\n}\n\n.progress-view .week-day .day-box {\n  align-items: center;\n  background: #edf0f5;\n  border-radius: 16rpx;\n  color: #2c3e50;\n  display: flex;\n  font-size: 24rpx;\n  height: 70rpx;\n  justify-content: center;\n  position: relative;\n  transition: all .2s ease;\n  width: 70rpx;\n}\n\n.progress-view .week-day .day-box:active {\n  opacity: .9;\n  transform: scale(.95);\n}\n\n.progress-view .week-day .day-box.today {\n  border: 2rpx solid var(--theme-color) !important;\n}\n\n.progress-view .week-day .day-box.today::after {\n  background-color: var(--theme-color);\n  border-radius: 50%;\n  bottom: -20rpx;\n  content: \"\";\n  height: 8rpx;\n  left: 50%;\n  position: absolute;\n  transform: translateX(-50%);\n  width: 8rpx;\n  z-index: 1;\n}\n\n.progress-view .week-day .day-box.completed {\n  animation: complete-animation .5s cubic-bezier(.4, 0, .2, 1);\n  background: var(--theme-color) !important;\n  box-shadow: 0 0 15rpx rgba(255, 159, 10, .15);\n  color: #fff !important;\n}\n\n.progress-view .week-day .day-box.completed:not(:active) {\n  animation: none;\n}\n\n.progress-view .week-day .day-box.today.completed {\n  background: var(--theme-color) !important;\n  border-color: #fff !important;\n  color: #fff !important;\n}\n\n.progress-view .week-day .day-box.today.completed::after {\n  background-color: var(--theme-color);\n  border-radius: 50%;\n  bottom: -20rpx;\n  content: \"\";\n  height: 8rpx;\n  left: 50%;\n  position: absolute;\n  transform: translateX(-50%);\n  width: 8rpx;\n  z-index: 1;\n}\n\n.progress-view .week-day .day-box.future {\n  opacity: .5;\n}\n\n.add-button {\n  position: fixed;\n  bottom: 40rpx; /* ‰øÆÊîπÔºöÂ¢ûÂä†Â∫ïÈÉ®Ë∑ùÁ¶ª */\n  right: 40rpx; /* ‰øÆÊîπÔºöÂ¢ûÂä†Âè≥‰æßË∑ùÁ¶ª */\n  width: 100rpx;\n  height: 100rpx;\n  background: var(--theme-color);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4rpx 12rpx rgba(255, 159, 10, .15);\n  z-index: 999; /* ‰øÆÊîπÔºöÂ¢ûÂä† z-index Á°Æ‰øùÂú®ÊúÄ‰∏äÂ±Ç */\n}\n\n.add-button .plus {\n  color: #fff;\n  font-size: 50rpx;\n  font-weight: 300;\n}\n\n.add-button:active {\n  opacity: .9;\n  transform: scale(.95);\n}\n\n.empty-state {\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: -200rpx;\n  padding: 40rpx;\n}\n\n.empty-state .empty-icon {\n  font-size: 120rpx;\n  margin-bottom: 30rpx;\n}\n\n.empty-state .empty-title {\n  color: #2c3e50;\n  font-size: 32rpx;\n  margin-bottom: 16rpx;\n}\n\n.empty-state .empty-desc {\n  color: #5c6b7a;\n  font-size: 28rpx;\n  line-height: 1.5;\n  text-align: center;\n}\n\n@-webkit-keyframes complete-animation {\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(1.2);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes complete-animation {\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(1.2);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n\n.view-container {\n  height: calc(100vh - 220rpx);\n  margin-top: 350rpx;\n  overflow-y: auto;\n  position: relative;\n}\n\n.view-container .view-page {\n  width: 100%;\n  will-change: transform;\n}\n\n.view-container .view-page, .view-container .view-page.slide-left-enter-active, .view-container .view-page.slide-right-enter-active {\n  transition: transform .3s ease-out;\n  transition: transform .3s ease-out, -webkit-transform .3s ease-out;\n}\n\n.view-container .view-page.slide-left-enter-from {\n  transform: translateX(100%);\n}\n\n.view-container .view-page.slide-right-enter-from {\n  transform: translateX(-100%);\n}\n\n.view-container .view-page.slide-left-enter-to, .view-container .view-page.slide-right-enter-to {\n  transform: translateX(0);\n}\n\n@-webkit-keyframes blink {\n  0%, 100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: .5;\n  }\n}\n\n@keyframes blink {\n  0%, 100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: .5;\n  }\n}\n\n.complete-order-btn {\n  background: var(--theme-color);\n  border-radius: 30rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\n  color: #fff;\n  font-size: 28rpx;\n  padding: 10rpx 30rpx;\n}\n\n.complete-order-btn:active {\n  opacity: .9;\n  transform: scale(.95);\n}\n\n.habit-card {\n  position: relative;\n  transform-origin: center center;\n  transition: all .3s linear;\n}\n\n.habit-card.is-order-mode {\n  padding-right: 100rpx;\n  transform: translateX(-60rpx);\n}\n\n.habit-card.moving-up {\n  animation: moveUp .3s linear;\n}\n\n.habit-card.moving-down {\n  animation: moveDown .3s linear;\n}\n\n.habit-card.no-interaction, .habit-card.no-interaction .habit-content, .habit-card.no-interaction .more-actions {\n  pointer-events: none;\n}\n\n.habit-card.no-interaction .order-buttons {\n  pointer-events: auto;\n}\n\n.habit-card .order-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n  position: absolute;\n  right: -70rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 10;\n}\n\n.habit-card .order-buttons .order-btn {\n  align-items: center;\n  background: #f5f7fa;\n  border-radius: 30rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\n  display: flex;\n  height: 60rpx;\n  justify-content: center;\n  width: 60rpx;\n}\n\n.habit-card .order-buttons .order-btn.disabled {\n  opacity: .5;\n  pointer-events: none;\n}\n\n.habit-card .order-buttons .order-btn:active {\n  opacity: .9;\n  transform: scale(.9);\n}\n\n.habit-card .order-buttons .order-btn .order-icon {\n  color: #2c3e50;\n  font-size: 32rpx;\n  font-weight: 700;\n}\n\n.habit-card .order-buttons .order-btn.up {\n  background: var(--theme-color);\n}\n\n.habit-card .order-buttons .order-btn.up .order-icon {\n  color: #fff;\n}\n\n.habit-card .order-buttons .order-btn.down {\n  background: #edf0f5;\n}\n\n.month-habit-card.no-interaction {\n  pointer-events: none;\n}\n\n@-webkit-keyframes moveUp {\n  0% {\n    transform: translateX(-60rpx) translateY(0);\n  }\n\n  100% {\n    transform: translateX(-60rpx) translateY(-240rpx);\n  }\n}\n\n@keyframes moveUp {\n  0% {\n    transform: translateX(-60rpx) translateY(0);\n  }\n\n  100% {\n    transform: translateX(-60rpx) translateY(-240rpx);\n  }\n}\n\n@-webkit-keyframes moveDown {\n  0% {\n    transform: translateX(-60rpx) translateY(0);\n  }\n\n  100% {\n    transform: translateX(-60rpx) translateY(240rpx);\n  }\n}\n\n@keyframes moveDown {\n  0% {\n    transform: translateX(-60rpx) translateY(0);\n  }\n\n  100% {\n    transform: translateX(-60rpx) translateY(240rpx);\n  }\n}\n\n.expand-button {\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  gap: 10rpx;\n  justify-content: center;\n  padding: 20rpx 0 10rpx;\n}\n\n.expand-button .expand-icon, .expand-button .expand-text {\n  color: #5c6b7a;\n  font-size: 24rpx;\n}\n\n.expand-button .expand-icon {\n  transition: transform .3s ease;\n  transition: transform .3s ease, -webkit-transform .3s ease;\n}\n\n.expand-button:active {\n  opacity: .9;\n}\n\n.notes-container {\n  border-top: 2rpx solid #edf0f5;\n  margin-top: 20rpx;\n  padding-top: 20rpx;\n  position: relative;\n  z-index: 1;\n}\n\n.notes-container .empty-notes {\n  align-items: center;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  padding: 30rpx;\n  width: 100%;\n}\n\n.notes-container .empty-notes text {\n  color: rgba(44, 62, 80, .6);\n  font-size: 28rpx;\n  text-align: center;\n}\n\n.notes-container .notes-list {\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-height: 400rpx;\n  overflow-y: auto;\n  width: 100%;\n}\n\n.notes-container .notes-list .note-item {\n  background: #edf0f5;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\n  box-sizing: border-box;\n  margin-bottom: 20rpx;\n  padding: 30rpx;\n  transition: all .2s ease;\n  width: 100%;\n}\n\n.notes-container .notes-list .note-item:active {\n  box-shadow: 0 2rpx 10rpx rgba(0, 0, 0, .03), 0 1rpx 4rpx rgba(0, 0, 0, .01);\n  transform: scale(.98);\n}\n\n.notes-container .notes-list .note-item .note-time {\n  align-items: center;\n  color: #8c9baa;\n  display: flex;\n  font-size: 24rpx;\n  justify-content: space-between;\n  margin-bottom: 16rpx;\n  padding-bottom: 12rpx;\n}\n\n.notes-container .notes-list .note-item .note-time .time-left {\n  align-items: center;\n  display: flex;\n  gap: 8rpx;\n}\n\n.notes-container .notes-list .note-item .note-time .time-left .date {\n  color: #5c6b7a;\n}\n\n.notes-container .notes-list .note-item .note-time .time-left .time {\n  color: #8c9baa;\n}\n\n.notes-container .notes-list .note-item .note-time .time-right {\n  color: #8c9baa;\n  font-size: 22rpx;\n  opacity: .8;\n}\n\n.notes-container .notes-list .note-item .note-content {\n  color: #2c3e50;\n  font-size: 28rpx;\n  line-height: 1.6;\n  padding-top: 4rpx;\n}\n\n.backup-actions .backup-btn {\n  align-items: center;\n  background: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 10rpx;\n}\n\n.backup-actions .backup-btn::after {\n  border: none;\n}\n\n.backup-actions .backup-btn .icon {\n  font-size: 40rpx;\n}\n\n.backup-actions .backup-btn:active {\n  opacity: .7;\n}\n</style>","import MiniProgramPage from '/Users/linsir/Experiments/uni-app/habit-ai-uniapp/habit-ai-uniapp/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}