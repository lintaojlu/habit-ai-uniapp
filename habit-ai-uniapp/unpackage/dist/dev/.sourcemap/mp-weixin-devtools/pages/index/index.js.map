{"version":3,"names":["RewardCard","_sfc_main","common_vendor","defineComponent","components","data","weekDays","habits","monthHabits","currentYear","currentMonth","yearWeek","monthWeek","showRewardCard","rewardTitle","rewardMessage","rewardStats","currentHabit","isNoInteraction","viewMode","touchStartX","touchStartTime","translateX","monthTranslateX","isOrderMode","flippedCards","expandedCards","hours","minutes","seconds","timer","computed","getTodayCompletedCount","today","Date","todayTimestamp","getFullYear","getMonth","getDate","getTime","filter","habit","completed","includes","length","methods","addHabit","index","navigateTo","url","loadHabits","_this","getStorageSync","map","_objectSpread2","icon","getCategoryIcon","category","color","isCompletedForDay","dayIndex","timestamp","getDayTimestamp","isWeekToday","targetDate","getDayDate","isFutureDay","getDateFromDayIndex","todayDate","targetDateOnly","date","monday","setDate","getDay","toggleHabitComplete","showToast","title","duration","habitIndex","findIndex","h","id","completedIndex","indexOf","push","weekStart","weekEnd","setHours","weekCompletedCount","time","name","count","label","splice","setStorageSync","vibrateShort","checkWeekCompletion","_this2","Array","fill","every","_","updateHabitCompletion","goToStats","concat","encodeURIComponent","icons","workout","diet","water","sleep","meditation","running","reading","coding","course","cleaning","cooking","finance","plants","music","art","craft","photo","singing","game","planning","mood","social","notes","writing","custom","other","getCategoryColor","colors","showActionSheet","_this3","actions","action","editHabit","toggleOrderMode","deleteHabit","systemInfo","getSystemInfoSync","itemList","item","itemColor","platform","success","res","setTimeout","_a2","tapIndex","_a","fail","err","__f__","_this4","showModal","content","confirmColor","confirm","updatedHabits","onShow","updateDateInfo","startClock","hasShownReminder","confirmText","onHide","stopClock","onUnload","wx","createPage","MiniProgramPage"],"sources":["index.vue","index.vue?type=page"],"sourcesContent":["<template>\r\n  <view class=\"container\">\r\n    <reward-card\r\n        v-if=\"showRewardCard\"\r\n        :title=\"rewardTitle\"\r\n        :message=\"rewardMessage\"\r\n        :stats=\"rewardStats\"\r\n        :habit-info=\"currentHabit\"\r\n        :mode=\"viewMode\"\r\n        :show=\"showRewardCard\"\r\n        @saveNote=\"handleSaveNote\"\r\n        @updateShow=\"showRewardCard = $event\"\r\n    />\r\n    <view class=\"header\">\r\n      <view class=\"date-info\">\r\n        <view class=\"date-content\">\r\n          <text class=\"year\">{{ currentYear }}年第{{ yearWeek }}周</text>\r\n          <text class=\"month-week\">{{ currentMonth }}月第{{ monthWeek }}周</text>\r\n        </view>\r\n        <view class=\"flip-clock\">\r\n          <text class=\"time-unit\">{{ formatNumber(hours) }}</text>\r\n          <text class=\"time-separator\">:</text>\r\n          <text class=\"time-unit\">{{ formatNumber(minutes) }}</text>\r\n          <text class=\"time-separator\">:</text>\r\n          <text class=\"time-unit\">{{ formatNumber(seconds) }}</text>\r\n        </view>\r\n      </view>\r\n      <view class=\"header-row\">\r\n        <view class=\"habit-stats\">\r\n          <view class=\"stat-item\">\r\n            <text class=\"stat-value\">{{ habits.length }}</text>\r\n            <text class=\"stat-label\">总习惯</text>\r\n          </view>\r\n          <view class=\"stat-item\">\r\n            <text class=\"stat-value\">{{ getTodayCompletedCount }}</text>\r\n            <text class=\"stat-label\">今日已打卡</text>\r\n          </view>\r\n        </view>\r\n        <view v-if=\"isOrderMode\" class=\"complete-order-btn\" @tap=\"completeOrder\">完成排序</view>\r\n        <view v-else class=\"view-switch\">\r\n          <view\r\n              class=\"switch-btn\"\r\n              :class=\"{ active: viewMode === 'week' }\"\r\n              @tap=\"switchView('week')\"\r\n          >\r\n            <text class=\"icon\">📅</text>\r\n            <text>周视图</text>\r\n          </view>\r\n          <view\r\n              class=\"switch-btn\"\r\n              :class=\"{ active: viewMode === 'month' }\"\r\n              @tap=\"switchView('month')\"\r\n          >\r\n            <text class=\"icon\">📊</text>\r\n            <text>月视图</text>\r\n          </view>\r\n        </view>\r\n        <view class=\"backup-actions\">\r\n          <button class=\"backup-btn\" @tap=\"showBackupOptions\">\r\n            <text class=\"icon\">📤</text>\r\n          </button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <view class=\"empty-state\" v-if=\"habits.length === 0\">\r\n      <text class=\"empty-icon\">📝</text>\r\n      <text class=\"empty-title\">开始培养新习惯</text>\r\n      <text class=\"empty-desc\">点击右下角的加号按钮添加你想要培养的习惯</text>\r\n    </view>\r\n\r\n    <view class=\"view-container\" @touchstart=\"handleTouchStart\" @touchend=\"handleTouchEnd\">\r\n      <view\r\n          class=\"view-page habits-list\"\r\n          :hidden=\"viewMode !== 'week'\"\r\n          :style=\"{ transform: `translateX(${translateX}px)` }\"\r\n      >\r\n        <view\r\n            v-for=\"(habit, index) in habits\"\r\n            :key=\"habit.id\"\r\n            class=\"habit-card\"\r\n            :class=\"{\r\n            'is-flipped': flippedCards[habit.id],\r\n            'is-order-mode': isOrderMode,\r\n            'no-interaction': isOrderMode,\r\n            [habit.animating]: habit.animating\r\n          }\"\r\n            @longpress=\"!isOrderMode && handleCardLongPress(habit)\"\r\n            @touchend=\"!isOrderMode && handleCardTouchEnd(habit)\"\r\n            @tap=\"!isOrderMode && goToStats(habit)\"\r\n        >\r\n          <!-- 卡片正面 -->\r\n          <view class=\"card-face card-front\">\r\n            <view class=\"habit-header\">\r\n              <view class=\"title-section\">\r\n                <view class=\"habit-icon\" :style=\"{ 'background-color': habit.color }\">\r\n                  <text class=\"emoji-icon\">{{ habit.icon }}</text>\r\n                </view>\r\n                <text class=\"habit-title\">{{ habit.title }}</text>\r\n              </view>\r\n              <view class=\"more-actions\" @tap.stop=\"showActionSheet(habit)\">\r\n                <text class=\"more-icon\">⋮</text>\r\n              </view>\r\n            </view>\r\n\r\n            <!-- 排序按钮 -->\r\n            <view class=\"order-buttons\" v-if=\"isOrderMode\">\r\n              <view\r\n                  class=\"order-btn up\"\r\n                  :class=\"{ disabled: index === 0 }\"\r\n                  @tap.stop=\"moveHabitUp(index)\"\r\n              >\r\n                <text class=\"order-icon\">↑</text>\r\n              </view>\r\n              <view\r\n                  class=\"order-btn down\"\r\n                  :class=\"{ disabled: index === habits.length - 1 }\"\r\n                  @tap.stop=\"moveHabitDown(index)\"\r\n              >\r\n                <text class=\"order-icon\">↓</text>\r\n              </view>\r\n            </view>\r\n\r\n            <!-- 习惯内容 -->\r\n            <view class=\"habit-content\">\r\n              <view class=\"progress-view\">\r\n                <view\r\n                    v-for=\"(day, i) in 7\"\r\n                    :key=\"i\"\r\n                    class=\"week-day\"\r\n                >\r\n                  <text class=\"day-label\">{{ weekDays[i] }}</text>\r\n                  <view\r\n                      class=\"day-box\"\r\n                      :class=\"{\r\n                      completed: isCompletedForDay(habit, i),\r\n                      today: isWeekToday(i),\r\n                      future: isFutureDay(i)\r\n                    }\"\r\n                      @tap.stop=\"handleDayClick(habit, i)\"\r\n                  >{{ getDayDate(i) }}\r\n                  </view>\r\n                </view>\r\n              </view>\r\n              <view class=\"expand-button\" @tap.stop=\"toggleCardExpand(habit.id)\">\r\n                <text class=\"expand-text\">{{ expandedCards[habit.id] ? '收起心得' : '查看心得' }}</text>\r\n                <text class=\"expand-icon\">{{ expandedCards[habit.id] ? '↑' : '↓' }}</text>\r\n              </view>\r\n            </view>\r\n\r\n            <!-- 笔记容器 -->\r\n            <view class=\"notes-container\" v-show=\"expandedCards[habit.id]\">\r\n              <view class=\"empty-notes\" v-if=\"getWeekNotes(habit).length === 0\">\r\n                <text>本周还没有记录心得哦~</text>\r\n              </view>\r\n              <view class=\"notes-list\" v-else>\r\n                <view\r\n                    v-for=\"(note, index2) in getWeekNotes(habit)\"\r\n                    :key=\"index2\"\r\n                    class=\"note-item\"\r\n                >\r\n                  <view class=\"note-time\">\r\n                    <view class=\"time-left\">\r\n                      <text class=\"date\">{{ formatNoteTime(note.timestamp).date }}</text>\r\n                      <text class=\"time\">{{ formatNoteTime(note.timestamp).time }}</text>\r\n                    </view>\r\n                    <view class=\"time-right\">{{ formatNoteTime(note.timestamp).relative }}</view>\r\n                  </view>\r\n                  <view class=\"note-content\">{{ note.content }}</view>\r\n                </view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n\r\n          <!-- 卡片背面 -->\r\n          <view class=\"card-face card-back\">\r\n            <view class=\"flag-banner\" v-if=\"habit.flag\">\r\n              <text class=\"flag-icon\">🎯</text>\r\n              <text class=\"flag-text\">{{ habit.flag }}</text>\r\n            </view>\r\n            <view class=\"flag-banner\" v-else>\r\n              <text class=\"flag-icon\">✨</text>\r\n              <text class=\"flag-text\">点击习惯卡片右上角的按钮\\n选择编辑添加目标！</text>\r\n            </view>\r\n            <view class=\"create-time\">\r\n              <text class=\"time-label\">创建于</text>\r\n              <text class=\"time-value\">{{ formatCreateTime(habit.createTime) }}</text>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n\r\n      <!-- 月视图 -->\r\n      <view\r\n          class=\"view-page month-habits-grid\"\r\n          :hidden=\"viewMode !== 'month'\"\r\n          :style=\"{ transform: `translateX(${translateX}px)` }\"\r\n      >\r\n        <view\r\n            v-for=\"(habit, index) in habits\"\r\n            :key=\"habit.id\"\r\n            class=\"month-habit-card\"\r\n            :class=\"{ 'no-interaction': isOrderMode }\"\r\n            @tap=\"!isOrderMode && goToStats(habit)\"\r\n        >\r\n          <view class=\"habit-info\">\r\n            <view class=\"habit-icon\" :style=\"{ 'background-color': habit.color }\">\r\n              <text class=\"emoji-icon\">{{ habit.icon }}</text>\r\n            </view>\r\n            <text class=\"habit-title\">{{ habit.title }}</text>\r\n          </view>\r\n          <view class=\"heatmap\">\r\n            <view\r\n                v-for=\"(day, dayIndex) in getDaysInMonth()\"\r\n                :key=\"dayIndex\"\r\n                class=\"heatmap-cell\"\r\n                :class=\"{\r\n                completed: isCompletedForMonthDay(habit, dayIndex + 1),\r\n                today: isMonthToday(dayIndex + 1),\r\n                future: isFutureMonthDay(dayIndex + 1)\r\n              }\"\r\n                @tap.stop=\"handleMonthDayClick(habit, dayIndex + 1)\"\r\n            >{{ dayIndex + 1 }}\r\n            </view>\r\n          </view>\r\n          <view class=\"month-stats\">\r\n            <text class=\"stat\">完成 {{ getMonthCompletionCount(habit) }} 天</text>\r\n            <text class=\"completion-rate\">{{ getMonthCompletionRate(habit) }}%</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <view class=\"add-button\" v-if=\"!isOrderMode\" @tap=\"addHabit\">\r\n      <text class=\"plus\">+</text>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nimport {defineComponent} from 'vue'\r\nimport RewardCard from '@/components/reward-card.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    RewardCard\r\n  },\r\n  data() {\r\n    return {\r\n      weekDays: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n      habits: [],\r\n      monthHabits: [],\r\n      currentYear: 0,\r\n      currentMonth: 0,\r\n      yearWeek: 0,\r\n      monthWeek: 0,\r\n      showRewardCard: false,\r\n      rewardTitle: '',\r\n      rewardMessage: '',\r\n      rewardStats: null,\r\n      currentHabit: null,\r\n      isNoInteraction: false,\r\n      viewMode: 'week',\r\n      touchStartX: 0,\r\n      touchStartTime: 0,\r\n      translateX: 0,\r\n      monthTranslateX: 0,\r\n      isOrderMode: false,\r\n      flippedCards: {},\r\n      expandedCards: {},\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n      timer: null\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    getTodayCompletedCount() {\r\n      const today = new Date()\r\n      const todayTimestamp = new Date(\r\n          today.getFullYear(),\r\n          today.getMonth(),\r\n          today.getDate()\r\n      ).getTime()\r\n      return this.habits.filter(habit =>\r\n          habit.completed.includes(todayTimestamp)\r\n      ).length\r\n    }\r\n  },\r\n\r\n\r\n  methods: {\r\n    addHabit() {\r\n      uni.navigateTo({\r\n        url: '/pages/add-habit/add-habit'\r\n      })\r\n    },\r\n\r\n    loadHabits() {\r\n      const habits = uni.getStorageSync('habits') || []\r\n      this.habits = habits.map(habit => ({\r\n        ...habit,\r\n        icon: habit.icon || this.getCategoryIcon(habit.category),\r\n        color: habit.color || '$theme-color'\r\n      }))\r\n    },\r\n\r\n    // 周视图相关方法\r\n    isCompletedForDay(habit, dayIndex) {\r\n      const timestamp = this.getDayTimestamp(dayIndex)\r\n      return habit.completed.includes(timestamp)\r\n    },\r\n\r\n    isWeekToday(dayIndex) {\r\n      const today = new Date()\r\n      const targetDate = this.getDayDate(dayIndex)\r\n      return today.getDate() === targetDate\r\n    },\r\n\r\n    isFutureDay(dayIndex) {\r\n      const today = new Date()\r\n      const targetDate = this.getDateFromDayIndex(dayIndex)\r\n      const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate())\r\n      const targetDateOnly = new Date(targetDate.getFullYear(), targetDate.getMonth(), targetDate.getDate())\r\n      return targetDateOnly > todayDate\r\n    },\r\n\r\n    getDayDate(dayIndex) {\r\n      const date = this.getDateFromDayIndex(dayIndex)\r\n      return date.getDate()\r\n    },\r\n\r\n    getDateFromDayIndex(dayIndex) {\r\n      const today = new Date()\r\n      const monday = new Date()\r\n      monday.setDate(today.getDate() - (today.getDay() === 0 ? 6 : today.getDay() - 1))\r\n      const targetDate = new Date(monday)\r\n      targetDate.setDate(monday.getDate() + dayIndex)\r\n      return targetDate\r\n    },\r\n\r\n    getDayTimestamp(dayIndex) {\r\n      const date = this.getDateFromDayIndex(dayIndex)\r\n      return new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime()\r\n    },\r\n\r\n    toggleHabitComplete(habit, dayIndex) {\r\n      const timestamp = this.getDayTimestamp(dayIndex)\r\n      const today = new Date()\r\n      const targetDate = this.getDateFromDayIndex(dayIndex)\r\n\r\n      if (targetDate > today) {\r\n        uni.showToast({\r\n          title: '未来还未来哦~',\r\n          icon: 'none',\r\n          duration: 1000\r\n        })\r\n        return\r\n      }\r\n\r\n      if (\r\n          targetDate.getDate() !== today.getDate() ||\r\n          targetDate.getMonth() !== today.getMonth() ||\r\n          targetDate.getFullYear() !== today.getFullYear()\r\n      ) {\r\n        uni.showToast({\r\n          title: '请点击习惯卡，在日历中进行补打卡',\r\n          icon: 'none',\r\n          duration: 1000\r\n        })\r\n        return\r\n      }\r\n\r\n      const habits = uni.getStorageSync('habits') || []\r\n      const habitIndex = habits.findIndex(h => h.id === habit.id)\r\n      if (habitIndex === -1) return\r\n\r\n      const completedIndex = habits[habitIndex].completed.indexOf(timestamp)\r\n      if (completedIndex === -1) {\r\n        habits[habitIndex].completed.push(timestamp)\r\n        const weekStart = this.getDateFromDayIndex(0)\r\n        const weekEnd = this.getDateFromDayIndex(6)\r\n        weekStart.setHours(0, 0, 0, 0)\r\n        weekEnd.setHours(23, 59, 59, 999)\r\n\r\n        const weekCompletedCount = habits[habitIndex].completed.filter(time => {\r\n          const date = new Date(time)\r\n          return date >= weekStart && date <= weekEnd\r\n        }).length\r\n\r\n        this.showRewardCard = true\r\n        this.rewardTitle = '打卡成功！'\r\n        this.rewardMessage = ''\r\n        this.currentHabit = {\r\n          id: habit.id,\r\n          name: habit.title,\r\n          icon: habit.icon,\r\n          color: habit.color\r\n        }\r\n        this.rewardStats = {\r\n          count: weekCompletedCount,\r\n          label: '本周已完成'\r\n        }\r\n      } else {\r\n        habits[habitIndex].completed.splice(completedIndex, 1)\r\n      }\r\n\r\n      uni.setStorageSync('habits', habits)\r\n      this.loadHabits()\r\n      uni.vibrateShort()\r\n    },\r\n\r\n    // 检查本周是否全部完成\r\n    checkWeekCompletion(habit) {\r\n      return Array(7).fill().every((_, index) => this.isCompletedForDay(habit, index))\r\n    },\r\n\r\n    // 通用方法\r\n    updateHabitCompletion(habit, timestamp) {\r\n      const habits = uni.getStorageSync('habits') || []\r\n      const habitIndex = habits.findIndex(h => h.id === habit.id)\r\n      if (habitIndex === -1) return\r\n\r\n      const completedIndex = habits[habitIndex].completed.indexOf(timestamp)\r\n      if (completedIndex === -1) {\r\n        habits[habitIndex].completed.push(timestamp)\r\n      } else {\r\n        habits[habitIndex].completed.splice(completedIndex, 1)\r\n      }\r\n\r\n      uni.setStorageSync('habits', habits)\r\n      this.loadHabits()\r\n      uni.vibrateShort()\r\n    },\r\n\r\n    goToStats(habit) {\r\n      uni.navigateTo({\r\n        url: `/pages/habit-stats/habit-stats?id=${habit.id}&title=${encodeURIComponent(habit.title)}`\r\n      })\r\n    },\r\n\r\n    getCategoryIcon(category) {\r\n      const icons = {\r\n        workout: '🏃',\r\n        diet: '🥗',\r\n        water: '💧',\r\n        sleep: '😴',\r\n        meditation: '🧘',\r\n        running: '⚽',\r\n        reading: '📚',\r\n        coding: '💻',\r\n        course: '📝',\r\n        cleaning: '🧹',\r\n        cooking: '🍳',\r\n        finance: '💰',\r\n        plants: '🌱',\r\n        music: '🎸',\r\n        art: '🎨',\r\n        craft: '🎭',\r\n        photo: '📸',\r\n        singing: '🎤',\r\n        game: '🎮',\r\n        time: '⏰',\r\n        planning: '📊',\r\n        mood: '🌈',\r\n        social: '👥',\r\n        notes: '📝',\r\n        writing: '✍️',\r\n        custom: '✨',\r\n        other: '🎯'\r\n      }\r\n      return icons[category] || '🎯'\r\n    },\r\n\r\n    getCategoryColor(category) {\r\n      const colors = {\r\n        // 健康组\r\n        workout: '#FF6B6B',\r\n        diet: '#95E1D3',\r\n        water: '#87CEEB',\r\n        sleep: '#6C5B7B',\r\n        meditation: '#9B89B3',\r\n        running: '#FF6B6B',\r\n        // 学习组\r\n        reading: '#FFD93D',\r\n        coding: '#6C5B7B',\r\n        course: '#96CEB4',\r\n        // 生活组\r\n        cleaning: '#A8E6CF',\r\n        cooking: '#F8B195',\r\n        finance: '#2A363B',\r\n        plants: '#4ECDC4',\r\n        // 兴趣组\r\n        music: '#FF8C94',\r\n        art: '#F67280',\r\n        craft: '#C06C84',\r\n        photo: '#355C7D',\r\n        singing: '#FF8C94',\r\n        game: '#3F72AF',\r\n        // 成长组\r\n        time: '#45B7D1',\r\n        planning: '#96CEB4',\r\n        mood: '#9B89B3',\r\n        social: '#F8B195'\r\n      }\r\n      return colors[category] || '$theme-color'\r\n    },\r\n\r\n    showActionSheet(habit) {\r\n      const actions = [\r\n        {\r\n          name: '编辑习惯',\r\n          action: () => this.editHabit(habit)\r\n        },\r\n        {\r\n          name: '调整顺序',\r\n          action: () => this.toggleOrderMode()\r\n        },\r\n        {\r\n          name: '删除习惯',\r\n          action: () => this.deleteHabit(habit)\r\n        }\r\n      ]\r\n\r\n      const systemInfo = uni.getSystemInfoSync()\r\n      uni.showActionSheet({\r\n        itemList: actions.map(item => item.name),\r\n        itemColor: systemInfo.platform === 'ios' ? '#007AFF' : '#2d8cf0',\r\n        success: (res) => {\r\n          if (systemInfo.platform === 'ios') {\r\n            setTimeout(() => {\r\n              actions[res.tapIndex]?.action()\r\n            }, 100)\r\n          } else {\r\n            actions[res.tapIndex]?.action()\r\n          }\r\n        },\r\n        fail: (err) => {\r\n          console.log('ActionSheet 关闭', err)\r\n        }\r\n      })\r\n    },\r\n\r\n    editHabit(habit) {\r\n      uni.navigateTo({\r\n        url: `/pages/add-habit/add-habit?id=${habit.id}`\r\n      })\r\n    },\r\n\r\n    deleteHabit(habit) {\r\n      uni.showModal({\r\n        title: '确认删除',\r\n        content: '确定要删除这个习惯吗？此操作不可恢复。',\r\n        confirmColor: '#FF3B30',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            const habits = uni.getStorageSync('habits') || []\r\n            const updatedHabits = habits.filter(h => h.id !== habit.id)\r\n            uni.setStorageSync('habits', updatedHabits)\r\n            this.loadHabits()\r\n            uni.showToast({\r\n              title: '删除成功',\r\n              icon: 'success'\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n  onShow() {\r\n    this.loadHabits()\r\n    this.updateDateInfo()\r\n    this.startClock()\r\n    const hasShownReminder = uni.getStorageSync('has_shown_data_loss_reminder')\r\n    if (!hasShownReminder) {\r\n      uni.showModal({\r\n        title: '数据安全提醒',\r\n        content: '请注意：在微信设置中选择\"清理小程序缓存\"会导致所有数据被删除。建议定期使用导出功能备份您的数据，以防数据丢失。',\r\n        confirmText: '我知道了',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            uni.setStorageSync('has_shown_data_loss_reminder', true)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n  onHide() {\r\n    this.stopClock()\r\n  },\r\n\r\n  onUnload() {\r\n    this.stopClock()\r\n  }\r\n})\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  background-color: #fff;\r\n  color: #2c3e50;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  padding: 20rpx 40rpx;\r\n}\r\n\r\n.container, .header {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.header {\r\n  background: #fff;\r\n  left: 0;\r\n  padding: 20rpx 40rpx 0;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 100;\r\n}\r\n\r\n.date-info {\r\n  align-items: center;\r\n  display: flex;\r\n  gap: 20rpx;\r\n  justify-content: space-between;\r\n}\r\n\r\n.date-info .date-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10rpx;\r\n}\r\n\r\n.date-info .date-content .year {\r\n  color: #2c3e50;\r\n  font-size: 32rpx;\r\n  font-weight: 400;\r\n}\r\n\r\n.date-info .date-content .month-week {\r\n  color: #5c6b7a;\r\n  font-size: 24rpx;\r\n}\r\n\r\n.date-info .flip-clock {\r\n  align-items: center;\r\n  background: #f5f7fa;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\r\n  display: flex;\r\n  height: 100%;\r\n  padding: 12rpx 24rpx;\r\n}\r\n\r\n.date-info .flip-clock .time-unit {\r\n  background: #edf0f5;\r\n  border-radius: 8rpx;\r\n  color: #2c3e50;\r\n  font-size: 36rpx;\r\n  font-weight: 500;\r\n  min-width: 52rpx;\r\n  padding: 8rpx 12rpx;\r\n  position: relative;\r\n  text-align: center;\r\n  transition: all .3s ease;\r\n}\r\n\r\n.date-info .flip-clock .time-unit::before {\r\n  background: rgba(0, 0, 0, .1);\r\n  content: \"\";\r\n  height: 2rpx;\r\n  left: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.date-info .flip-clock .time-separator {\r\n  animation: blink 1s infinite;\r\n  color: #ff9f0a;\r\n  font-size: 36rpx;\r\n  font-weight: 700;\r\n  margin: 0 6rpx;\r\n}\r\n\r\n.header-row {\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 10rpx;\r\n}\r\n\r\n.habit-stats, .header-row {\r\n  display: flex;\r\n}\r\n\r\n.habit-stats {\r\n  gap: 40rpx;\r\n}\r\n\r\n.habit-stats .stat-item {\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.habit-stats .stat-item .stat-value {\r\n  color: #ff9f0a;\r\n  font-size: 36rpx;\r\n  font-weight: 700;\r\n}\r\n\r\n.habit-stats .stat-item .stat-label {\r\n  color: #5c6b7a;\r\n  font-size: 24rpx;\r\n  margin-top: 4rpx;\r\n}\r\n\r\n.habits-list {\r\n  perspective: 1000px;\r\n}\r\n\r\n.habits-list .habit-card {\r\n  background: #f5f7fa;\r\n  border-radius: 20rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\r\n  margin-bottom: 20rpx;\r\n  min-height: 250rpx;\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transition: transform .6s cubic-bezier(.4, 0, .2, 1);\r\n  transition: transform .6s cubic-bezier(.4, 0, .2, 1), -webkit-transform .6s cubic-bezier(.4, 0, .2, 1);\r\n}\r\n\r\n.habits-list .habit-card.is-flipped {\r\n  transform: rotateY(180deg);\r\n}\r\n\r\n.habits-list .habit-card:active:not(.is-flipped) {\r\n  opacity: .9;\r\n  transform: scale(.98);\r\n}\r\n\r\n.habits-list .habit-card .card-face {\r\n  backface-visibility: hidden;\r\n  background: #f5f7fa;\r\n  border-radius: 20rpx;\r\n  box-sizing: border-box;\r\n  padding: 30rpx;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-front {\r\n  transform: rotateY(0deg);\r\n  z-index: 2;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-back {\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  transform: rotateY(180deg);\r\n  z-index: 1;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-back .flag-banner {\r\n  align-items: center;\r\n  background: linear-gradient(180deg, #fff4e5, #ff9f0a);\r\n  border: 2rpx solid #e2e7ed;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 12rpx rgba(255, 159, 10, .15);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  gap: 20rpx;\r\n  overflow: hidden;\r\n  padding: 30rpx;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-back .flag-banner::before {\r\n  background: linear-gradient(180deg, transparent, rgba(255, 159, 10, .08));\r\n  content: \"\";\r\n  height: 2rpx;\r\n  left: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-back .flag-banner .flag-icon {\r\n  align-items: center;\r\n  background: #edf0f5;\r\n  border-radius: 40rpx;\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  font-size: 48rpx;\r\n  height: 80rpx;\r\n  justify-content: center;\r\n  width: 80rpx;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-back .flag-banner .flag-text {\r\n  color: #2c3e50;\r\n  flex: 1;\r\n  font-size: 32rpx;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n  padding: 0 20rpx;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-back .create-time {\r\n  align-items: center;\r\n  bottom: 20rpx;\r\n  display: flex;\r\n  gap: 10rpx;\r\n  justify-content: center;\r\n  left: 0;\r\n  padding: 0 30rpx;\r\n  position: absolute;\r\n  right: 0;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-back .create-time .time-label {\r\n  color: #5c6b7a;\r\n  font-size: 24rpx;\r\n}\r\n\r\n.habits-list .habit-card .card-face.card-back .create-time .time-value {\r\n  color: #2c3e50;\r\n  font-size: 24rpx;\r\n}\r\n\r\n.habits-list .habit-card .habit-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.habits-list .habit-card .habit-header .title-section {\r\n  align-items: center;\r\n  border-radius: 16rpx;\r\n  display: flex;\r\n  flex: 1;\r\n  padding: 10rpx;\r\n}\r\n\r\n.habits-list .habit-card .habit-header .title-section .habit-icon {\r\n  align-items: center;\r\n  background-color: #ff9f0a;\r\n  border-radius: 16rpx;\r\n  display: flex;\r\n  height: 70rpx;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width: 70rpx;\r\n}\r\n\r\n.habits-list .habit-card .habit-header .title-section .habit-icon .emoji-icon {\r\n  align-items: center;\r\n  color: #fff;\r\n  display: flex;\r\n  font-size: 40rpx;\r\n  height: 100%;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n.habits-list .habit-card .habit-header .title-section .habit-title {\r\n  color: #2c3e50;\r\n  font-size: 28rpx;\r\n  margin-left: 20rpx;\r\n}\r\n\r\n.habits-list .habit-card .habit-header .more-actions {\r\n  align-items: center;\r\n  display: flex;\r\n  height: 60rpx;\r\n  justify-content: center;\r\n  padding: 10rpx;\r\n  width: 60rpx;\r\n}\r\n\r\n.habits-list .habit-card .habit-header .more-actions .more-icon {\r\n  color: #5c6b7a;\r\n  font-size: 36rpx;\r\n  font-weight: 700;\r\n}\r\n\r\n.habits-list .habit-card .habit-content {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.progress-view {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 30rpx;\r\n}\r\n\r\n.progress-view .week-day {\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.progress-view .week-day .day-label {\r\n  color: #5c6b7a;\r\n  font-size: 22rpx;\r\n  margin-bottom: 10rpx;\r\n}\r\n\r\n.progress-view .week-day .day-box {\r\n  align-items: center;\r\n  background: #edf0f5;\r\n  border-radius: 16rpx;\r\n  color: #2c3e50;\r\n  display: flex;\r\n  font-size: 24rpx;\r\n  height: 70rpx;\r\n  justify-content: center;\r\n  position: relative;\r\n  transition: all .2s ease;\r\n  width: 70rpx;\r\n}\r\n\r\n.progress-view .week-day .day-box:active {\r\n  opacity: .9;\r\n  transform: scale(.95);\r\n}\r\n\r\n.progress-view .week-day .day-box.today {\r\n  border: 2rpx solid #ff9f0a !important;\r\n}\r\n\r\n.progress-view .week-day .day-box.today::after {\r\n  background-color: #ff9f0a;\r\n  border-radius: 50%;\r\n  bottom: -20rpx;\r\n  content: \"\";\r\n  height: 8rpx;\r\n  left: 50%;\r\n  position: absolute;\r\n  transform: translateX(-50%);\r\n  width: 8rpx;\r\n  z-index: 1;\r\n}\r\n\r\n.progress-view .week-day .day-box.completed {\r\n  animation: complete-animation .5s cubic-bezier(.4, 0, .2, 1);\r\n  background: #ff9f0a !important;\r\n  box-shadow: 0 0 15rpx rgba(255, 159, 10, .15);\r\n  color: #fff !important;\r\n}\r\n\r\n.progress-view .week-day .day-box.completed:not(:active) {\r\n  animation: none;\r\n}\r\n\r\n.progress-view .week-day .day-box.today.completed {\r\n  background: #ff9f0a !important;\r\n  border-color: #fff !important;\r\n  color: #fff !important;\r\n}\r\n\r\n.progress-view .week-day .day-box.today.completed::after {\r\n  background-color: #ff9f0a;\r\n  border-radius: 50%;\r\n  bottom: -20rpx;\r\n  content: \"\";\r\n  height: 8rpx;\r\n  left: 50%;\r\n  position: absolute;\r\n  transform: translateX(-50%);\r\n  width: 8rpx;\r\n  z-index: 1;\r\n}\r\n\r\n.progress-view .week-day .day-box.future {\r\n  opacity: .5;\r\n}\r\n\r\n.add-button {\r\n  align-items: center;\r\n  background: #ff9f0a;\r\n  border-radius: 50%;\r\n  bottom: 10rpx;\r\n  box-shadow: 0 4rpx 12rpx rgba(255, 159, 10, .15);\r\n  display: flex;\r\n  height: 100rpx;\r\n  justify-content: center;\r\n  position: fixed;\r\n  right: 10rpx;\r\n  width: 100rpx;\r\n}\r\n\r\n.add-button .plus {\r\n  color: #fff;\r\n  font-size: 50rpx;\r\n  font-weight: 300;\r\n}\r\n\r\n.add-button:active {\r\n  opacity: .9;\r\n  transform: scale(.95);\r\n}\r\n\r\n.empty-state {\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  margin-top: -200rpx;\r\n  padding: 40rpx;\r\n}\r\n\r\n.empty-state .empty-icon {\r\n  font-size: 120rpx;\r\n  margin-bottom: 30rpx;\r\n}\r\n\r\n.empty-state .empty-title {\r\n  color: #2c3e50;\r\n  font-size: 32rpx;\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.empty-state .empty-desc {\r\n  color: #5c6b7a;\r\n  font-size: 28rpx;\r\n  line-height: 1.5;\r\n  text-align: center;\r\n}\r\n\r\n@-webkit-keyframes complete-animation {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n\r\n  50% {\r\n    transform: scale(1.2);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n@keyframes complete-animation {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n\r\n  50% {\r\n    transform: scale(1.2);\r\n  }\r\n\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.view-switch {\r\n  display: flex;\r\n  gap: 20rpx;\r\n}\r\n\r\n.view-switch .switch-btn {\r\n  align-items: center;\r\n  background: #f5f7fa;\r\n  border-radius: 30rpx;\r\n  color: #5c6b7a;\r\n  display: flex;\r\n  font-size: 24rpx;\r\n  gap: 10rpx;\r\n  padding: 10rpx 20rpx;\r\n}\r\n\r\n.view-switch .switch-btn .icon {\r\n  font-size: 28rpx;\r\n}\r\n\r\n.view-switch .switch-btn.active {\r\n  background: #ff9f0a;\r\n  color: #fff;\r\n}\r\n\r\n.view-switch .switch-btn:active {\r\n  opacity: .9;\r\n}\r\n\r\n.month-habits-grid {\r\n  display: grid;\r\n  gap: 20rpx;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 20rpx 0;\r\n}\r\n\r\n.month-habit-card {\r\n  background: #f5f7fa;\r\n  border-radius: 20rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15rpx;\r\n  padding: 20rpx;\r\n}\r\n\r\n.month-habit-card:active {\r\n  opacity: .9;\r\n  transform: scale(.98);\r\n}\r\n\r\n.month-habit-card .habit-info {\r\n  gap: 10rpx;\r\n}\r\n\r\n.month-habit-card .habit-info, .month-habit-card .habit-info .habit-icon {\r\n  align-items: center;\r\n  display: flex;\r\n}\r\n\r\n.month-habit-card .habit-info .habit-icon {\r\n  background-color: #ff9f0a;\r\n  border-radius: 12rpx;\r\n  height: 50rpx;\r\n  justify-content: center;\r\n  width: 50rpx;\r\n}\r\n\r\n.month-habit-card .habit-info .habit-icon .emoji-icon {\r\n  color: #fff;\r\n  font-size: 30rpx;\r\n}\r\n\r\n.month-habit-card .habit-info .habit-title {\r\n  color: #2c3e50;\r\n  flex: 1;\r\n  font-size: 24rpx;\r\n  max-width: 120rpx;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.month-habit-card .heatmap {\r\n  display: grid;\r\n  gap: 4rpx;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  padding: 10rpx 0;\r\n}\r\n\r\n.month-habit-card .heatmap .heatmap-cell {\r\n  align-items: center;\r\n  aspect-ratio: 1;\r\n  background: #edf0f5;\r\n  border-radius: 10rpx;\r\n  color: #5c6b7a;\r\n  display: flex;\r\n  font-size: 20rpx;\r\n  justify-content: center;\r\n}\r\n\r\n.month-habit-card .heatmap .heatmap-cell.completed {\r\n  background: #ff9f0a;\r\n  box-shadow: 0 0 8rpx rgba(255, 159, 10, .3);\r\n  color: #fff !important;\r\n}\r\n\r\n.month-habit-card .heatmap .heatmap-cell.today {\r\n  border: 2rpx solid #ff9f0a;\r\n  color: #ff9f0a;\r\n}\r\n\r\n.month-habit-card .heatmap .heatmap-cell.today.completed {\r\n  background: #ff9f0a !important;\r\n  border-color: #ff9f0a !important;\r\n  box-shadow: 0 0 8rpx rgba(255, 159, 10, .3);\r\n  color: #fff !important;\r\n}\r\n\r\n.month-habit-card .heatmap .heatmap-cell.future {\r\n  opacity: .5;\r\n}\r\n\r\n.month-habit-card .heatmap .heatmap-cell:active {\r\n  transform: scale(.9);\r\n}\r\n\r\n.month-habit-card .month-stats {\r\n  align-items: center;\r\n  border-top: 2rpx solid #edf0f5;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 10rpx;\r\n}\r\n\r\n.month-habit-card .month-stats .stat {\r\n  color: #5c6b7a;\r\n  font-size: 22rpx;\r\n}\r\n\r\n.month-habit-card .month-stats .completion-rate {\r\n  color: #ff9f0a;\r\n  font-size: 24rpx;\r\n  font-weight: 700;\r\n}\r\n\r\n.view-container {\r\n  height: calc(100vh - 220rpx);\r\n  margin-top: 220rpx;\r\n  overflow-y: auto;\r\n  position: relative;\r\n}\r\n\r\n.view-container .view-page {\r\n  width: 100%;\r\n  will-change: transform;\r\n}\r\n\r\n.view-container .view-page, .view-container .view-page.slide-left-enter-active, .view-container .view-page.slide-right-enter-active {\r\n  transition: transform .3s ease-out;\r\n  transition: transform .3s ease-out, -webkit-transform .3s ease-out;\r\n}\r\n\r\n.view-container .view-page.slide-left-enter-from {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.view-container .view-page.slide-right-enter-from {\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.view-container .view-page.slide-left-enter-to, .view-container .view-page.slide-right-enter-to {\r\n  transform: translateX(0);\r\n}\r\n\r\n@-webkit-keyframes blink {\r\n  0%, 100% {\r\n    opacity: 1;\r\n  }\r\n\r\n  50% {\r\n    opacity: .5;\r\n  }\r\n}\r\n\r\n@keyframes blink {\r\n  0%, 100% {\r\n    opacity: 1;\r\n  }\r\n\r\n  50% {\r\n    opacity: .5;\r\n  }\r\n}\r\n\r\n.complete-order-btn {\r\n  background: #ff9f0a;\r\n  border-radius: 30rpx;\r\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\r\n  color: #fff;\r\n  font-size: 28rpx;\r\n  padding: 10rpx 30rpx;\r\n}\r\n\r\n.complete-order-btn:active {\r\n  opacity: .9;\r\n  transform: scale(.95);\r\n}\r\n\r\n.habit-card {\r\n  position: relative;\r\n  transform-origin: center center;\r\n  transition: all .3s linear;\r\n}\r\n\r\n.habit-card.is-order-mode {\r\n  padding-right: 100rpx;\r\n  transform: translateX(-60rpx);\r\n}\r\n\r\n.habit-card.moving-up {\r\n  animation: moveUp .3s linear;\r\n}\r\n\r\n.habit-card.moving-down {\r\n  animation: moveDown .3s linear;\r\n}\r\n\r\n.habit-card.no-interaction, .habit-card.no-interaction .habit-content, .habit-card.no-interaction .more-actions {\r\n  pointer-events: none;\r\n}\r\n\r\n.habit-card.no-interaction .order-buttons {\r\n  pointer-events: auto;\r\n}\r\n\r\n.habit-card .order-buttons {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n  position: absolute;\r\n  right: -70rpx;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  z-index: 10;\r\n}\r\n\r\n.habit-card .order-buttons .order-btn {\r\n  align-items: center;\r\n  background: #f5f7fa;\r\n  border-radius: 30rpx;\r\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\r\n  display: flex;\r\n  height: 60rpx;\r\n  justify-content: center;\r\n  width: 60rpx;\r\n}\r\n\r\n.habit-card .order-buttons .order-btn.disabled {\r\n  opacity: .5;\r\n  pointer-events: none;\r\n}\r\n\r\n.habit-card .order-buttons .order-btn:active {\r\n  opacity: .9;\r\n  transform: scale(.9);\r\n}\r\n\r\n.habit-card .order-buttons .order-btn .order-icon {\r\n  color: #2c3e50;\r\n  font-size: 32rpx;\r\n  font-weight: 700;\r\n}\r\n\r\n.habit-card .order-buttons .order-btn.up {\r\n  background: #ff9f0a;\r\n}\r\n\r\n.habit-card .order-buttons .order-btn.up .order-icon {\r\n  color: #fff;\r\n}\r\n\r\n.habit-card .order-buttons .order-btn.down {\r\n  background: #edf0f5;\r\n}\r\n\r\n.month-habit-card.no-interaction {\r\n  pointer-events: none;\r\n}\r\n\r\n@-webkit-keyframes moveUp {\r\n  0% {\r\n    transform: translateX(-60rpx) translateY(0);\r\n  }\r\n\r\n  100% {\r\n    transform: translateX(-60rpx) translateY(-240rpx);\r\n  }\r\n}\r\n\r\n@keyframes moveUp {\r\n  0% {\r\n    transform: translateX(-60rpx) translateY(0);\r\n  }\r\n\r\n  100% {\r\n    transform: translateX(-60rpx) translateY(-240rpx);\r\n  }\r\n}\r\n\r\n@-webkit-keyframes moveDown {\r\n  0% {\r\n    transform: translateX(-60rpx) translateY(0);\r\n  }\r\n\r\n  100% {\r\n    transform: translateX(-60rpx) translateY(240rpx);\r\n  }\r\n}\r\n\r\n@keyframes moveDown {\r\n  0% {\r\n    transform: translateX(-60rpx) translateY(0);\r\n  }\r\n\r\n  100% {\r\n    transform: translateX(-60rpx) translateY(240rpx);\r\n  }\r\n}\r\n\r\n.expand-button {\r\n  align-items: center;\r\n  cursor: pointer;\r\n  display: flex;\r\n  gap: 10rpx;\r\n  justify-content: center;\r\n  padding: 20rpx 0 10rpx;\r\n}\r\n\r\n.expand-button .expand-icon, .expand-button .expand-text {\r\n  color: #5c6b7a;\r\n  font-size: 24rpx;\r\n}\r\n\r\n.expand-button .expand-icon {\r\n  transition: transform .3s ease;\r\n  transition: transform .3s ease, -webkit-transform .3s ease;\r\n}\r\n\r\n.expand-button:active {\r\n  opacity: .9;\r\n}\r\n\r\n.notes-container {\r\n  border-top: 2rpx solid #edf0f5;\r\n  margin-top: 20rpx;\r\n  padding-top: 20rpx;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.notes-container .empty-notes {\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  padding: 30rpx;\r\n  width: 100%;\r\n}\r\n\r\n.notes-container .empty-notes text {\r\n  color: rgba(44, 62, 80, .6);\r\n  font-size: 28rpx;\r\n  text-align: center;\r\n}\r\n\r\n.notes-container .notes-list {\r\n  box-sizing: border-box;\r\n  margin: 0 auto;\r\n  max-height: 400rpx;\r\n  overflow-y: auto;\r\n  width: 100%;\r\n}\r\n\r\n.notes-container .notes-list .note-item {\r\n  background: #edf0f5;\r\n  border-radius: 16rpx;\r\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\r\n  box-sizing: border-box;\r\n  margin-bottom: 20rpx;\r\n  padding: 30rpx;\r\n  transition: all .2s ease;\r\n  width: 100%;\r\n}\r\n\r\n.notes-container .notes-list .note-item:active {\r\n  box-shadow: 0 2rpx 10rpx rgba(0, 0, 0, .03), 0 1rpx 4rpx rgba(0, 0, 0, .01);\r\n  transform: scale(.98);\r\n}\r\n\r\n.notes-container .notes-list .note-item .note-time {\r\n  align-items: center;\r\n  color: #8c9baa;\r\n  display: flex;\r\n  font-size: 24rpx;\r\n  justify-content: space-between;\r\n  margin-bottom: 16rpx;\r\n  padding-bottom: 12rpx;\r\n}\r\n\r\n.notes-container .notes-list .note-item .note-time .time-left {\r\n  align-items: center;\r\n  display: flex;\r\n  gap: 8rpx;\r\n}\r\n\r\n.notes-container .notes-list .note-item .note-time .time-left .date {\r\n  color: #5c6b7a;\r\n}\r\n\r\n.notes-container .notes-list .note-item .note-time .time-left .time {\r\n  color: #8c9baa;\r\n}\r\n\r\n.notes-container .notes-list .note-item .note-time .time-right {\r\n  color: #8c9baa;\r\n  font-size: 22rpx;\r\n  opacity: .8;\r\n}\r\n\r\n.notes-container .notes-list .note-item .note-content {\r\n  color: #2c3e50;\r\n  font-size: 28rpx;\r\n  line-height: 1.6;\r\n  padding-top: 4rpx;\r\n}\r\n\r\n.backup-actions .backup-btn {\r\n  align-items: center;\r\n  background: transparent;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 10rpx;\r\n}\r\n\r\n.backup-actions .backup-btn::after {\r\n  border: none;\r\n}\r\n\r\n.backup-actions .backup-btn .icon {\r\n  font-size: 40rpx;\r\n}\r\n\r\n.backup-actions .backup-btn:active {\r\n  opacity: .7;\r\n}\r\n</style>","import MiniProgramPage from '/Users/linsir/Experiments/uni-app/test-3/test-3/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}