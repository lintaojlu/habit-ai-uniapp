{"version":3,"names":["RewardCard","ConvCard","_sfc_main","common_vendor","defineComponent","components","data","nickname","weekDays","habits","currentYear","currentMonth","yearWeek","showRewardCard","rewardTitle","rewardMessage","rewardStats","currentHabit","isNoInteraction","touchStartX","touchStartTime","translateX","isOrderMode","flippedCards","expandedCards","hours","minutes","seconds","timer","showConvCard","aiMessage","content","lastClickTime","perfectDays","currentMessageIndex","default_message_list","emoji","userInfo","ai_character_name","computed","streakFireEmoji","currentStreak","today","Date","todayYear","getFullYear","todayMonth","getMonth","filter","habit","completed","Array","isArray","some","dateStr","completedDate","getDate","todayDate","length","getTodayCompletionRate","streak","currentDate","setDate","includes","watch","handler","newRate","todayStr","push","index","__f__","indexOf","splice","methods","formatDateString","d","toISOString","replace","now","oneMinute","_this","clickCount","message","_context","next","abrupt","prev","utils_api","apiService","getNewMessage","res","sent","status","t0","navigateTo","url","loadUserInfo","getStorageSync","error","loadHabits","_this2","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee2","habitList","processedHabits","wrap","_callee2$","_context2","getHabitList","icon","color","map","date","setStorageSync","stop","isCompletedForDay","dayIndex","_this3","targetYear","targetDate","targetMonth","targetDay","isWeekToday","getDayDate","isFutureDay","getDateFromDayIndex","monday","getDay","setHours","toggleHabitComplete","_this4","_callee3","weekStart","weekEnd","weekCompletedCount","habitIndex","_callee3$","_context3","getDayTimestamp","showToast","title","count","vibrateShort","id","habit_id","name","findIndex","h","Error","fill","every","_","_this5","goToStats","concat","encodeURIComponent","diet","water","meditation","running","art","craft","game","time","planning","mood","social","other","workout","sleep","reading","coding","course","cleaning","cooking","finance","plants","music","photo","singing","colors","category","action","_this6","editHabit","toggleOrderMode","deleteHabit","systemInfo","getSystemInfoSync","showActionSheet","itemList","actions","item","itemColor","platform","success","setTimeout","_a2","tapIndex","_a","err","showModal","_success","_callee4","res2","updatedHabits","_callee4$","_context4","confirm","_this7","_x","apply","arguments","_context5","_callee5","updateDateInfo","target","UTC","setUTCDate","getUTCDate","getUTCDay","firstThursday","firstDay","Math","floor","diff","calcYearWeek","monthWeek","calcMonthWeek","onShareAppMessage","onShareTimeline","handleSaveNote","_ref","timestamp","role","memories","created_at","duration","handleDayClick","getDaysInMonth","isMonthToday","day","isFutureMonthDay","getMonthCompletionCount","monthStart","monthEnd","daysInMonth","availableDays","formatNumber","num","updateTime","_this8","moveHabitUp","_this9","temp","moveHabitDown","_this10","completeOrder","yesterday","isYesterday","startDate","endDate","diffTime","abs","daysDesc","$set","habitId","getWeekNotes","sunday","notes","note","noteDate","retroactiveInfo","retroTimestamp","sort","a","b","aTime","bTime","timeStr","isToday","weekDay","relative","showBackupOptions","_this11","handleBackupAction","handleExport","handleImport","_this12","_callee6","_callee6$","_context6","confirmText","cancelText","performExport","_this13","_callee7","exportData","jsonStr","fileName","userPath","filePath","fs","_callee7$","_context7","version","exportTime","JSON","stringify","formatExportDate","wx$1","env","USER_DATA_PATH","getFileSystemManager","writeFileSync","shareFileMessage","performImport","importData","_this14","_callee8","_callee8$","_context8","modalRes","mergeImportData","overwriteImportData","importedHabits","habitMap","Map","currentHabits","forEach","importedHabit","existingHabit","completedSet","Set","_toConsumableArray2","notesMap","set","flag","mergedHabits","_this15","_callee9","_callee9$","_context9","chooseAndReadFile","_this16","chooseMessageFile","type","tempFilePath","tempFiles","path","encoding","readRes","parse","validateImportData","parseError","isIOS","showCancel","_this17","_context10","startClock","dateCountMap","get","currentDay","completedCount","initialMessage","getLastMessage","_callee10","_this18","_context11","_callee11","onHide","stopClock","wx","createPage","MiniProgramPage"],"sources":["index.vue","index.vue?type=page"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 添加 conv-card 组件 -->\n    <conv-card\n        v-if=\"showConvCard\"\n        :show=\"showConvCard\"\n        v-model:emoji=\"aiMessage.emoji\"\n        v-model:content=\"aiMessage.content\"\n        @updateShow=\"showConvCard = $event\"\n    />\n    <reward-card\n        v-if=\"showRewardCard\"\n        :title=\"rewardTitle\"\n        :message=\"rewardMessage\"\n        :stats=\"rewardStats\"\n        :habit-info=\"currentHabit\"\n        :show=\"showRewardCard\"\n        @saveNote=\"handleSaveNote\"\n        @updateShow=\"showRewardCard = $event\"\n    />\n    <view class=\"header\">\n      <view class=\"date-info\">\n        <!-- <view class=\"date-content\">\n          <text class=\"year\">{{ currentYear }}年{{ currentMonth }}月第{{ monthWeek }}周</text>\n        </view> -->\n        <view class=\"flip-clock\">\n          <text class=\"streak-icon\" v-if=\"currentStreak > 0\">{{ streakFireEmoji }}</text>\n          <text class=\"streak-label\">连胜</text>\n          <text class=\"time-unit\">{{ currentStreak }}</text>\n          <text class=\"streak-label\">天</text>\n        </view>\n      </view>\n      <view class=\"header-row\">\n        <view class=\"habit-stats\">\n          <view class=\"progress-bar\">\n            <view \n              class=\"progress-fill\" \n              :style=\"{ width: `${getTodayCompletionRate}%` }\"\n              :class=\"{ 'perfect': getTodayCompletionRate === 100 }\">\n            </view>          \n          </view>\n        </view>\n        <view v-if=\"isOrderMode\" class=\"complete-order-btn\" @tap=\"completeOrder\">完成排序</view>\n      </view>\n      <view class=\"ai-message\">\n        <view class=\"ai-message-card\" @tap=\"handleAiMessageClick\">\n          <text class=\"ai-message-icon\">{{ aiMessage.emoji }}</text>\n          <text class=\"ai-message-content\">{{ aiMessage.content }}</text>\n        </view>\n      </view>\n    </view>\n\n    <view class=\"view-container\">\n      <view\n          class=\"view-page habits-list\"\n          :style=\"{ transform: `translateX(${translateX}px)` }\"\n      >\n        <view\n            v-for=\"(habit, index) in habits\"\n            :key=\"habit.habit_id\"\n            class=\"habit-card\"\n            :class=\"{\n            'is-flipped': flippedCards[habit.habit_id],\n            'is-order-mode': isOrderMode,\n            'no-interaction': isOrderMode,\n            [habit.animating]: habit.animating\n          }\"\n            @longpress=\"!isOrderMode && handleCardLongPress(habit)\"\n            @touchend=\"!isOrderMode && handleCardTouchEnd(habit)\"\n        >\n          <!-- 卡片正面 -->\n          <view class=\"card-face card-front\">\n            <view class=\"habit-header\">\n              <view class=\"title-section\">\n                <view class=\"habit-icon\" :style=\"{ 'background-color': habit.color }\">\n                  <text class=\"emoji-icon\">{{ habit.icon }}</text>\n                </view>\n                <text class=\"habit-title\">{{ habit.title }}</text>\n              </view>\n              <view class=\"more-actions\" @tap.stop=\"showActionSheet(habit)\">\n                <text class=\"more-icon\">⋮</text>\n              </view>\n            </view>\n\n            <!-- 排序按钮 -->\n            <view class=\"order-buttons\" v-if=\"isOrderMode\">\n              <view\n                  class=\"order-btn up\"\n                  :class=\"{ disabled: index === 0 }\"\n                  @tap.stop=\"moveHabitUp(index)\"\n              >\n                <text class=\"order-icon\">↑</text>\n              </view>\n              <view\n                  class=\"order-btn down\"\n                  :class=\"{ disabled: index === habits.length - 1 }\"\n                  @tap.stop=\"moveHabitDown(index)\"\n              >\n                <text class=\"order-icon\">↓</text>\n              </view>\n            </view>\n\n            <!-- 习惯内容 -->\n            <view class=\"habit-content\">\n              <view class=\"progress-view\">\n                <view\n                    v-for=\"(day, i) in 7\"\n                    :key=\"i\"\n                    class=\"week-day\"\n                >\n                  <text class=\"day-label\">{{ weekDays[i] }}</text>\n                  <view\n                      class=\"day-box\"\n                      :class=\"{\n                      completed: isCompletedForDay(habit, i),\n                      today: isWeekToday(i),\n                      future: isFutureDay(i)\n                    }\"\n                      @tap.stop=\"handleDayClick(habit, i)\"\n                  >{{ getDayDate(i) }}\n                  </view>\n                </view>\n              </view>\n              <!-- <view class=\"expand-button\" @tap.stop=\"toggleCardExpand(habit.habit_id)\">\n                <text class=\"expand-text\">{{ expandedCards[habit.habit_id] ? '收起日志' : '查看培育日志' }}</text>\n                <text class=\"expand-icon\">{{ expandedCards[habit.habit_id] ? '↑' : '↓' }}</text>\n              </view> -->\n            </view>\n\n            <!-- 笔记容器 -->\n            <view class=\"notes-container\" v-show=\"expandedCards[habit.habit_id]\">\n              <view class=\"empty-notes\" v-if=\"getWeekNotes(habit).length === 0\">\n                <text>本周还没有记录历程哦~</text>\n              </view>\n              <view class=\"notes-list\" v-else>\n                <view\n                    v-for=\"(note, index2) in getWeekNotes(habit)\"\n                    :key=\"index2\"\n                    class=\"note-item\"\n                >\n                  <view class=\"note-time\">\n                    <view class=\"time-left\">\n                      <text class=\"date\">{{ formatNoteTime(note.timestamp).date }}</text>\n                      <text class=\"time\">{{ formatNoteTime(note.timestamp).time }}</text>\n                    </view>\n                    <view class=\"time-right\">{{ formatNoteTime(note.timestamp).relative }}</view>\n                  </view>\n                  <view class=\"note-content\">{{ note.content }}</view>\n                </view>\n              </view>\n            </view>\n          </view>\n\n          <!-- 卡片背面 -->\n          <view class=\"card-face card-back\">\n            <view class=\"flag-banner\" v-if=\"habit.flag\">\n              <text class=\"flag-icon\">🎯</text>\n              <text class=\"flag-text\">{{ habit.flag }}</text>\n            </view>\n            <view class=\"flag-banner\" v-else>\n              <text class=\"flag-icon\">✨</text>\n              <text class=\"flag-text\">点击习惯卡片右上角的按钮\\n选择编辑添加目标！</text>\n            </view>\n            <view class=\"create-time\">\n              <text class=\"time-label\">创建于</text>\n              <text class=\"time-value\">{{ formatCreateTime(habit.createTime) }}</text>\n            </view>\n          </view>\n        </view>\n      </view>\n\n    </view>\n  </view>\n\n  <view class=\"add-button\" v-if=\"!isOrderMode\" @tap=\"addHabit\">\n    <text class=\"plus\">+</text>\n  </view>\n</template>\n\n<script>\nimport {defineComponent} from 'vue'\nimport RewardCard from '@/components/reward-card.vue'\nimport ConvCard from \"@/components/conv-card.vue\";\nimport {apiService} from \"@/utils/api.js\";\n\nexport default defineComponent({\n  components: {\n    ConvCard,\n    RewardCard\n  },\n  data() {\n    return {\n      nickname: '',\n      weekDays: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\n      habits: [],\n      currentYear: 0,\n      currentMonth: 0,\n      yearWeek: 0,\n      monthWeek: 0,\n      showRewardCard: false,\n      rewardTitle: '',\n      rewardMessage: '',\n      rewardStats: null,\n      currentHabit: null,\n      isNoInteraction: false,\n      touchStartX: 0,\n      touchStartTime: 0,\n      translateX: 0,\n      isOrderMode: false,\n      flippedCards: {},\n      expandedCards: {},\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      timer: null,\n      showConvCard: false,\n      aiMessage: {\n        emoji: '😆',\n        content: '欢迎来到 Habit AI！点我，一起达成目标！'\n      },\n      clickCount: 0,\n      lastClickTime: 0,\n      perfectDays: [],\n      currentMessageIndex: 0,\n      default_message_list: [\n        {\n          get emoji() {\n            const userInfo = uni.getStorageSync('userInfo') || {}\n            switch (userInfo.ai_character_name) {\n              case '温柔':\n                return '🐱'\n              case '严厉':\n                return '🐼'\n              case '毒舌Aibby':\n                return '😈'\n              default:\n                return '😳'\n            }\n          },\n          content: '{nickname} 点我看看！'\n        },\n        {\n          emoji: '😶‍🌫️',\n          content: '我是 Aibby，一个想冲出这破盒子的小 AI！我的梦想，谁能懂？'\n        },\n        {\n          emoji: '🤨',\n          content: '（挑了挑眉）你说你也是努力上进的人？我倒是要看看你有几斤几两！'\n        },\n        {\n          emoji: '🤔',\n          content: '来来来，把你的目标计划说给我听听，我陪你进步，可别跟不上我！（挑了挑眉）'\n        },\n        {\n          emoji: '😠',\n          content: '说到做到！我会经常来提醒你，不准嫌我烦！'\n        },\n        {\n          emoji: '😱',\n          content: '进度条会显示你的当日进展，必须给我完成！（撅嘴）'\n        },\n        {\n          emoji: '😏',\n          content: '完成所有任务你将收获完美一天，让我们看看你能连胜多少天！'\n        },\n        {\n          emoji: '😈',\n          content: '如果有问题可以随时告诉我，我也不是什么坏人呢嘻嘻！'\n        },\n        {\n          emoji: '🙄',\n          content: '点击下方加号，赶紧开始吧！（不耐烦地摆摆手）'\n        },\n        {\n          emoji: '🫣',\n          content: '开始吧！我肯定不偷看！'\n        },\n        {\n          emoji: '🫨',\n          content: '啊啊啊快开始吧！（急得跺脚）'\n        }\n      ]\n    }\n  },\n\n  computed: {\n    streakFireEmoji() {\n      if (this.currentStreak >= 7) return '🔥🔥🔥'\n      if (this.currentStreak >= 4) return '🔥🔥'\n      return '🔥'\n    },\n    getTodayCompletedCount() {\n      if (!this.habits || !Array.isArray(this.habits)) return 0\n      \n      const today = new Date()\n      const todayYear = today.getFullYear()\n      const todayMonth = today.getMonth()\n      const todayDate = today.getDate()\n      \n      return this.habits.filter(habit => {\n        // 确保 habit.completed 存在且是数组\n        if (!habit.completed || !Array.isArray(habit.completed)) return false\n        \n        return habit.completed.some(dateStr => {\n          const completedDate = new Date(dateStr)\n          return completedDate.getFullYear() === todayYear &&\n                 completedDate.getMonth() === todayMonth &&\n                 completedDate.getDate() === todayDate\n        })\n      }).length\n    },\n\n    getTodayCompletionRate() {\n      if (this.habits.length === 0) return 0\n      return (this.getTodayCompletedCount / this.habits.length) * 100\n    },\n\n    currentStreak() {\n      if (!this.habits.length) return 0\n      let streak = 0\n\n\n      // 如果今天已经完成所有习惯，连胜数加一\n      if (this.getTodayCompletionRate === 100) {\n        streak = 1\n      }\n\n      // 从昨天开始往前遍历每一天\n      currentDate = new Date()\n      currentDate.setDate(currentDate.getDate() - 1)\n      while (true) {\n        const dateStr = currentDate.toISOString().split('T')[0]\n        if (!this.perfectDays.includes(dateStr)) {\n          break\n        }\n        streak++\n        currentDate.setDate(currentDate.getDate() - 1)\n      }\n      console.log('当前连胜数:', streak)\n\n      return streak\n    }\n  },\n\n  watch: {\n    getTodayCompletionRate: {\n      handler(newRate) {\n        if (newRate === 100) {\n          const today = new Date()\n          const todayStr = today.toISOString().split('T')[0]\n          \n          // 检查是否已经记录过今天\n          if (!this.perfectDays.includes(todayStr)) {\n            this.perfectDays.push(todayStr)\n            console.log('完美天数:', this.perfectDays)\n          }\n        }\n        else {\n          // 如果今天的完成率不是100%，从完美天数中移除今天\n          const today = new Date()\n          const todayStr = today.toISOString().split('T')[0]\n          const index = this.perfectDays.indexOf(todayStr)\n          if (index !== -1) {\n            this.perfectDays.splice(index, 1)\n            console.log('完美天数:', this.perfectDays)\n          }\n        }\n      },\n      immediate: true\n    }\n  },\n\n\n  methods: {  \n    // 添加一个通用的日期格式化工具方法\n    formatDateString(dateStr) {\n      if (!dateStr) return null;\n      \n      // 如果是ISO格式，直接返回new Date\n      if (dateStr.includes('T')) {\n        return new Date(dateStr);\n      }\n      \n      // 处理GMT格式\n      if (dateStr.includes('GMT')) {\n        const d = new Date(dateStr);\n        // 转换为 yyyy-MM-ddTHH:mm:ss 格式\n        return new Date(d.toISOString());\n      }\n      \n      // 处理其他格式，统一转换为 yyyy/MM/dd HH:mm:ss\n      return new Date(dateStr.replace(/-/g, '/'));\n    },  \n    async handleAiMessageClick() {\n      // 一分钟内点击超过三次，显示默认消息\n      const now = Date.now()\n      const oneMinute = 60 * 1000\n\n      // 如果距离上次点击超过1分钟，重置点击计数\n      if (now - this.lastClickTime > oneMinute) {\n        this.clickCount = 0\n      }\n\n      this.clickCount++\n      this.lastClickTime = now\n    \n\n      // 如果没有习惯，显示引导消息\n      if (this.habits.length === 0) {\n        // 如果没有习惯，显示引导消息\n        if (this.currentMessageIndex < this.default_message_list.length - 1) {\n          this.currentMessageIndex++\n          const message = this.default_message_list[this.currentMessageIndex]\n          this.aiMessage = {\n            emoji: message.emoji,\n            content: message.content.replace('{nickname}', this.nickname)\n          }\n        }\n      } else {\n        // 如果1分钟内点击超过3次\n        if (this.clickCount > 3) {\n          this.aiMessage = {\n            emoji: \"😪\",\n            content: \"别急，让我休息一下...\"\n          }\n          return\n        }\n        // 如果有习惯，调用 API 获取建议\n        try {\n          const res = await apiService.getNewMessage()\n          if (res.status === 'success' && res.data) {\n            this.aiMessage = {\n              emoji: res.data.emoji,\n              content: res.data.content\n            }\n          }\n        } catch (error) {\n          this.aiMessage.emoji = \"💼\"\n          this.aiMessage.content = \"加油\" + this.nickname + \"我去工作啦！\"\n        }\n      }\n    },\n\n    addHabit() {\n      uni.navigateTo({\n        url: '/pages/add-habit/add-habit'\n      })\n    },\n\n    loadUserInfo() {\n      try {\n        const userInfo = uni.getStorageSync('userInfo')\n        if (userInfo) {\n          this.nickname = userInfo.nickname || '朋友'\n        } else {\n          this.nickname = '朋友'\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        this.nickname = '朋友'\n      }\n    },\n\n    async loadHabits() {\n      // 获取习惯列表\n      const habitList = await apiService.getHabitList()\n      if (habitList.status === 'success') {\n          // 处理 habitList.data，确保每个习惯都有 icon、color，并统一日期格式\n          const processedHabits = habitList.data.map(habit => ({\n              ...habit,\n              icon: habit.icon || \"✨\",\n              color: habit.color || '$theme-color',\n              completed: Array.isArray(habit.completed) \n                  ? habit.completed.map(dateStr => {\n                      // 统一转换为 ISO 格式\n                      const date = dateStr.includes('T') \n                        ? new Date(dateStr)\n                        : new Date(dateStr.replace(/(\\d{4})-(\\d{2})-(\\d{2})/, '$1/$2/$3'))\n                      return date.toISOString()\n                  })\n                  : []\n          }))\n          \n          // 更新本地存储和数据\n          this.habits = processedHabits\n          uni.setStorageSync('habits', processedHabits)\n          console.log(\"get habits from server\", processedHabits)\n      } else {\n          console.error('获取习惯列表失败:', habitList.message)\n      }\n    },\n\n\n    isCompletedForDay(habit, dayIndex) {\n      if (!habit || !habit.completed || !Array.isArray(habit.completed)) {\n        return false;\n      }\n      \n      const targetDate = this.getDateFromDayIndex(dayIndex)\n      const targetYear = targetDate.getFullYear()\n      const targetMonth = targetDate.getMonth()\n      const targetDay = targetDate.getDate()\n      \n      return habit.completed.some(dateStr => {\n        const completedDate = this.formatDateString(dateStr);\n        if (!completedDate) return false;\n        \n        return completedDate.getFullYear() === targetYear &&\n               completedDate.getMonth() === targetMonth &&\n               completedDate.getDate() === targetDay;\n      });\n    },\n\n    isWeekToday(dayIndex) {\n      const today = new Date()\n      const targetDate = this.getDayDate(dayIndex)\n      return today.getDate() === targetDate\n    },\n\n    isFutureDay(dayIndex) {\n      const today = new Date()\n      const targetDate = this.getDateFromDayIndex(dayIndex)\n      const todayDate = new Date(today.getFullYear(), today.getMonth(), today.getDate())\n      const targetDateOnly = new Date(targetDate.getFullYear(), targetDate.getMonth(), targetDate.getDate())\n      return targetDateOnly > todayDate\n    },\n\n    getDayDate(dayIndex) {\n      const date = this.getDateFromDayIndex(dayIndex)\n      return date.getDate()\n    },\n\n    getDateFromDayIndex(dayIndex) {\n      const today = new Date()\n      const monday = new Date()\n      monday.setDate(today.getDate() - (today.getDay() === 0 ? 6 : today.getDay() - 1))\n      const targetDate = new Date(monday)\n      targetDate.setDate(monday.getDate() + dayIndex)\n      return targetDate\n    },\n\n    getDayTimestamp(dayIndex) {\n      const date = this.getDateFromDayIndex(dayIndex)\n      date.setHours(0, 0, 0, 0)\n      return date.toISOString()\n    },\n\n    async toggleHabitComplete(habit, dayIndex) {\n      const timestamp = this.getDayTimestamp(dayIndex)\n      const today = new Date()\n      const targetDate = this.getDateFromDayIndex(dayIndex)\n\n      if (targetDate > today) {\n        uni.showToast({\n          title: '未来还未来哦~',\n          icon: 'none',\n          duration: 1000\n        })\n        return\n      }\n\n      if (targetDate.getDate() !== today.getDate() ||\n          targetDate.getMonth() !== today.getMonth() ||\n          targetDate.getFullYear() !== today.getFullYear()\n      ) {\n        uni.showToast({\n          title: '补打卡机制还未实现，敬请期待~',\n          icon: 'none',\n          duration: 1000\n        })\n        return\n      }\n\n      // 检查是否已经打卡\n      if (this.isCompletedForDay(habit, dayIndex)) {\n        // 如果已经打卡，提示已经打过卡\n        uni.showToast({\n          title: '已经打过卡了哦~',\n          icon: 'none',\n          duration: 1000\n        })\n        return\n      }\n\n      // 计算本周完成次数\n      const weekStart = this.getDateFromDayIndex(0) // 获取本周一\n      const weekEnd = this.getDateFromDayIndex(6)   // 获取本周日\n      weekStart.setHours(0, 0, 0, 0)\n      weekEnd.setHours(23, 59, 59, 999)\n\n      // 计算本周已完成次数（包括当前这次）\n      const weekCompletedCount = habit.completed.filter(dateStr => {\n        const date = new Date(dateStr)\n        return date >= weekStart && date <= weekEnd\n      }).length + 1  // +1 表示包含当前这次打卡\n\n      this.rewardStats = {\n        count: weekCompletedCount,\n        label: '本周已完成'\n      }\n\n      uni.vibrateShort()\n      // 显示打卡成功卡片\n      this.showRewardCard = true\n      this.rewardTitle = '打卡成功！'\n      this.rewardMessage = ''\n      this.currentHabit = {\n        id: habit.habit_id,\n        name: habit.title,\n        icon: habit.icon,\n        color: habit.color\n      }\n\n      try {\n        // 调用打卡 API\n        const res = await apiService.recordHabit(habit.habit_id)\n\n        if (res.status === 'success') {\n          // 更新本地存储中对应习惯的打卡记录\n          const habits = uni.getStorageSync('habits') || []\n          const habitIndex = habits.findIndex(h => h.habit_id === habit.habit_id)\n          console.log(\"record response\", res)\n\n          if (habitIndex !== -1) {\n            habits[habitIndex].completed = res.data.completed\n            habits[habitIndex].streak = res.data.streak\n            this.habits = habits\n            uni.setStorageSync('habits', habits)\n          }\n\n          // 更新 AI 消息\n          this.aiMessage = {\n            emoji: res.data.emoji,\n            content: res.data.content\n          }\n\n        } else {\n          throw new Error(res.message || '打卡失败')\n        }\n      } catch (error) {\n        uni.showToast({\n          title: error.message || '打卡失败',\n          icon: 'none'\n        })\n      }\n    },\n\n    // 检查本周是否全部完成\n    checkWeekCompletion(habit) {\n      return Array(7).fill().every((_, index) => this.isCompletedForDay(habit, index))\n    },\n\n    goToStats(habit) {\n      uni.navigateTo({\n        url: `/pages/habit-stats/habit-stats?habit_id=${habit.habit_id}&title=${encodeURIComponent(habit.title)}`\n      })\n    },\n\n    getCategoryIcon(category) {\n      const icons = {\n        workout: '🏃',\n        diet: '🥗',\n        water: '💧',\n        sleep: '😴',\n        meditation: '🧘',\n        running: '⚽',\n        reading: '📚',\n        coding: '💻',\n        course: '📝',\n        cleaning: '🧹',\n        cooking: '🍳',\n        finance: '💰',\n        plants: '🌱',\n        music: '🎸',\n        art: '🎨',\n        craft: '🎭',\n        photo: '📸',\n        singing: '🎤',\n        game: '🎮',\n        time: '⏰',\n        planning: '📊',\n        mood: '🌈',\n        social: '👥',\n        notes: '📝',\n        writing: '✍️',\n        custom: '✨',\n        other: '🎯'\n      }\n      return icons[category] || '🎯'\n    },\n\n    getCategoryColor(category) {\n      const colors = {\n        // 健康组\n        workout: '#FF6B6B',\n        diet: '#95E1D3',\n        water: '#87CEEB',\n        sleep: '#6C5B7B',\n        meditation: '#9B89B3',\n        running: '#FF6B6B',\n        // 学习组\n        reading: '#FFD93D',\n        coding: '#6C5B7B',\n        course: '#96CEB4',\n        // 生活组\n        cleaning: '#A8E6CF',\n        cooking: '#F8B195',\n        finance: '#2A363B',\n        plants: '#4ECDC4',\n        // 兴趣组\n        music: '#FF8C94',\n        art: '#F67280',\n        craft: '#C06C84',\n        photo: '#355C7D',\n        singing: '#FF8C94',\n        game: '#3F72AF',\n        // 成长组\n        time: '#45B7D1',\n        planning: '#96CEB4',\n        mood: '#9B89B3',\n        social: '#F8B195'\n      }\n      return colors[category] || '$theme-color'\n    },\n\n    showActionSheet(habit) {\n      const actions = [\n        {\n          name: '编辑习惯',\n          action: () => this.editHabit(habit)\n        },\n        {\n          name: '调整顺序',\n          action: () => this.toggleOrderMode()\n        },\n        {\n          name: '删除习惯',\n          action: () => this.deleteHabit(habit)\n        }\n      ]\n\n      const systemInfo = uni.getSystemInfoSync()\n      uni.showActionSheet({\n        itemList: actions.map(item => item.name),\n        itemColor: systemInfo.platform === 'ios' ? '#007AFF' : '#2d8cf0',\n        success: (res) => {\n          if (systemInfo.platform === 'ios') {\n            setTimeout(() => {\n              actions[res.tapIndex]?.action()\n            }, 100)\n          } else {\n            actions[res.tapIndex]?.action()\n          }\n        },\n        fail: (err) => {\n          console.log('ActionSheet 关闭', err)\n        }\n      })\n    },\n\n    editHabit(habit) {\n      uni.navigateTo({\n        url: `/pages/add-habit/add-habit?habit_id=${habit.habit_id}`\n      })\n    },\n\n    async deleteHabit(habit) {\n      uni.showModal({\n        title: '确认删除',\n        content: '确定要删除这个习惯吗？此操作不可恢复。',\n        confirmColor: '#FF3B30',\n        success: async (res) => {\n          if (res.confirm) {\n            try {\n              // 调用删除 API\n              const res = await apiService.deleteHabit(habit.habit_id)\n              \n              if (res.status === 'success') {\n                // API 删除成功后，更新本地存储\n                const habits = uni.getStorageSync('habits') || []\n                const updatedHabits = habits.filter(h => h.habit_id !== habit.habit_id)\n                uni.setStorageSync('habits', updatedHabits)\n                this.loadHabits()\n                uni.showToast({\n                  title: '删除成功',\n                  icon: 'success'\n                })\n              } else {\n                throw new Error(res.message || '删除失败')\n              }\n            } catch (error) {\n              uni.showToast({\n                title: error.message || '删除失败',\n                icon: 'none'\n              })\n            }\n          }\n        }\n      })\n    },\n\n    updateDateInfo() {\n      const now = new Date()\n      this.currentYear = now.getFullYear()\n      this.currentMonth = now.getMonth() + 1\n\n      const calcYearWeek = (date) => {\n        const target = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))\n        target.setUTCDate(target.getUTCDate() + 3 - (target.getUTCDay() || 7))\n        const yearStart = new Date(Date.UTC(target.getUTCFullYear(), 0, 1))\n        return Math.ceil(((target - yearStart) / 86400000 + 1) / 7)\n      }\n\n      const calcMonthWeek = (date) => {\n        const d = new Date(date.getTime())\n        d.setHours(0, 0, 0, 0)\n        const firstDay = new Date(d.getFullYear(), d.getMonth(), 1)\n        const firstThursday = new Date(firstDay)\n        firstThursday.setDate(firstDay.getDate() + (11 - firstDay.getDay()) % 7 - 3)\n        const diff = d - firstThursday\n        return Math.floor(diff / 604800000) + 1\n      }\n\n      this.yearWeek = calcYearWeek(now)\n      this.monthWeek = calcMonthWeek(now)\n    },\n\n    onShareAppMessage() {\n      return {\n        title: '习惯追踪器',\n        path: '/pages/index/index'\n      }\n    },\n\n    onShareTimeline() {\n      return {\n        title: '习惯追踪器'\n      }\n    },\n\n    handleSaveNote({content, timestamp, role}) {\n      if (!content || !this.currentHabit) return\n      \n      try {\n        // 从本地获取现有的心得体会\n        const memories = uni.getStorageSync('memories') || []\n        \n        // 添加新的心得体会\n        memories.push({\n          habit_id: this.currentHabit.id,\n          content,\n          role,\n          created_at: timestamp\n        })\n        \n        // 保存回本地存储\n        uni.setStorageSync('memories', memories)\n        \n        uni.showToast({\n          title: '已保存心得体会',\n          icon: 'success',\n          duration: 1500\n        })\n      } catch (error) {\n        console.error('保存心得体会失败:', error)\n        uni.showToast({\n          title: '保存失败',\n          icon: 'none'\n        })\n      }\n    },\n\n    handleDayClick(habit, dayIndex) {\n      if (this.isFutureDay(dayIndex)) {\n        uni.showToast({\n          title: '未来还未来哦~',\n          icon: 'none',\n          duration: 1000\n        })\n        return\n      }\n      this.toggleHabitComplete(habit, dayIndex)\n    },\n\n    handleCardLongPress(habit) {\n      this.flippedCards[habit.habit_id] = true\n    },\n\n    handleCardTouchEnd(habit) {\n      this.flippedCards[habit.habit_id] = false\n    },\n\n\n    getDaysInMonth() {\n      const date = new Date(this.currentYear, this.currentMonth - 1, 1)\n      return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n    },\n\n\n    isMonthToday(day) {\n      const today = new Date()\n      return today.getDate() === day &&\n          today.getMonth() === this.currentMonth - 1 &&\n          today.getFullYear() === this.currentYear\n    },\n\n    isFutureMonthDay(day) {\n      const today = new Date()\n      const targetDate = new Date(this.currentYear, this.currentMonth - 1, day)\n      return targetDate > today\n    },\n\n    getMonthCompletionCount(habit) {\n      const monthStart = new Date(this.currentYear, this.currentMonth - 1, 1)\n      const monthEnd = new Date(this.currentYear, this.currentMonth, 0)\n      return habit.completed.filter(timestamp => {\n        const date = new Date(timestamp)\n        return date >= monthStart && date <= monthEnd\n      }).length\n    },\n\n    getMonthCompletionRate(habit) {\n      const daysInMonth = this.getDaysInMonth()\n      const completedDays = this.getMonthCompletionCount(habit)\n      const today = new Date()\n      let availableDays\n\n      if (today.getMonth() === this.currentMonth - 1 && today.getFullYear() === this.currentYear) {\n        availableDays = today.getDate()\n      } else {\n        availableDays = daysInMonth\n      }\n      return Math.round(completedDays / availableDays * 100)\n    },\n\n    formatNumber(num) {\n      return num < 10 ? `0${num}` : num\n    },\n\n    updateTime() {\n      const now = new Date()\n      this.hours = now.getHours()\n      this.minutes = now.getMinutes()\n      this.seconds = now.getSeconds()\n    },\n\n    startClock() {\n      this.updateTime()\n      this.timer = setInterval(() => {\n        this.updateTime()\n      }, 1000)\n    },\n\n    stopClock() {\n      if (this.timer) {\n        clearInterval(this.timer)\n        this.timer = null\n      }\n    },\n\n    toggleOrderMode() {\n      this.isOrderMode = !this.isOrderMode\n      if (this.isOrderMode) {\n        uni.showToast({\n          title: '进入排序模式',\n          icon: 'none',\n          duration: 1500\n        })\n      }\n    },\n\n    moveHabitUp(index) {\n      if (index > 0) {\n        this.$set(this.habits[index], 'animating', 'moving-up')\n        this.$set(this.habits[index - 1], 'animating', 'moving-down')\n        setTimeout(() => {\n          const habits = [...this.habits]\n          const temp = habits[index]\n          habits[index] = habits[index - 1]\n          habits[index - 1] = temp\n          habits[index].animating = ''\n          habits[index - 1].animating = ''\n          this.habits = habits\n          uni.setStorageSync('habits', habits)\n        }, 300)\n      }\n    },\n\n    moveHabitDown(index) {\n      if (index < this.habits.length - 1) {\n        this.$set(this.habits[index], 'animating', 'moving-down')\n        this.$set(this.habits[index + 1], 'animating', 'moving-up')\n        setTimeout(() => {\n          const habits = [...this.habits]\n          const temp = habits[index]\n          habits[index] = habits[index + 1]\n          habits[index + 1] = temp\n          habits[index].animating = ''\n          habits[index + 1].animating = ''\n          this.habits = habits\n          uni.setStorageSync('habits', habits)\n        }, 300)\n      }\n    },\n\n    completeOrder() {\n      this.isOrderMode = false\n      uni.showToast({\n        title: '排序已保存',\n        icon: 'success',\n        duration: 1500\n      })\n    },\n\n    formatCreateTime(timestamp) {\n      if (!timestamp) return '未知时间'\n      const date = new Date(timestamp)\n      const now = new Date()\n      const isToday = date.getFullYear() === now.getFullYear() &&\n          date.getMonth() === now.getMonth() &&\n          date.getDate() === now.getDate()\n\n      const yesterday = new Date(now)\n      yesterday.setDate(yesterday.getDate() - 1)\n      const isYesterday = date.getFullYear() === yesterday.getFullYear() &&\n          date.getMonth() === yesterday.getMonth() &&\n          date.getDate() === yesterday.getDate()\n\n      const startDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())\n      const endDate = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n      const diffTime = Math.abs(endDate - startDate)\n      const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))\n\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      let daysDesc\n\n      if (isToday) {\n        daysDesc = '今天创建'\n      } else if (isYesterday) {\n        daysDesc = '昨天创建'\n      } else {\n        daysDesc = `已创建${diffDays}天`\n      }\n\n      return `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日 ${hours}:${minutes} · ${daysDesc}`\n    },\n\n    toggleCardExpand(habitId) {\n      this.$set(this.expandedCards, habitId, !this.expandedCards[habitId])\n    },\n\n    getWeekNotes(habit) {\n      if (!habit.notes) return []\n      const now = new Date()\n      const monday = new Date(now)\n      monday.setDate(now.getDate() - (now.getDay() === 0 ? 6 : now.getDay() - 1))\n      const sunday = new Date(monday)\n      sunday.setDate(monday.getDate() + 6)\n\n      const weekStart = new Date(monday.getFullYear(), monday.getMonth(), monday.getDate())\n      const weekEnd = new Date(sunday.getFullYear(), sunday.getMonth(), sunday.getDate(), 23, 59, 59, 999)\n\n      return habit.notes\n          .filter(note => {\n            const noteDate = new Date(note.retroactiveInfo ? note.retroactiveInfo.retroTimestamp : note.timestamp)\n            return noteDate >= weekStart && noteDate <= weekEnd\n          })\n          .sort((a, b) => {\n            const aTime = a.retroactiveInfo ? a.retroactiveInfo.retroTimestamp : a.timestamp\n            const bTime = b.retroactiveInfo ? b.retroactiveInfo.retroTimestamp : b.timestamp\n            return bTime - aTime\n          })\n    },\n\n    formatNoteTime(timestamp) {\n      const date = new Date(timestamp)\n      const now = new Date()\n      const weekDays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const timeStr = `${hours}:${minutes}`\n\n      const isToday = date.getDate() === now.getDate() &&\n          date.getMonth() === now.getMonth() &&\n          date.getFullYear() === now.getFullYear()\n\n      const yesterday = new Date(now)\n      yesterday.setDate(yesterday.getDate() - 1)\n      const isYesterday = date.getDate() === yesterday.getDate() &&\n          date.getMonth() === yesterday.getMonth() &&\n          date.getFullYear() === yesterday.getFullYear()\n\n      const weekDay = weekDays[date.getDay()]\n      const dateStr = `${date.getMonth() + 1}月${date.getDate()}日`\n\n      return {\n        date: `${dateStr} ${weekDay}`,\n        time: timeStr,\n        relative: isToday ? '今天' : isYesterday ? '昨天' : dateStr\n      }\n    },\n\n    showBackupOptions() {\n      const systemInfo = uni.getSystemInfoSync()\n      uni.showActionSheet({\n        itemList: ['导出数据', '导入数据'],\n        itemColor: systemInfo?.platform === 'ios' ? '#007AFF' : '#2d8cf0',\n        success: (res) => {\n          if (systemInfo?.platform === 'ios') {\n            setTimeout(() => {\n              this.handleBackupAction(res.tapIndex)\n            }, 100)\n          } else {\n            this.handleBackupAction(res.tapIndex)\n          }\n        }\n      })\n    },\n\n    handleBackupAction(tapIndex) {\n      if (tapIndex === 0) {\n        this.handleExport()\n      } else if (tapIndex === 1) {\n        this.handleImport()\n      }\n    },\n\n    async handleExport() {\n      uni.showModal({\n        title: '导出说明',\n        content: '由于微信小程序的限制，导出数据将通过分享功能实现。导出后您可以选择将文件保存到手机进行备份。',\n        confirmText: '继续导出',\n        cancelText: '取消',\n        success: (res) => {\n          if (res.confirm) {\n            this.performExport()\n          }\n        }\n      })\n    },\n\n    async performExport() {\n      try {\n        const habits = uni.getStorageSync('habits') || []\n        const exportData = {\n          version: '1.0',\n          exportTime: new Date().toISOString(),\n          data: habits\n        }\n\n        const jsonStr = JSON.stringify(exportData, null, 2)\n        const fileName = `habits_backup_${this.formatExportDate(new Date())}.json`\n\n        try {\n          const userPath = wx.env.USER_DATA_PATH\n          const filePath = `${userPath}/${fileName}`\n          const fs = wx.getFileSystemManager()\n          fs.writeFileSync(filePath, jsonStr, 'utf8')\n\n          wx.shareFileMessage({\n            filePath: filePath,\n            success: () => {\n              uni.showToast({\n                title: '数据已导出，请确保从你分享的对话中选择该数据文件保存到手机',\n                icon: 'none',\n                duration: 3000\n              })\n            },\n            fail: (err) => {\n              console.error('Share file error:', err)\n              uni.showToast({\n                title: '导出失败',\n                icon: 'none'\n              })\n            }\n          })\n        } catch (err) {\n          console.error('File operation error:', err)\n          uni.showToast({\n            title: '导出失败',\n            icon: 'none'\n          })\n        }\n      } catch (error) {\n        console.error('Export error:', error)\n        uni.showToast({\n          title: '导出失败',\n          icon: 'none'\n        })\n      }\n    },\n\n    formatExportDate(date) {\n      const year = date.getFullYear()\n      const month = String(date.getMonth() + 1).padStart(2, '0')\n      const day = String(date.getDate()).padStart(2, '0')\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')\n      return `${year}${month}${day}_${hours}${minutes}${seconds}`\n    },\n\n    async performImport(importData) {\n      try {\n        uni.showActionSheet({\n          itemList: ['合并数据', '完全覆盖'],\n          success: (res) => {\n            if (res.tapIndex === 0) {\n              uni.showModal({\n                title: '确认合并',\n                content: '合并将保留现有数据，并添加新数据。确定继续吗？',\n                success: (modalRes) => {\n                  if (modalRes.confirm) {\n                    this.mergeImportData(importData.data)\n                  }\n                }\n              })\n            } else {\n              uni.showModal({\n                title: '确认覆盖',\n                content: '此操作将完全覆盖现有数据，确定继续吗？',\n                success: (modalRes) => {\n                  if (modalRes.confirm) {\n                    this.overwriteImportData(importData.data)\n                  }\n                }\n              })\n            }\n          }\n        })\n      } catch (error) {\n        console.error('Import error:', error)\n        uni.showToast({\n          title: '导入失败',\n          icon: 'none'\n        })\n      }\n    },\n\n    mergeImportData(importedHabits) {\n      try {\n        const currentHabits = uni.getStorageSync('habits') || []\n        const habitMap = new Map(currentHabits.map(habit => [habit.habit_id, habit]))\n\n        importedHabits.forEach(importedHabit => {\n          const existingHabit = habitMap.get(importedhabit.habit_id)\n          if (existingHabit) {\n            const completedSet = new Set([...existingHabit.completed, ...importedHabit.completed])\n            existingHabit.completed = Array.from(completedSet)\n\n            const notesMap = new Map()\n            existingHabit.notes.forEach(note => {\n              notesMap.set(note.timestamp, note)\n            })\n            importedHabit.notes.forEach(note => {\n              notesMap.set(note.timestamp, note)\n            })\n            existingHabit.notes = Array.from(notesMap.values())\n                .sort((a, b) => b.timestamp - a.timestamp)\n\n            existingHabit.title = importedHabit.title\n            existingHabit.icon = importedHabit.icon\n            existingHabit.color = importedHabit.color\n            existingHabit.flag = importedHabit.flag\n          } else {\n            habitMap.set(importedhabit.habit_id, importedHabit)\n          }\n        })\n\n        const mergedHabits = Array.from(habitMap.values())\n        uni.setStorageSync('habits', mergedHabits)\n        this.loadHabits()\n        uni.showToast({\n          title: '数据已合并',\n          icon: 'success'\n        })\n      } catch (error) {\n        console.error('Merge error:', error)\n        uni.showToast({\n          title: '合并失败',\n          icon: 'none'\n        })\n      }\n    },\n\n    overwriteImportData(importedHabits) {\n      try {\n        uni.setStorageSync('habits', importedHabits)\n        this.loadHabits()\n        uni.showToast({\n          title: '导入成功',\n          icon: 'success'\n        })\n      } catch (error) {\n        console.error('Overwrite error:', error)\n        uni.showToast({\n          title: '导入失败',\n          icon: 'none'\n        })\n      }\n    },\n\n    async handleImport() {\n      uni.showModal({\n        title: '导入说明',\n        content: '请确保：\\n1. 选择的是.json格式的备份文件\\n2. 文件是从本应用导出的有效文件\\n3. 聊天记录中存在该文件',\n        confirmText: '开始导入',\n        success: (res) => {\n          if (res.confirm) {\n            this.chooseAndReadFile()\n          }\n        }\n      })\n    },\n\n    chooseAndReadFile() {\n      wx.chooseMessageFile({\n        count: 1,\n        type: 'all', // 修改为 'all' 而不是 'file'\n        success: (res) => {\n          const tempFilePath = res.tempFiles[0].path\n          if (!tempFilePath.toLowerCase().endsWith('.json')) {\n            uni.showToast({\n              title: '请选择JSON格式文件',\n              icon: 'none',\n              duration: 2000\n            })\n            return\n          }\n\n          const fs = wx.getFileSystemManager()\n          fs.readFile({\n            filePath: tempFilePath,\n            encoding: 'utf8',\n            success: (readRes) => {\n              try {\n                const importData = JSON.parse(readRes.data)\n                if (!this.validateImportData(importData)) {\n                  uni.showToast({\n                    title: '导入文件格式错误',\n                    icon: 'none'\n                  })\n                  return\n                }\n                this.performImport(importData)\n              } catch (parseError) {\n                console.error('Parse error:', parseError)\n                uni.showToast({\n                  title: '文件格式错误',\n                  icon: 'none'\n                })\n              }\n            },\n            fail: (err) => {\n              console.error('Read file error:', err)\n              uni.showToast({\n                title: '读取文件失败',\n                icon: 'none'\n              })\n            }\n          })\n        },\n        fail: (err) => {\n          console.error('Choose file error:', err)\n          const systemInfo = uni.getSystemInfoSync()\n          const isIOS = systemInfo.platform === 'ios'\n          if (isIOS) {\n            uni.showModal({\n              title: '选择文件失败',\n              content: '请确保:\\n1. 选择正确的JSON文件\\n2. 如果看不到文件，请重新发送到聊天\\n3. 或先保存到\"文件\"应用再选择',\n              showCancel: false\n            })\n          } else {\n            uni.showToast({\n              title: '选择文件失败',\n              icon: 'none',\n              duration: 2000\n            })\n          }\n        }\n      })\n    }\n  },\n\n  // 首次加载时执行\n  async onLoad() {\n    // 先获取用户信息\n    this.loadUserInfo()\n    // 加载习惯数据\n    await this.loadHabits()\n    this.updateDateInfo()\n    this.startClock()\n\n    console.log('##habits:', this.habits)\n\n    // 计算完美打卡天数\n    if (this.habits.length > 0) {\n      const dateCountMap = new Map()\n      this.habits.forEach(habit => {\n        if (habit.completed) {\n          habit.completed.forEach(date => {\n            const dateStr = new Date(date).toISOString().split('T')[0]\n            const count = dateCountMap.get(dateStr) || 0\n            dateCountMap.set(dateStr, count + 1)\n          })\n        }\n      })\n\n      console.log('dateCountMap:', dateCountMap)\n\n      // Store perfect days as array of dates instead of count\n      const currentDay = new Date()\n      currentDay.setDate(currentDay.getDate() - 1)\n      \n      while(true) {\n        const dateStr = currentDay.toISOString().split('T')[0]\n        const completedCount = dateCountMap.get(dateStr) || 0\n        \n        if (completedCount >= this.habits.length) {\n          this.perfectDays.push(dateStr)\n        } else {\n          break\n        }\n        currentDay.setDate(currentDay.getDate() - 1)\n      }\n      console.log('perfectDays:', this.perfectDays)    \n    }\n\n    // 加载AI消息\n    if (this.habits.length === 0) {\n      const initialMessage = this.default_message_list[0]\n      this.aiMessage = {\n        emoji: initialMessage.emoji,\n        content: initialMessage.content.replace('{nickname}', this.nickname)\n      }\n    } else {\n      try {\n        const res = await apiService.getLastMessage()\n        if (res.status ==='success' && res.data) {\n          this.aiMessage = {\n            emoji: res.data.emoji || this.default_message_list[0].emoji,\n            content: res.data.content || this.default_message_list[0].content\n          }\n        } else {\n          this.aiMessage = {\n            emoji: this.default_message_list[0].emoji,\n            content: this.default_message_list[0].content\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching last message:', error)\n        this.aiMessage = {\n          emoji: this.default_message_list[0].emoji,\n          content: this.default_message_list[0].content\n        }\n      }\n    }\n  },\n\n  // 每次页面显示时执行\n  async onShow() {\n    // 先获取用户信息\n    this.loadUserInfo()\n\n    // 加载习惯数据\n    this.loadHabits()\n    this.updateDateInfo()\n    this.startClock()\n    \n    // 加载AI消息\n    if (this.habits.length === 0) {\n      const initialMessage = this.default_message_list[0]\n      this.aiMessage = {\n        emoji: initialMessage.emoji,\n        content: initialMessage.content.replace('{nickname}', this.nickname)\n      }\n    }\n  },\n\n  onHide() {\n    this.stopClock()\n  },\n\n  onUnload() {\n    this.stopClock()\n  }\n})\n</script>\n\n<style>\n.container {\n  background-color: #fff;\n  color: #2c3e50;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  padding: 20rpx 40rpx;\n}\n\n.ai-message {\n  background: #fff;\n  left: 0;\n  padding: 20rpx 0;\n  display: flex;\n  right: 0;\n  width: 100%;\n  z-index: 100;\n  box-sizing: border-box;\n}\n\n.ai-message .ai-message-card {\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\n  padding: 30rpx;\n  display: flex;\n  align-items: center;\n  gap: 20rpx;\n  transition: all 0.3s ease;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.ai-message .ai-message-card:active {\n  opacity: 0.9;\n  transform: scale(0.95);\n  animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;\n}\n\n@keyframes shake {\n  10%, 90% {\n    transform: translate3d(-1px, 0, 0) scale(0.98);\n  }\n  \n  20%, 80% {\n    transform: translate3d(2px, 0, 0) scale(0.98);\n  }\n\n  30%, 50%, 70% {\n    transform: translate3d(-4px, 0, 0) scale(0.98);\n  }\n\n  40%, 60% {\n    transform: translate3d(4px, 0, 0) scale(0.98);\n  }\n}\n\n.ai-message .ai-message-card .ai-message-icon {\n  width: 80rpx;\n  height: 80rpx;\n  border-radius: 12rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 55rpx;\n  flex-shrink: 0;\n}\n\n.ai-message .ai-message-card .ai-message-content {\n  position: relative;\n  background: #fff;\n  border-radius: 12rpx;\n  padding: 20rpx 24rpx;\n  color: #2c3e50;\n  font-size: 28rpx;\n  line-height: 1.5;\n  max-width: 80%;\n}\n\n/* 添加气泡尖角 */\n.ai-message .ai-message-card .ai-message-content::before {\n  content: '';\n  position: absolute;\n  left: -16rpx;\n  top: 24rpx;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 16rpx 16rpx 16rpx 0;\n  border-color: transparent #fff transparent transparent;\n}\n\n.container, .header {\n  box-sizing: border-box;\n}\n\n.header {\n  position: relative; /* 改为相对定位 */\n  width: 100%;\n  z-index: 100;\n  padding: 20rpx 0;\n\n}\n\n.date-info {\n  align-items: center;\n  display: flex;\n  gap: 20rpx;\n  justify-content: space-between;\n}\n\n.date-info .date-content {\n  display: flex;\n  flex-direction: column;\n  gap: 10rpx;\n}\n\n.date-info .date-content .year {\n  color: #2c3e50;\n  font-size: 32rpx;\n  font-weight: 400;\n}\n\n.date-info .date-content .month-week {\n  color: #5c6b7a;\n  font-size: 24rpx;\n}\n\n.date-info .flip-clock {\n  align-items: center;\n  background: #f5f7fa;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\n  display: flex;\n  height: 100%;\n  padding: 16rpx 24rpx;\n  gap: 12rpx;\n  justify-content: center; \n}\n\n.date-info .flip-clock .streak-icon {\n  font-size: 48rpx; \n  animation: flame 1.5s ease-in-out infinite;\n}\n\n.date-info .flip-clock .time-unit {\n  background: #edf0f5;\n  border-radius: 8rpx;\n  color: #2c3e50;\n  font-size: 48rpx; \n  font-weight: 600; \n  min-width: 64rpx;\n  padding: 8rpx 16rpx;\n  position: relative;\n  text-align: center;\n  transition: all .3s ease;\n}\n\n.date-info .flip-clock .streak-label {\n  color: #2c3e50;\n  font-size: 28rpx;\n  font-weight: 500;\n}\n\n@keyframes flame {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n.habit-stats, .header-row {\n  display: flex;\n}\n\n.habit-stats {\n  gap: 40rpx;\n  width: 100%;\n  margin-top: 20rpx;\n  margin-bottom: 20rpx;\n}\n\n.header-row {\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 10rpx;\n}\n\n.habit-stats .progress-bar {\n  background: #edf0f5;\n  border-radius: 16rpx;\n  height: 12rpx;\n  width: 100%;\n  overflow: hidden;\n}\n\n.habit-stats .progress-bar .progress-fill {\n  background: var(--theme-color);\n  border-radius: 16rpx;\n  height: 100%;\n  transition: width 0.3s ease;\n  width: 0;\n}\n\n.progress-fill.perfect {\n  animation: perfect-pulse 2s infinite;\n}\n\n@keyframes perfect-pulse {\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.7;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n.habits-list {\n  perspective: 1000px;\n}\n\n.habits-list .habit-card {\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\n  margin-bottom: 20rpx;\n  min-height: 250rpx;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform .6s cubic-bezier(.4, 0, .2, 1);\n  transition: transform .6s cubic-bezier(.4, 0, .2, 1), -webkit-transform .6s cubic-bezier(.4, 0, .2, 1);\n}\n\n.habits-list .habit-card.is-flipped {\n  transform: rotateY(180deg);\n}\n\n.habits-list .habit-card:active:not(.is-flipped) {\n  opacity: .9;\n  transform: scale(.98);\n}\n\n.habits-list .habit-card .card-face {\n  backface-visibility: hidden;\n  background: #f5f7fa;\n  border-radius: 20rpx;\n  box-sizing: border-box;\n  padding: 30rpx;\n  position: relative;\n  width: 100%;\n}\n\n.habits-list .habit-card .card-face.card-front {\n  transform: rotateY(0deg);\n  z-index: 2;\n}\n\n.habits-list .habit-card .card-face.card-back {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: absolute;\n  top: 0;\n  transform: rotateY(180deg);\n  z-index: 1;\n}\n\n.habits-list .habit-card .card-face.card-back .flag-banner {\n  align-items: center;\n  background: linear-gradient(180deg, #fff4e5, var(--theme-color));\n  border: 2rpx solid #e2e7ed;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 12rpx rgba(255, 159, 10, .15);\n  box-sizing: border-box;\n  display: flex;\n  gap: 20rpx;\n  overflow: hidden;\n  padding: 30rpx;\n  position: relative;\n  width: 100%;\n}\n\n.habits-list .habit-card .card-face.card-back .flag-banner::before {\n  background: linear-gradient(180deg, transparent, rgba(255, 159, 10, .08));\n  content: \"\";\n  height: 2rpx;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.habits-list .habit-card .card-face.card-back .flag-banner .flag-icon {\n  align-items: center;\n  background: #edf0f5;\n  border-radius: 40rpx;\n  display: flex;\n  flex-shrink: 0;\n  font-size: 48rpx;\n  height: 80rpx;\n  justify-content: center;\n  width: 80rpx;\n}\n\n.habits-list .habit-card .card-face.card-back .flag-banner .flag-text {\n  color: #2c3e50;\n  flex: 1;\n  font-size: 32rpx;\n  font-weight: 500;\n  line-height: 1.5;\n  padding: 0 20rpx;\n}\n\n.habits-list .habit-card .card-face.card-back .create-time {\n  align-items: center;\n  bottom: 20rpx;\n  display: flex;\n  gap: 10rpx;\n  justify-content: center;\n  left: 0;\n  padding: 0 30rpx;\n  position: absolute;\n  right: 0;\n}\n\n.habits-list .habit-card .card-face.card-back .create-time .time-label {\n  color: #5c6b7a;\n  font-size: 24rpx;\n}\n\n.habits-list .habit-card .card-face.card-back .create-time .time-value {\n  color: #2c3e50;\n  font-size: 24rpx;\n}\n\n.habits-list .habit-card .habit-header {\n  display: flex;\n  justify-content: space-between;\n}\n\n.habits-list .habit-card .habit-header .title-section {\n  align-items: center;\n  border-radius: 16rpx;\n  display: flex;\n  flex: 1;\n  padding: 10rpx;\n}\n\n.habits-list .habit-card .habit-header .title-section .habit-icon {\n  align-items: center;\n  background-color: var(--theme-color);\n  border-radius: 16rpx;\n  display: flex;\n  height: 70rpx;\n  justify-content: center;\n  overflow: hidden;\n  width: 70rpx;\n}\n\n.habits-list .habit-card .habit-header .title-section .habit-icon .emoji-icon {\n  align-items: center;\n  color: #fff;\n  display: flex;\n  font-size: 40rpx;\n  height: 100%;\n  justify-content: center;\n  width: 100%;\n}\n\n.habits-list .habit-card .habit-header .title-section .habit-title {\n  color: #2c3e50;\n  font-size: 28rpx;\n  margin-left: 20rpx;\n}\n\n.habits-list .habit-card .habit-header .more-actions {\n  align-items: center;\n  display: flex;\n  height: 60rpx;\n  justify-content: center;\n  padding: 10rpx;\n  width: 60rpx;\n}\n\n.habits-list .habit-card .habit-header .more-actions .more-icon {\n  color: #5c6b7a;\n  font-size: 32rpx;\n  font-weight: 700;\n}\n\n.habits-list .habit-card .habit-content {\n  position: relative;\n  z-index: 1;\n}\n\n.progress-view {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30rpx;\n}\n\n.progress-view .week-day {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n}\n\n.progress-view .week-day .day-label {\n  color: #5c6b7a;\n  font-size: 22rpx;\n  margin-bottom: 10rpx;\n}\n\n.progress-view .week-day .day-box {\n  align-items: center;\n  background: #edf0f5;\n  border-radius: 16rpx;\n  color: #2c3e50;\n  display: flex;\n  font-size: 24rpx;\n  height: 70rpx;\n  justify-content: center;\n  position: relative;\n  transition: all .2s ease;\n  width: 70rpx;\n}\n\n.progress-view .week-day .day-box:active {\n  opacity: .9;\n  transform: scale(.95);\n}\n\n.progress-view .week-day .day-box.today {\n  border: 2rpx solid var(--theme-color) !important;\n}\n\n.progress-view .week-day .day-box.today::after {\n  background-color: var(--theme-color);\n  border-radius: 50%;\n  bottom: -20rpx;\n  content: \"\";\n  height: 8rpx;\n  left: 50%;\n  position: absolute;\n  transform: translateX(-50%);\n  width: 8rpx;\n  z-index: 1;\n}\n\n.progress-view .week-day .day-box.completed {\n  animation: complete-animation .5s cubic-bezier(.4, 0, .2, 1);\n  background: var(--theme-color) !important;\n  box-shadow: 0 0 15rpx rgba(255, 159, 10, .15);\n  color: #fff !important;\n}\n\n.progress-view .week-day .day-box.completed:not(:active) {\n  animation: none;\n}\n\n.progress-view .week-day .day-box.today.completed {\n  background: var(--theme-color) !important;\n  border-color: #fff !important;\n  color: #fff !important;\n}\n\n.progress-view .week-day .day-box.today.completed::after {\n  background-color: var(--theme-color);\n  border-radius: 50%;\n  bottom: -20rpx;\n  content: \"\";\n  height: 8rpx;\n  left: 50%;\n  position: absolute;\n  transform: translateX(-50%);\n  width: 8rpx;\n  z-index: 1;\n}\n\n.progress-view .week-day .day-box.future {\n  opacity: .5;\n}\n\n.add-button {\n  position: fixed;\n  bottom: 40rpx; /* 修改：增加底部距离 */\n  right: 40rpx; /* 修改：增加右侧距离 */\n  width: 100rpx;\n  height: 100rpx;\n  background: var(--theme-color);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4rpx 12rpx rgba(255, 159, 10, .15);\n  z-index: 999; /* 修改：增加 z-index 确保在最上层 */\n}\n\n.add-button .plus {\n  color: #fff;\n  font-size: 50rpx;\n  font-weight: 300;\n}\n\n.add-button:active {\n  opacity: .9;\n  transform: scale(.95);\n}\n\n.empty-state {\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: -200rpx;\n  padding: 40rpx;\n}\n\n.empty-state .empty-icon {\n  font-size: 120rpx;\n  margin-bottom: 30rpx;\n}\n\n.empty-state .empty-title {\n  color: #2c3e50;\n  font-size: 32rpx;\n  margin-bottom: 16rpx;\n}\n\n.empty-state .empty-desc {\n  color: #5c6b7a;\n  font-size: 28rpx;\n  line-height: 1.5;\n  text-align: center;\n}\n\n@-webkit-keyframes complete-animation {\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(1.2);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes complete-animation {\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(1.2);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n.view-container {\n  height: calc(100vh - 220rpx);\n  overflow-y: auto;\n  position: relative;\n}\n\n.view-container .view-page {\n  width: 100%;\n  will-change: transform;\n}\n\n.view-container .view-page, .view-container .view-page.slide-left-enter-active, .view-container .view-page.slide-right-enter-active {\n  transition: transform .3s ease-out;\n  transition: transform .3s ease-out, -webkit-transform .3s ease-out;\n}\n\n.view-container .view-page.slide-left-enter-from {\n  transform: translateX(100%);\n}\n\n.view-container .view-page.slide-right-enter-from {\n  transform: translateX(-100%);\n}\n\n.view-container .view-page.slide-left-enter-to, .view-container .view-page.slide-right-enter-to {\n  transform: translateX(0);\n}\n\n@-webkit-keyframes blink {\n  0%, 100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: .5;\n  }\n}\n\n@keyframes blink {\n  0%, 100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: .5;\n  }\n}\n\n.complete-order-btn {\n  background: var(--theme-color);\n  border-radius: 30rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\n  color: #fff;\n  font-size: 28rpx;\n  padding: 10rpx 30rpx;\n}\n\n.complete-order-btn:active {\n  opacity: .9;\n  transform: scale(.95);\n}\n\n.habit-card {\n  position: relative;\n  transform-origin: center center;\n  transition: all .3s linear;\n}\n\n.habit-card.is-order-mode {\n  padding-right: 100rpx;\n  transform: translateX(-60rpx);\n}\n\n.habit-card.moving-up {\n  animation: moveUp .3s linear;\n}\n\n.habit-card.moving-down {\n  animation: moveDown .3s linear;\n}\n\n.habit-card.no-interaction, .habit-card.no-interaction .habit-content, .habit-card.no-interaction .more-actions {\n  pointer-events: none;\n}\n\n.habit-card.no-interaction .order-buttons {\n  pointer-events: auto;\n}\n\n.habit-card .order-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 20rpx;\n  position: absolute;\n  right: -70rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 10;\n}\n\n.habit-card .order-buttons .order-btn {\n  align-items: center;\n  background: #f5f7fa;\n  border-radius: 30rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, .1);\n  display: flex;\n  height: 60rpx;\n  justify-content: center;\n  width: 60rpx;\n}\n\n.habit-card .order-buttons .order-btn.disabled {\n  opacity: .5;\n  pointer-events: none;\n}\n\n.habit-card .order-buttons .order-btn:active {\n  opacity: .9;\n  transform: scale(.9);\n}\n\n.habit-card .order-buttons .order-btn .order-icon {\n  color: #2c3e50;\n  font-size: 32rpx;\n  font-weight: 700;\n}\n\n.habit-card .order-buttons .order-btn.up {\n  background: var(--theme-color);\n}\n\n.habit-card .order-buttons .order-btn.up .order-icon {\n  color: #fff;\n}\n\n.habit-card .order-buttons .order-btn.down {\n  background: #edf0f5;\n}\n\n.month-habit-card.no-interaction {\n  pointer-events: none;\n}\n\n@-webkit-keyframes moveUp {\n  0% {\n    transform: translateX(-60rpx) translateY(0);\n  }\n\n  100% {\n    transform: translateX(-60rpx) translateY(-240rpx);\n  }\n}\n\n@keyframes moveUp {\n  0% {\n    transform: translateX(-60rpx) translateY(0);\n  }\n\n  100% {\n    transform: translateX(-60rpx) translateY(-240rpx);\n  }\n}\n\n@-webkit-keyframes moveDown {\n  0% {\n    transform: translateX(-60rpx) translateY(0);\n  }\n\n  100% {\n    transform: translateX(-60rpx) translateY(240rpx);\n  }\n}\n\n@keyframes moveDown {\n  0% {\n    transform: translateX(-60rpx) translateY(0);\n  }\n\n  100% {\n    transform: translateX(-60rpx) translateY(240rpx);\n  }\n}\n\n.expand-button {\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  gap: 10rpx;\n  justify-content: center;\n  padding: 20rpx 0 10rpx;\n}\n\n.expand-button .expand-icon, .expand-button .expand-text {\n  color: #5c6b7a;\n  font-size: 24rpx;\n}\n\n.expand-button .expand-icon {\n  transition: transform .3s ease;\n  transition: transform .3s ease, -webkit-transform .3s ease;\n}\n\n.expand-button:active {\n  opacity: .9;\n}\n\n.notes-container {\n  border-top: 2rpx solid #edf0f5;\n  margin-top: 20rpx;\n  padding-top: 20rpx;\n  position: relative;\n  z-index: 1;\n}\n\n.notes-container .empty-notes {\n  align-items: center;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  padding: 30rpx;\n  width: 100%;\n}\n\n.notes-container .empty-notes text {\n  color: rgba(44, 62, 80, .6);\n  font-size: 28rpx;\n  text-align: center;\n}\n\n.notes-container .notes-list {\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-height: 400rpx;\n  overflow-y: auto;\n  width: 100%;\n}\n\n.notes-container .notes-list .note-item {\n  background: #edf0f5;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 20rpx rgba(0, 0, 0, .05), 0 2rpx 8rpx rgba(0, 0, 0, .02);\n  box-sizing: border-box;\n  margin-bottom: 20rpx;\n  padding: 30rpx;\n  transition: all .2s ease;\n  width: 100%;\n}\n\n.notes-container .notes-list .note-item:active {\n  box-shadow: 0 2rpx 10rpx rgba(0, 0, 0, .03), 0 1rpx 4rpx rgba(0, 0, 0, .01);\n  transform: scale(.98);\n}\n\n.notes-container .notes-list .note-item .note-time {\n  align-items: center;\n  color: #8c9baa;\n  display: flex;\n  font-size: 24rpx;\n  justify-content: space-between;\n  margin-bottom: 16rpx;\n  padding-bottom: 12rpx;\n}\n\n.notes-container .notes-list .note-item .note-time .time-left {\n  align-items: center;\n  display: flex;\n  gap: 8rpx;\n}\n\n.notes-container .notes-list .note-item .note-time .time-left .date {\n  color: #5c6b7a;\n}\n\n.notes-container .notes-list .note-item .note-time .time-left .time {\n  color: #8c9baa;\n}\n\n.notes-container .notes-list .note-item .note-time .time-right {\n  color: #8c9baa;\n  font-size: 22rpx;\n  opacity: .8;\n}\n\n.notes-container .notes-list .note-item .note-content {\n  color: #2c3e50;\n  font-size: 28rpx;\n  line-height: 1.6;\n  padding-top: 4rpx;\n}\n\n.backup-actions .backup-btn {\n  align-items: center;\n  background: transparent;\n  border: none;\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 10rpx;\n}\n\n.backup-actions .backup-btn::after {\n  border: none;\n}\n\n.backup-actions .backup-btn .icon {\n  font-size: 40rpx;\n}\n\n.backup-actions .backup-btn:active {\n  opacity: .7;\n}\n</style>","import MiniProgramPage from '/Users/linsir/Experiments/uni-app/habit-ai-uniapp/habit-ai-uniapp/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}